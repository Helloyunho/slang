[
  {
    "kind": "class",
    "name": "User",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/user.ts",
      "line": 10,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "UserPayload",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "UserPayload"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/user.ts",
            "line": 54,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/user.ts",
            "line": 11,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "username",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/user.ts",
            "line": 12,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "discriminator",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/user.ts",
            "line": 13,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "avatar",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/user.ts",
            "line": 14,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "bot",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/user.ts",
            "line": 15,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "system",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/user.ts",
            "line": 16,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "mfaEnabled",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/user.ts",
            "line": 17,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "locale",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/user.ts",
            "line": 18,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "verified",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/user.ts",
            "line": 19,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "email",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/user.ts",
            "line": 20,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "UserFlagsManager",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "UserFlagsManager"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "flags",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/user.ts",
            "line": 21,
            "col": 2
          }
        },
        {
          "jsDoc": "Nitro type of the User.\n\n0 = No Nitro\n1 = Classic Nitro\n2 = Regular Nitro",
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "0",
                "kind": "literal",
                "literal": {
                  "kind": "number",
                  "number": 0.0
                }
              },
              {
                "repr": "1",
                "kind": "literal",
                "literal": {
                  "kind": "number",
                  "number": 1.0
                }
              },
              {
                "repr": "2",
                "kind": "literal",
                "literal": {
                  "kind": "number",
                  "number": 2.0
                }
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "premiumType",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/user.ts",
            "line": 29,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "UserFlagsManager",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "UserFlagsManager"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "publicFlags",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/user.ts",
            "line": 30,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "tag",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/user.ts",
            "line": 32,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "nickMention",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/user.ts",
            "line": 36,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "mention",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/user.ts",
            "line": 40,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "avatarURL",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "format",
                  "optional": false,
                  "tsType": {
                    "repr": "ImageFormats",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "ImageFormats"
                    }
                  }
                },
                "right": "<UNIMPLEMENTED>",
                "tsType": null
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "size",
                  "optional": false,
                  "tsType": {
                    "repr": "ImageSize",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "ImageSize"
                    }
                  }
                },
                "right": "<UNIMPLEMENTED>",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/user.ts",
            "line": 44,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "defaultAvatarURL",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/user.ts",
            "line": 50,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "readFromData",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "UserPayload",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "UserPayload"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/user.ts",
            "line": 71,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "toString",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/user.ts",
            "line": 90,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createDM",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "DMChannel",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "DMChannel"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/user.ts",
            "line": 94,
            "col": 2
          }
        }
      ],
      "extends": "SnowflakeBase",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "enum",
    "name": "ChannelTypes",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/channel.ts",
      "line": 121,
      "col": 0
    },
    "jsDoc": null,
    "enumDef": {
      "members": [
        {
          "name": "GUILD_TEXT",
          "jsDoc": null
        },
        {
          "name": "DM",
          "jsDoc": null
        },
        {
          "name": "GUILD_VOICE",
          "jsDoc": null
        },
        {
          "name": "GROUP_DM",
          "jsDoc": null
        },
        {
          "name": "GUILD_CATEGORY",
          "jsDoc": null
        },
        {
          "name": "GUILD_NEWS",
          "jsDoc": null
        },
        {
          "name": "GUILD_STORE",
          "jsDoc": null
        }
      ]
    }
  },
  {
    "kind": "interface",
    "name": "ChannelMention",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/channel.ts",
      "line": 171,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/channel.ts",
            "line": 172,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "guild_id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/channel.ts",
            "line": 173,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "type",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/channel.ts",
            "line": 174,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "ChannelTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ChannelTypes"
            }
          },
          "typeParams": []
        },
        {
          "name": "name",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/channel.ts",
            "line": 175,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "ChannelPayload",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/channel.ts",
      "line": 7,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/channel.ts",
            "line": 8,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "type",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/channel.ts",
            "line": 9,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "ChannelTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ChannelTypes"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "FollowedChannel",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/channel.ts",
      "line": 314,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "channel_id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/channel.ts",
            "line": 315,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "webhook_id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/channel.ts",
            "line": 316,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GuildNewsChannelPayload",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/channel.ts",
      "line": 33,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [
        {
          "repr": "TextChannelPayload",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "TextChannelPayload"
          }
        },
        {
          "repr": "GuildChannelPayload",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GuildChannelPayload"
          }
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "topic",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/channel.ts",
            "line": 36,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "nsfw",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/channel.ts",
            "line": 37,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GuildCategoryChannelPayload",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/channel.ts",
      "line": 55,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [
        {
          "repr": "ChannelPayload",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "ChannelPayload"
          }
        },
        {
          "repr": "GuildChannelPayload",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GuildChannelPayload"
          }
        }
      ],
      "methods": [],
      "properties": [],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GuildChannelPayload",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/channel.ts",
      "line": 17,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [
        {
          "repr": "ChannelPayload",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "ChannelPayload"
          }
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "guild_id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/channel.ts",
            "line": 18,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "name",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/channel.ts",
            "line": 19,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "position",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/channel.ts",
            "line": 20,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "permission_overwrites",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/channel.ts",
            "line": 21,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "Overwrite",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Overwrite"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "parent_id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/channel.ts",
            "line": 22,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GuildTextChannelPayload",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/channel.ts",
      "line": 25,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [
        {
          "repr": "TextChannelPayload",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "TextChannelPayload"
          }
        },
        {
          "repr": "GuildChannelPayload",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GuildChannelPayload"
          }
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "nsfw",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/channel.ts",
            "line": 28,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "rate_limit_per_user",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/channel.ts",
            "line": 29,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "topic",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/channel.ts",
            "line": 30,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GuildVoiceChannelPayload",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/channel.ts",
      "line": 40,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [
        {
          "repr": "GuildChannelPayload",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GuildChannelPayload"
          }
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "bitrate",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/channel.ts",
            "line": 41,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "user_limit",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/channel.ts",
            "line": 42,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GroupDMChannelPayload",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/channel.ts",
      "line": 49,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [
        {
          "repr": "DMChannelPayload",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "DMChannelPayload"
          }
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "name",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/channel.ts",
            "line": 50,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "icon",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/channel.ts",
            "line": 51,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "owner_id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/channel.ts",
            "line": 52,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "MessageOptions",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/channel.ts",
      "line": 159,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "tts",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/channel.ts",
            "line": 160,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "embed",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/channel.ts",
            "line": 161,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Embed",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Embed"
            }
          },
          "typeParams": []
        },
        {
          "name": "file",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/channel.ts",
            "line": 162,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "MessageAttachment",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MessageAttachment"
            }
          },
          "typeParams": []
        },
        {
          "name": "files",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/channel.ts",
            "line": 163,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "MessageAttachment",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "MessageAttachment"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "allowedMentions",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/channel.ts",
            "line": 164,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [
                {
                  "name": "parse",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "everyone",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "everyone"
                        }
                      },
                      {
                        "repr": "users",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "users"
                        }
                      },
                      {
                        "repr": "roles",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "roles"
                        }
                      }
                    ]
                  },
                  "typeParams": []
                },
                {
                  "name": "roles",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  },
                  "typeParams": []
                },
                {
                  "name": "users",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  },
                  "typeParams": []
                }
              ],
              "callSignatures": [],
              "indexSignatures": []
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "CollectorFilter",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/collectors.ts",
      "line": 5,
      "col": 0
    },
    "jsDoc": null,
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "fnOrConstructor",
        "fnOrConstructor": {
          "constructor": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "boolean",
                "kind": "keyword",
                "keyword": "boolean"
              },
              {
                "repr": "Promise",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": [
                    {
                      "repr": "boolean",
                      "kind": "keyword",
                      "keyword": "boolean"
                    }
                  ],
                  "typeName": "Promise"
                }
              }
            ]
          },
          "params": [
            {
              "kind": "rest",
              "arg": {
                "kind": "identifier",
                "name": "args",
                "optional": false,
                "tsType": null
              },
              "tsType": {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "any",
                  "kind": "keyword",
                  "keyword": "any"
                }
              }
            }
          ],
          "typeParams": []
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "CollectorOptions",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/collectors.ts",
      "line": 7,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "event",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/collectors.ts",
            "line": 9,
            "col": 2
          },
          "jsDoc": "Event name to listen for",
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "client",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/collectors.ts",
            "line": 11,
            "col": 2
          },
          "jsDoc": "Optionally Client object for deinitOnEnd functionality",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Client",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Client"
            }
          },
          "typeParams": []
        },
        {
          "name": "filter",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/collectors.ts",
            "line": 13,
            "col": 2
          },
          "jsDoc": "Filter function",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "CollectorFilter",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "CollectorFilter"
            }
          },
          "typeParams": []
        },
        {
          "name": "max",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/collectors.ts",
            "line": 15,
            "col": 2
          },
          "jsDoc": "Max entries to collect",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "deinitOnEnd",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/collectors.ts",
            "line": 17,
            "col": 2
          },
          "jsDoc": "Whether or not to de-initialize on end",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "timeout",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/collectors.ts",
            "line": 19,
            "col": 2
          },
          "jsDoc": "Timeout to end the Collector if not fulfilled if any filter or max",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "CollectorEvents",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/collectors.ts",
      "line": 23,
      "col": 0
    },
    "jsDoc": null,
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "typeLiteral",
        "typeLiteral": {
          "methods": [],
          "properties": [
            {
              "name": "start",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": []
              },
              "typeParams": []
            },
            {
              "name": "end",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": []
              },
              "typeParams": []
            },
            {
              "name": "collect",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "any",
                "kind": "keyword",
                "keyword": "any"
              },
              "typeParams": []
            }
          ],
          "callSignatures": [],
          "indexSignatures": []
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "Collector",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/collectors.ts",
      "line": 29,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "options",
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "union",
                "union": [
                  {
                    "repr": "CollectorOptions",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "CollectorOptions"
                    }
                  },
                  {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                ]
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/collectors.ts",
            "line": 56,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Client",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Client"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "client",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/collectors.ts",
            "line": 30,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": "private",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "_started",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/collectors.ts",
            "line": 31,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "event",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/collectors.ts",
            "line": 32,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "CollectorFilter",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "CollectorFilter"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "filter",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/collectors.ts",
            "line": 33,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Collection",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "any",
                    "kind": "keyword",
                    "keyword": "any"
                  }
                }
              ],
              "typeName": "Collection"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "collected",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/collectors.ts",
            "line": 34,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "max",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/collectors.ts",
            "line": 35,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "deinitOnEnd",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/collectors.ts",
            "line": 36,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "timeout",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/collectors.ts",
            "line": 37,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": "private",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "_timer",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/collectors.ts",
            "line": 38,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "started",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/collectors.ts",
            "line": 40,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "started",
          "kind": "setter",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "d",
                "optional": false,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                }
              }
            ],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/collectors.ts",
            "line": 44,
            "col": 2
          }
        },
        {
          "jsDoc": "Start collecting",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "collect",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Collector",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Collector"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/collectors.ts",
            "line": 70,
            "col": 2
          }
        },
        {
          "jsDoc": "End collecting",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "end",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Collector",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Collector"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/collectors.ts",
            "line": 83,
            "col": 2
          }
        },
        {
          "jsDoc": "Reset collector and start again",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "reset",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Collector",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Collector"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/collectors.ts",
            "line": 90,
            "col": 2
          }
        },
        {
          "jsDoc": "Init the Collector on Client",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "init",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "client",
                "optional": false,
                "tsType": {
                  "repr": "Client",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Client"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Collector",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Collector"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/collectors.ts",
            "line": 97,
            "col": 2
          }
        },
        {
          "jsDoc": "De initialize the Collector i.e. remove cleanly",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "deinit",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "client",
                "optional": false,
                "tsType": {
                  "repr": "Client",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Client"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Collector",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Collector"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/collectors.ts",
            "line": 104,
            "col": 2
          }
        },
        {
          "jsDoc": "Checks we may want to perform on an extended version of Collector",
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "check",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "rest",
                "arg": {
                  "kind": "identifier",
                  "name": "_args",
                  "optional": false,
                  "tsType": null
                },
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "any",
                    "kind": "keyword",
                    "keyword": "any"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                {
                  "repr": "Promise",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": [
                      {
                        "repr": "boolean",
                        "kind": "keyword",
                        "keyword": "boolean"
                      }
                    ],
                    "typeName": "Promise"
                  }
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/collectors.ts",
            "line": 110,
            "col": 2
          }
        },
        {
          "jsDoc": "Fire the Collector",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "_fire",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "rest",
                "arg": {
                  "kind": "identifier",
                  "name": "args",
                  "optional": false,
                  "tsType": null
                },
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "any",
                    "kind": "keyword",
                    "keyword": "any"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/collectors.ts",
            "line": 115,
            "col": 2
          }
        },
        {
          "jsDoc": "Set filter of the Collector",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "when",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "filter",
                "optional": false,
                "tsType": {
                  "repr": "CollectorFilter",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "CollectorFilter"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Collector",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Collector"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/collectors.ts",
            "line": 133,
            "col": 2
          }
        },
        {
          "jsDoc": "Add a new listener for 'collect' event",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "each",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "handler",
                "optional": false,
                "tsType": {
                  "repr": "CallableFunction",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "CallableFunction"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Collector",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Collector"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/collectors.ts",
            "line": 139,
            "col": 2
          }
        },
        {
          "jsDoc": "Returns a Promise resolved when Collector ends or a timeout occurs",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "wait",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "timeout",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Collector",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Collector"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/collectors.ts",
            "line": 145,
            "col": 2
          }
        }
      ],
      "extends": "HarmonyEventEmitter",
      "implements": [],
      "typeParams": [],
      "superTypeParams": [
        {
          "repr": "CollectorEvents",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "CollectorEvents"
          }
        }
      ]
    }
  },
  {
    "kind": "import",
    "name": "Collection",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/collectors.ts",
      "line": 1,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/utils/collection.ts",
      "imported": "Collection"
    }
  },
  {
    "kind": "import",
    "name": "Client",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/collectors.ts",
      "line": 2,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
      "imported": "Client"
    }
  },
  {
    "kind": "import",
    "name": "HarmonyEventEmitter",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/collectors.ts",
      "line": 3,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/utils/events.ts",
      "imported": "HarmonyEventEmitter"
    }
  },
  {
    "kind": "class",
    "name": "CategoryChannel",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guildCategoryChannel.ts",
      "line": 12,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "GuildCategoryChannelPayload",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "GuildCategoryChannelPayload"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "guild",
              "optional": false,
              "tsType": {
                "repr": "Guild",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Guild"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guildCategoryChannel.ts",
            "line": 20,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "guildID",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guildCategoryChannel.ts",
            "line": 13,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "name",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guildCategoryChannel.ts",
            "line": 14,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "position",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guildCategoryChannel.ts",
            "line": 15,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "Overwrite",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Overwrite"
              }
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "permissionOverwrites",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guildCategoryChannel.ts",
            "line": 16,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Guild",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Guild"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "guild",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guildCategoryChannel.ts",
            "line": 17,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "parentID",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guildCategoryChannel.ts",
            "line": 18,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "readFromData",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "GuildCategoryChannelPayload",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GuildCategoryChannelPayload"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guildCategoryChannel.ts",
            "line": 32,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "edit",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "ModifyGuildCategoryChannelOption",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ModifyGuildCategoryChannelOption"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "CategoryChannel",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "CategoryChannel"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guildCategoryChannel.ts",
            "line": 42,
            "col": 2
          }
        }
      ],
      "extends": "Channel",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "enum",
    "name": "GatewayIntents",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/gateway.ts",
      "line": 54,
      "col": 0
    },
    "jsDoc": null,
    "enumDef": {
      "members": [
        {
          "name": "GUILDS",
          "jsDoc": null
        },
        {
          "name": "GUILD_MEMBERS",
          "jsDoc": null
        },
        {
          "name": "GUILD_BANS",
          "jsDoc": null
        },
        {
          "name": "GUILD_EMOJIS",
          "jsDoc": null
        },
        {
          "name": "GUILD_INTEGRATIONS",
          "jsDoc": null
        },
        {
          "name": "GUILD_WEBHOOKS",
          "jsDoc": null
        },
        {
          "name": "GUILD_INVITES",
          "jsDoc": null
        },
        {
          "name": "GUILD_VOICE_STATES",
          "jsDoc": null
        },
        {
          "name": "GUILD_PRESENCES",
          "jsDoc": null
        },
        {
          "name": "GUILD_MESSAGES",
          "jsDoc": null
        },
        {
          "name": "GUILD_MESSAGE_REACTIONS",
          "jsDoc": null
        },
        {
          "name": "GUILD_MESSAGE_TYPING",
          "jsDoc": null
        },
        {
          "name": "DIRECT_MESSAGES",
          "jsDoc": null
        },
        {
          "name": "DIRECT_MESSAGE_REACTIONS",
          "jsDoc": null
        },
        {
          "name": "DIRECT_MESSAGE_TYPING",
          "jsDoc": null
        }
      ]
    }
  },
  {
    "kind": "class",
    "name": "Emoji",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/emoji.ts",
      "line": 11,
      "col": 0
    },
    "jsDoc": "Guild Emoji Object",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "EmojiPayload",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "EmojiPayload"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/emoji.ts",
            "line": 45,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/emoji.ts",
            "line": 12,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "name",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/emoji.ts",
            "line": 22,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "roles",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/emoji.ts",
            "line": 23,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "User",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "User"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "user",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/emoji.ts",
            "line": 24,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Guild",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Guild"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "guild",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/emoji.ts",
            "line": 25,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "requireColons",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/emoji.ts",
            "line": 26,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "managed",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/emoji.ts",
            "line": 27,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "animated",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/emoji.ts",
            "line": 28,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "available",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/emoji.ts",
            "line": 29,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "snowflake",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                },
                {
                  "repr": "null",
                  "kind": "keyword",
                  "keyword": "null"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/emoji.ts",
            "line": 14,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "timestamp",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "Date",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Date"
                  }
                },
                {
                  "repr": "null",
                  "kind": "keyword",
                  "keyword": "null"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/emoji.ts",
            "line": 18,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getEmojiString",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/emoji.ts",
            "line": 31,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "toString",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/emoji.ts",
            "line": 41,
            "col": 2
          }
        },
        {
          "jsDoc": "Modify the given emoji. Requires the MANAGE_EMOJIS permission. Returns the updated emoji object on success. Fires a Guild Emojis Update Gateway event.",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "edit",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "ModifyGuildEmojiParams",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ModifyGuildEmojiParams"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Emoji",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Emoji"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/emoji.ts",
            "line": 58,
            "col": 2
          }
        },
        {
          "jsDoc": "Delete the given emoji. Requires the MANAGE_EMOJIS permission. Returns `true` on success. Fires a Guild Emojis Update Gateway event.",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "delete",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/emoji.ts",
            "line": 72,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "readFromData",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "EmojiPayload",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "EmojiPayload"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/emoji.ts",
            "line": 79,
            "col": 2
          }
        }
      ],
      "extends": "Base",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "InteractionResponse",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/slash.ts",
      "line": 28,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "type",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/slash.ts",
            "line": 29,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "InteractionResponseType",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "InteractionResponseType"
            }
          },
          "typeParams": []
        },
        {
          "name": "content",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/slash.ts",
            "line": 30,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "embeds",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/slash.ts",
            "line": 31,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "Embed",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Embed"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "tts",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/slash.ts",
            "line": 32,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "flags",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/slash.ts",
            "line": 33,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "temp",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/slash.ts",
            "line": 34,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "allowedMentions",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/slash.ts",
            "line": 35,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [
                {
                  "name": "parse",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  "typeParams": []
                },
                {
                  "name": "roles",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  },
                  "typeParams": []
                },
                {
                  "name": "users",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  },
                  "typeParams": []
                },
                {
                  "name": "everyone",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  },
                  "typeParams": []
                }
              ],
              "callSignatures": [],
              "indexSignatures": []
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "Interaction",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/slash.ts",
      "line": 43,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "InteractionPayload",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "InteractionPayload"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "others",
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "typeLiteral",
                "typeLiteral": {
                  "methods": [],
                  "properties": [
                    {
                      "name": "channel",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "GuildTextChannel",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "GuildTextChannel"
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "guild",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "Guild",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Guild"
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "member",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "Member",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Member"
                        }
                      },
                      "typeParams": []
                    }
                  ],
                  "callSignatures": [],
                  "indexSignatures": []
                }
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/slash.ts",
            "line": 54,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Client",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Client"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "client",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/slash.ts",
            "line": 44,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/slash.ts",
            "line": 45,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "token",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/slash.ts",
            "line": 46,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/slash.ts",
            "line": 47,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "InteractionData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "InteractionData"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "data",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/slash.ts",
            "line": 48,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "GuildTextChannel",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GuildTextChannel"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "channel",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/slash.ts",
            "line": 49,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Guild",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Guild"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "guild",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/slash.ts",
            "line": 50,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Member",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Member"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "member",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/slash.ts",
            "line": 51,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Webhook",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Webhook"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "_savedHook",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/slash.ts",
            "line": 52,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "user",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "User",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "User"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/slash.ts",
            "line": 74,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "name",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/slash.ts",
            "line": 78,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "options",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "",
              "kind": "array",
              "array": {
                "repr": "InteractionOption",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "InteractionOption"
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/slash.ts",
            "line": 82,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "option",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "T",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "T"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": [
              {
                "name": "T",
                "default": {
                  "repr": "any",
                  "kind": "keyword",
                  "keyword": "any"
                }
              }
            ]
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/slash.ts",
            "line": 86,
            "col": 2
          }
        },
        {
          "jsDoc": "Respond to an Interaction",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "respond",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "InteractionResponse",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "InteractionResponse"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Interaction",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Interaction"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/slash.ts",
            "line": 91,
            "col": 2
          }
        },
        {
          "jsDoc": "Edit the original Interaction response",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "editResponse",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "content",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "embeds",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "",
                          "kind": "array",
                          "array": {
                            "repr": "Embed",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "Embed"
                            }
                          }
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Interaction",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Interaction"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/slash.ts",
            "line": 117,
            "col": 2
          }
        },
        {
          "jsDoc": "Delete the original Interaction Response",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "deleteResponse",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Interaction",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Interaction"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/slash.ts",
            "line": 134,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "url",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/slash.ts",
            "line": 144,
            "col": 2
          }
        },
        {
          "jsDoc": "Send a followup message",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "send",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "text",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "AllWebhookMessageOptions",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "AllWebhookMessageOptions"
                      }
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "option",
                "optional": true,
                "tsType": {
                  "repr": "AllWebhookMessageOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "AllWebhookMessageOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Message",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Message"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/slash.ts",
            "line": 149,
            "col": 2
          }
        },
        {
          "jsDoc": "Edit a Followup message",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "editMessage",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "msg",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "Message",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Message"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "content",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "embeds",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "",
                          "kind": "array",
                          "array": {
                            "repr": "Embed",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "Embed"
                            }
                          }
                        },
                        "typeParams": []
                      },
                      {
                        "name": "file",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "any",
                          "kind": "keyword",
                          "keyword": "any"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "allowed_mentions",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "",
                          "kind": "typeLiteral",
                          "typeLiteral": {
                            "methods": [],
                            "properties": [
                              {
                                "name": "parse",
                                "params": [],
                                "computed": false,
                                "optional": true,
                                "tsType": {
                                  "repr": "string",
                                  "kind": "keyword",
                                  "keyword": "string"
                                },
                                "typeParams": []
                              },
                              {
                                "name": "roles",
                                "params": [],
                                "computed": false,
                                "optional": true,
                                "tsType": {
                                  "repr": "",
                                  "kind": "array",
                                  "array": {
                                    "repr": "string",
                                    "kind": "keyword",
                                    "keyword": "string"
                                  }
                                },
                                "typeParams": []
                              },
                              {
                                "name": "users",
                                "params": [],
                                "computed": false,
                                "optional": true,
                                "tsType": {
                                  "repr": "",
                                  "kind": "array",
                                  "array": {
                                    "repr": "string",
                                    "kind": "keyword",
                                    "keyword": "string"
                                  }
                                },
                                "typeParams": []
                              },
                              {
                                "name": "everyone",
                                "params": [],
                                "computed": false,
                                "optional": true,
                                "tsType": {
                                  "repr": "boolean",
                                  "kind": "keyword",
                                  "keyword": "boolean"
                                },
                                "typeParams": []
                              }
                            ],
                            "callSignatures": [],
                            "indexSignatures": []
                          }
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Interaction",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Interaction"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/slash.ts",
            "line": 210,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "deleteMessage",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "msg",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "Message",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Message"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Interaction",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Interaction"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/slash.ts",
            "line": 235,
            "col": 2
          }
        }
      ],
      "extends": "SnowflakeBase",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "import",
    "name": "Client",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/slash.ts",
      "line": 1,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
      "imported": "Client"
    }
  },
  {
    "kind": "import",
    "name": "MessageOptions",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/slash.ts",
      "line": 2,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/types/channel.ts",
      "imported": "MessageOptions"
    }
  },
  {
    "kind": "import",
    "name": "INTERACTION_CALLBACK",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/slash.ts",
      "line": 3,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/types/endpoint.ts",
      "imported": "INTERACTION_CALLBACK"
    }
  },
  {
    "kind": "import",
    "name": "WEBHOOK_MESSAGE",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/slash.ts",
      "line": 3,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/types/endpoint.ts",
      "imported": "WEBHOOK_MESSAGE"
    }
  },
  {
    "kind": "import",
    "name": "InteractionData",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/slash.ts",
      "line": 4,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
      "imported": "InteractionData"
    }
  },
  {
    "kind": "import",
    "name": "InteractionOption",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/slash.ts",
      "line": 4,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
      "imported": "InteractionOption"
    }
  },
  {
    "kind": "import",
    "name": "InteractionPayload",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/slash.ts",
      "line": 4,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
      "imported": "InteractionPayload"
    }
  },
  {
    "kind": "import",
    "name": "InteractionResponsePayload",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/slash.ts",
      "line": 4,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
      "imported": "InteractionResponsePayload"
    }
  },
  {
    "kind": "import",
    "name": "InteractionResponseType",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/slash.ts",
      "line": 4,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
      "imported": "InteractionResponseType"
    }
  },
  {
    "kind": "import",
    "name": "SnowflakeBase",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/slash.ts",
      "line": 11,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/structures/base.ts",
      "imported": "SnowflakeBase"
    }
  },
  {
    "kind": "import",
    "name": "Embed",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/slash.ts",
      "line": 12,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/structures/embed.ts",
      "imported": "Embed"
    }
  },
  {
    "kind": "import",
    "name": "Guild",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/slash.ts",
      "line": 13,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
      "imported": "Guild"
    }
  },
  {
    "kind": "import",
    "name": "Member",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/slash.ts",
      "line": 14,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/structures/member.ts",
      "imported": "Member"
    }
  },
  {
    "kind": "import",
    "name": "Message",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/slash.ts",
      "line": 15,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/structures/message.ts",
      "imported": "Message"
    }
  },
  {
    "kind": "import",
    "name": "GuildTextChannel",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/slash.ts",
      "line": 16,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/structures/textChannel.ts",
      "imported": "GuildTextChannel"
    }
  },
  {
    "kind": "import",
    "name": "TextChannel",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/slash.ts",
      "line": 16,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/structures/textChannel.ts",
      "imported": "TextChannel"
    }
  },
  {
    "kind": "import",
    "name": "User",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/slash.ts",
      "line": 17,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/structures/user.ts",
      "imported": "User"
    }
  },
  {
    "kind": "import",
    "name": "Webhook",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/slash.ts",
      "line": 18,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/structures/webhook.ts",
      "imported": "Webhook"
    }
  },
  {
    "kind": "class",
    "name": "ChannelsManager",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/channels.ts",
      "line": 8,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/channels.ts",
            "line": 9,
            "col": 2
          }
        }
      ],
      "properties": [],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "get",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "key",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "T",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "T"
                        }
                      },
                      {
                        "repr": "undefined",
                        "kind": "keyword",
                        "keyword": "undefined"
                      }
                    ]
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": [
              {
                "name": "T",
                "default": {
                  "repr": "Channel",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Channel"
                  }
                }
              }
            ]
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/channels.ts",
            "line": 14,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "array",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "Channel",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Channel"
                      }
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/channels.ts",
            "line": 28,
            "col": 2
          }
        },
        {
          "jsDoc": "Fetches a Channel by ID, cache it, resolve it",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fetch",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "T",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "T"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": [
              {
                "name": "T",
                "default": {
                  "repr": "Channel",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Channel"
                  }
                }
              }
            ]
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/channels.ts",
            "line": 48,
            "col": 2
          }
        }
      ],
      "extends": "BaseManager",
      "implements": [],
      "typeParams": [],
      "superTypeParams": [
        {
          "repr": "ChannelPayload",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "ChannelPayload"
          }
        },
        {
          "repr": "Channel",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Channel"
          }
        }
      ]
    }
  },
  {
    "kind": "interface",
    "name": "InteractionOption",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
      "line": 4,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "name",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
            "line": 6,
            "col": 2
          },
          "jsDoc": "Option name",
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "value",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
            "line": 8,
            "col": 2
          },
          "jsDoc": "Value of the option",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "any",
            "kind": "keyword",
            "keyword": "any"
          },
          "typeParams": []
        },
        {
          "name": "options",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
            "line": 10,
            "col": 2
          },
          "jsDoc": "Sub options",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "InteractionData",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
      "line": 13,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "name",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
            "line": 15,
            "col": 2
          },
          "jsDoc": "Name of the Slash Command",
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
            "line": 17,
            "col": 2
          },
          "jsDoc": "Unique ID of the Slash Command",
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "options",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
            "line": 19,
            "col": 2
          },
          "jsDoc": "Options (arguments) sent with Interaction",
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "InteractionOption",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "InteractionOption"
              }
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "enum",
    "name": "InteractionType",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
      "line": 22,
      "col": 0
    },
    "jsDoc": null,
    "enumDef": {
      "members": [
        {
          "name": "PING",
          "jsDoc": "Ping sent by the API (HTTP-only)"
        },
        {
          "name": "APPLICATION_COMMAND",
          "jsDoc": "Slash Command Interaction"
        }
      ]
    }
  },
  {
    "kind": "interface",
    "name": "InteractionPayload",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
      "line": 29,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "type",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
            "line": 31,
            "col": 2
          },
          "jsDoc": "Type of the Interaction",
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "InteractionType",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "InteractionType"
            }
          },
          "typeParams": []
        },
        {
          "name": "token",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
            "line": 33,
            "col": 2
          },
          "jsDoc": "Token of the Interaction to respond",
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "member",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
            "line": 35,
            "col": 2
          },
          "jsDoc": "Member object of user who invoked",
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "intersection",
            "intersection": [
              {
                "repr": "MemberPayload",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "MemberPayload"
                }
              },
              {
                "repr": "",
                "kind": "typeLiteral",
                "typeLiteral": {
                  "methods": [],
                  "properties": [
                    {
                      "name": "permissions",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      },
                      "typeParams": []
                    }
                  ],
                  "callSignatures": [],
                  "indexSignatures": []
                }
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
            "line": 40,
            "col": 2
          },
          "jsDoc": "ID of the Interaction",
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "data",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
            "line": 45,
            "col": 2
          },
          "jsDoc": "Data sent with the interaction\r\n**This can be undefined only when Interaction is not a Slash Command**",
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "InteractionData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "InteractionData"
            }
          },
          "typeParams": []
        },
        {
          "name": "guild_id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
            "line": 47,
            "col": 2
          },
          "jsDoc": "ID of the Guild in which Interaction was invoked",
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "channel_id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
            "line": 49,
            "col": 2
          },
          "jsDoc": "ID of the Channel in which Interaction was invoked",
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "SlashCommandChoice",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
      "line": 52,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "name",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
            "line": 54,
            "col": 2
          },
          "jsDoc": "(Display) name of the Choice",
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "value",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
            "line": 56,
            "col": 2
          },
          "jsDoc": "Actual value to be sent in Interaction",
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "any",
            "kind": "keyword",
            "keyword": "any"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "enum",
    "name": "SlashCommandOptionType",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
      "line": 59,
      "col": 0
    },
    "jsDoc": null,
    "enumDef": {
      "members": [
        {
          "name": "SUB_COMMAND",
          "jsDoc": null
        },
        {
          "name": "SUB_COMMAND_GROUP",
          "jsDoc": null
        },
        {
          "name": "STRING",
          "jsDoc": null
        },
        {
          "name": "INTEGER",
          "jsDoc": null
        },
        {
          "name": "BOOLEAN",
          "jsDoc": null
        },
        {
          "name": "USER",
          "jsDoc": null
        },
        {
          "name": "CHANNEL",
          "jsDoc": null
        },
        {
          "name": "ROLE",
          "jsDoc": null
        }
      ]
    }
  },
  {
    "kind": "interface",
    "name": "SlashCommandOption",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
      "line": 70,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "name",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
            "line": 71,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "description",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
            "line": 73,
            "col": 2
          },
          "jsDoc": "Description not required in Sub-Command or Sub-Command-Group",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "type",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
            "line": 74,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "SlashCommandOptionType",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "SlashCommandOptionType"
            }
          },
          "typeParams": []
        },
        {
          "name": "required",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
            "line": 75,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "default",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
            "line": 76,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "choices",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
            "line": 77,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "SlashCommandChoice",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "SlashCommandChoice"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "options",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
            "line": 78,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "SlashCommandOption",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "SlashCommandOption"
              }
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "SlashCommandPartial",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
      "line": 81,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "name",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
            "line": 82,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "description",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
            "line": 83,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "options",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
            "line": 84,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "SlashCommandOption",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "SlashCommandOption"
              }
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "SlashCommandPayload",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
      "line": 87,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [
        {
          "repr": "SlashCommandPartial",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "SlashCommandPartial"
          }
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
            "line": 88,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "application_id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
            "line": 89,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "enum",
    "name": "InteractionResponseType",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
      "line": 92,
      "col": 0
    },
    "jsDoc": null,
    "enumDef": {
      "members": [
        {
          "name": "PONG",
          "jsDoc": "Just ack a ping, Http-only."
        },
        {
          "name": "ACKNOWLEDGE",
          "jsDoc": "Do nothing, just acknowledge the Interaction"
        },
        {
          "name": "CHANNEL_MESSAGE",
          "jsDoc": "Send a channel message without \"<User> used /<Command> with <Bot>\""
        },
        {
          "name": "CHANNEL_MESSAGE_WITH_SOURCE",
          "jsDoc": "Send a channel message with \"<User> used /<Command> with <Bot>\""
        },
        {
          "name": "ACK_WITH_SOURCE",
          "jsDoc": "Send nothing further, but send \"<User> used /<Command> with <Bot>\""
        }
      ]
    }
  },
  {
    "kind": "interface",
    "name": "InteractionResponsePayload",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
      "line": 105,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "type",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
            "line": 106,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "InteractionResponseType",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "InteractionResponseType"
            }
          },
          "typeParams": []
        },
        {
          "name": "data",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
            "line": 107,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "InteractionResponseDataPayload",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "InteractionResponseDataPayload"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "InteractionResponseDataPayload",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
      "line": 110,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "tts",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
            "line": 111,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "content",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
            "line": 112,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "embeds",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
            "line": 113,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "EmbedPayload",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "EmbedPayload"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "allowed_mentions",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
            "line": 114,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [
                {
                  "name": "parse",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "everyone",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "everyone"
                        }
                      },
                      {
                        "repr": "users",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "users"
                        }
                      },
                      {
                        "repr": "roles",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "roles"
                        }
                      }
                    ]
                  },
                  "typeParams": []
                },
                {
                  "name": "roles",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  },
                  "typeParams": []
                },
                {
                  "name": "users",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  },
                  "typeParams": []
                }
              ],
              "callSignatures": [],
              "indexSignatures": []
            }
          },
          "typeParams": []
        },
        {
          "name": "flags",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
            "line": 119,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "enum",
    "name": "InteractionResponseFlags",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
      "line": 122,
      "col": 0
    },
    "jsDoc": null,
    "enumDef": {
      "members": [
        {
          "name": "EPHEMERAL",
          "jsDoc": "A Message which is only visible to Interaction User, and is not saved on backend"
        }
      ]
    }
  },
  {
    "kind": "import",
    "name": "EmbedPayload",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
      "line": 1,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/types/channel.ts",
      "imported": "EmbedPayload"
    }
  },
  {
    "kind": "import",
    "name": "MemberPayload",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
      "line": 2,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
      "imported": "MemberPayload"
    }
  },
  {
    "kind": "typeAlias",
    "name": "PermissionResolvable",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/permissions.ts",
      "line": 5,
      "col": 0
    },
    "jsDoc": null,
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            }
          },
          {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "number",
              "kind": "keyword",
              "keyword": "number"
            }
          },
          {
            "repr": "Permissions",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Permissions"
            }
          },
          {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "PermissionResolvable",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "PermissionResolvable"
              }
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "Permissions",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/permissions.ts",
      "line": 14,
      "col": 0
    },
    "jsDoc": "Manages Discord's Bit-based Permissions",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "bits",
              "optional": false,
              "tsType": {
                "repr": "BitFieldResolvable",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "BitFieldResolvable"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/permissions.ts",
            "line": 18,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": null,
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "DEFAULT",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/permissions.ts",
            "line": 15,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": null,
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "ALL",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/permissions.ts",
            "line": 16,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "any",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "permission",
                "optional": false,
                "tsType": {
                  "repr": "PermissionResolvable",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "PermissionResolvable"
                  }
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "checkAdmin",
                  "optional": false,
                  "tsType": null
                },
                "right": "<UNIMPLEMENTED>",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/permissions.ts",
            "line": 22,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "has",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "permission",
                "optional": false,
                "tsType": {
                  "repr": "PermissionResolvable",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "PermissionResolvable"
                  }
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "checkAdmin",
                  "optional": false,
                  "tsType": null
                },
                "right": "<UNIMPLEMENTED>",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/permissions.ts",
            "line": 29,
            "col": 2
          }
        }
      ],
      "extends": "BitField",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "import",
    "name": "PermissionFlags",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/permissions.ts",
      "line": 2,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/types/permissionFlags.ts",
      "imported": "PermissionFlags"
    }
  },
  {
    "kind": "import",
    "name": "BitField",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/permissions.ts",
      "line": 3,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/utils/bitfield.ts",
      "imported": "BitField"
    }
  },
  {
    "kind": "import",
    "name": "BitFieldResolvable",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/permissions.ts",
      "line": 3,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/utils/bitfield.ts",
      "imported": "BitFieldResolvable"
    }
  },
  {
    "kind": "interface",
    "name": "VoiceStatePayload",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/voice.ts",
      "line": 31,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "guild_id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/voice.ts",
            "line": 32,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "channel_id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/voice.ts",
            "line": 33,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "user_id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/voice.ts",
            "line": 34,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "member",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/voice.ts",
            "line": 35,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "MemberPayload",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MemberPayload"
            }
          },
          "typeParams": []
        },
        {
          "name": "session_id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/voice.ts",
            "line": 36,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "deaf",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/voice.ts",
            "line": 37,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "mute",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/voice.ts",
            "line": 38,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "self_deaf",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/voice.ts",
            "line": 39,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "self_mute",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/voice.ts",
            "line": 40,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "self_stream",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/voice.ts",
            "line": 41,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "self_video",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/voice.ts",
            "line": 42,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "suppress",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/voice.ts",
            "line": 43,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "Role",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/role.ts",
      "line": 10,
      "col": 0
    },
    "jsDoc": "Represents a Guild Role",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "RolePayload",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "RolePayload"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "guild",
              "optional": false,
              "tsType": {
                "repr": "Guild",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Guild"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/role.ts",
            "line": 22,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/role.ts",
            "line": 11,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Guild",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Guild"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "guild",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/role.ts",
            "line": 12,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "name",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/role.ts",
            "line": 13,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "color",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/role.ts",
            "line": 14,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "hoist",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/role.ts",
            "line": 15,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "position",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/role.ts",
            "line": 16,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Permissions",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Permissions"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "permissions",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/role.ts",
            "line": 17,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "managed",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/role.ts",
            "line": 18,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "mentionable",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/role.ts",
            "line": 19,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "RoleTags",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "RoleTags"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "tags",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/role.ts",
            "line": 20,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "readFromData",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "RolePayload",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "RolePayload"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/role.ts",
            "line": 43,
            "col": 2
          }
        },
        {
          "jsDoc": "Delete the Role",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "delete",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "Role",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Role"
                        }
                      },
                      {
                        "repr": "undefined",
                        "kind": "keyword",
                        "keyword": "undefined"
                      }
                    ]
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/role.ts",
            "line": 57,
            "col": 2
          }
        },
        {
          "jsDoc": "Edit the Role",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "edit",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "RoleModifyPayload",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "RoleModifyPayload"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Role",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Role"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/role.ts",
            "line": 62,
            "col": 2
          }
        },
        {
          "jsDoc": "Add the Role to a Member",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addTo",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "member",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "Member",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Member"
                      }
                    },
                    {
                      "repr": "User",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "User"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/role.ts",
            "line": 67,
            "col": 2
          }
        },
        {
          "jsDoc": "Remove the Role from a Member",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "removeFrom",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "member",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "Member",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Member"
                      }
                    },
                    {
                      "repr": "User",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "User"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/role.ts",
            "line": 84,
            "col": 2
          }
        }
      ],
      "extends": "SnowflakeBase",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "EmojisManager",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/emojis.ts",
      "line": 7,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/emojis.ts",
            "line": 8,
            "col": 2
          }
        }
      ],
      "properties": [],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "get",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "key",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "Emoji",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Emoji"
                        }
                      },
                      {
                        "repr": "undefined",
                        "kind": "keyword",
                        "keyword": "undefined"
                      }
                    ]
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/emojis.ts",
            "line": 12,
            "col": 2
          }
        },
        {
          "jsDoc": "Fetches an Emoji by Guild ID and Emoji ID, cache it and resolve it",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fetch",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "guildID",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Emoji",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Emoji"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/emojis.ts",
            "line": 24,
            "col": 2
          }
        }
      ],
      "extends": "BaseManager",
      "implements": [],
      "typeParams": [],
      "superTypeParams": [
        {
          "repr": "EmojiPayload",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "EmojiPayload"
          }
        },
        {
          "repr": "Emoji",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Emoji"
          }
        }
      ]
    }
  },
  {
    "kind": "class",
    "name": "HarmonyEventEmitter",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/events.ts",
      "line": 3,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": "Wait for an Event to fire with given condition.",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "waitFor",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "K",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "K"
                  }
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "checkFunction",
                  "optional": false,
                  "tsType": {
                    "repr": "",
                    "kind": "fnOrConstructor",
                    "fnOrConstructor": {
                      "constructor": false,
                      "tsType": {
                        "repr": "boolean",
                        "kind": "keyword",
                        "keyword": "boolean"
                      },
                      "params": [
                        {
                          "kind": "rest",
                          "arg": {
                            "kind": "identifier",
                            "name": "args",
                            "optional": false,
                            "tsType": null
                          },
                          "tsType": {
                            "repr": "",
                            "kind": "indexedAccess",
                            "indexedAccess": {
                              "readonly": false,
                              "objType": {
                                "repr": "T",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "T"
                                }
                              },
                              "indexType": {
                                "repr": "K",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "K"
                                }
                              }
                            }
                          }
                        }
                      ],
                      "typeParams": []
                    }
                  }
                },
                "right": "<UNIMPLEMENTED>",
                "tsType": null
              },
              {
                "kind": "identifier",
                "name": "timeout",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "",
                        "kind": "indexedAccess",
                        "indexedAccess": {
                          "readonly": false,
                          "objType": {
                            "repr": "T",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "T"
                            }
                          },
                          "indexType": {
                            "repr": "K",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "K"
                            }
                          }
                        }
                      },
                      {
                        "repr": "",
                        "kind": "tuple",
                        "tuple": []
                      }
                    ]
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": [
              {
                "name": "K",
                "constraint": {
                  "repr": "",
                  "kind": "typeOperator",
                  "typeOperator": {
                    "operator": "keyof",
                    "tsType": {
                      "repr": "T",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "T"
                      }
                    }
                  }
                }
              }
            ]
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/events.ts",
            "line": 7,
            "col": 2
          }
        }
      ],
      "extends": "EventEmitter",
      "implements": [],
      "typeParams": [
        {
          "name": "T",
          "constraint": {
            "repr": "Record",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "unknown",
                    "kind": "keyword",
                    "keyword": "unknown"
                  }
                }
              ],
              "typeName": "Record"
            }
          }
        }
      ],
      "superTypeParams": [
        {
          "repr": "T",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "T"
          }
        }
      ]
    }
  },
  {
    "kind": "class",
    "name": "MessageReactionsManager",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/messageReactions.ts",
      "line": 15,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "message",
              "optional": false,
              "tsType": {
                "repr": "Message",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Message"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/messageReactions.ts",
            "line": 21,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Message",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Message"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "message",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/messageReactions.ts",
            "line": 19,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "updateRefs",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/messageReactions.ts",
            "line": 26,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "get",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "MessageReaction",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "MessageReaction"
                        }
                      },
                      {
                        "repr": "undefined",
                        "kind": "keyword",
                        "keyword": "undefined"
                      }
                    ]
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/messageReactions.ts",
            "line": 34,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "set",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "key",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "value",
                "optional": false,
                "tsType": {
                  "repr": "Reaction",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Reaction"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "any",
                    "kind": "keyword",
                    "keyword": "any"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/messageReactions.ts",
            "line": 48,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "array",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "MessageReaction",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "MessageReaction"
                      }
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/messageReactions.ts",
            "line": 57,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "flush",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "any",
                    "kind": "keyword",
                    "keyword": "any"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/messageReactions.ts",
            "line": 72,
            "col": 2
          }
        },
        {
          "jsDoc": "Remove all Reactions from the Message",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "removeAll",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/messageReactions.ts",
            "line": 78,
            "col": 2
          }
        },
        {
          "jsDoc": "Remove a specific Emoji from Reactions",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "removeEmoji",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "emoji",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "Emoji",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Emoji"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "MessageReactionsManager",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "MessageReactionsManager"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/messageReactions.ts",
            "line": 85,
            "col": 2
          }
        },
        {
          "jsDoc": "Remove a specific Emoji from Reactions",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "removeUser",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "emoji",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "Emoji",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Emoji"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "user",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "User",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "User"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "MessageReactionsManager",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "MessageReactionsManager"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/messageReactions.ts",
            "line": 96,
            "col": 2
          }
        }
      ],
      "extends": "BaseManager",
      "implements": [],
      "typeParams": [],
      "superTypeParams": [
        {
          "repr": "Reaction",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Reaction"
          }
        },
        {
          "repr": "MessageReaction",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "MessageReaction"
          }
        }
      ]
    }
  },
  {
    "kind": "class",
    "name": "Guild",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
      "line": 136,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "GuildPayload",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "GuildPayload"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 190,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 137,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "name",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 138,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "icon",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 139,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "iconHash",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 140,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "splash",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 141,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "discoverySplash",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 142,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "owner",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 143,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "ownerID",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 144,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "permissions",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 145,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "region",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 146,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "afkChannelID",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 147,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "afkTimeout",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 148,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "widgetEnabled",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 149,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "widgetChannelID",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 150,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Verification",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Verification"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "verificationLevel",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 151,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "MessageNotification",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MessageNotification"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "defaultMessageNotifications",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 152,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "ContentFilter",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ContentFilter"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "explicitContentFilter",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 153,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "RolesManager",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "RolesManager"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "roles",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 154,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "GuildEmojisManager",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GuildEmojisManager"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "emojis",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 155,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "InviteManager",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "InviteManager"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "invites",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 156,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "GuildFeatures",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "GuildFeatures"
              }
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "features",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 157,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "mfaLevel",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 158,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "applicationID",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 159,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "systemChannelID",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 160,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "systemChannelFlags",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 161,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "rulesChannelID",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 162,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "joinedAt",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 163,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "large",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 164,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "unavailable",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 165,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "memberCount",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 166,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "GuildVoiceStatesManager",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GuildVoiceStatesManager"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "voiceStates",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 167,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "MembersManager",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MembersManager"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "members",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 168,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "GuildChannelsManager",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GuildChannelsManager"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "channels",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 169,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "GuildPresencesManager",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GuildPresencesManager"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "presences",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 170,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "maxPresences",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 171,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "maxMembers",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 172,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "vanityURLCode",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 173,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "description",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 174,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "banner",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 175,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "premiumTier",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 176,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "premiumSubscriptionCount",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 177,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "preferredLocale",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 178,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "publicUpdatesChannelID",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 179,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "maxVideoChannelUsers",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 180,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "approximateNumberCount",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 181,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "approximatePresenceCount",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 182,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "GuildBans",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GuildBans"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "bans",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 183,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": "Get Shard ID of Guild on which it is",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "shardID",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "number",
              "kind": "keyword",
              "keyword": "number"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 186,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "readFromData",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "GuildPayload",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GuildPayload"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 209,
            "col": 2
          }
        },
        {
          "jsDoc": "Gets Everyone role of the Guild",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getEveryoneRole",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Role",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Role"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 264,
            "col": 2
          }
        },
        {
          "jsDoc": "Gets current client's member in the Guild",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "me",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Member",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Member"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 272,
            "col": 2
          }
        },
        {
          "jsDoc": "Fetches Guild's Integrations (Webhooks, Bots, etc.)",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fetchIntegrations",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "GuildIntegration",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "GuildIntegration"
                      }
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 281,
            "col": 2
          }
        },
        {
          "jsDoc": "Create a new Guild Channel",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createChannel",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "CreateChannelOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "CreateChannelOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "GuildChannels",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "GuildChannels"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 289,
            "col": 2
          }
        },
        {
          "jsDoc": "Create a new Guild Role",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createRole",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "CreateGuildRoleOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "CreateGuildRoleOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Role",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Role"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 294,
            "col": 2
          }
        },
        {
          "jsDoc": "Chunks the Guild Members, i.e. cache them.\n@param options Options regarding the Members Request\n@param wait Whether to wait for all Members to come before resolving Promise or not.\n@param timeout Configurable timeout to cancel the wait to safely remove listener.",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "chunk",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "RequestMembersOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "RequestMembersOptions"
                  }
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "wait",
                  "optional": false,
                  "tsType": {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                },
                "right": "<UNIMPLEMENTED>",
                "tsType": null
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "timeout",
                  "optional": false,
                  "tsType": {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  }
                },
                "right": "<UNIMPLEMENTED>",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Guild",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Guild"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 304,
            "col": 2
          }
        },
        {
          "jsDoc": "Fulfills promise when guild becomes available\n@param timeout Configurable timeout to cancel the wait to safely remove listener.",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "awaitAvailability",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "timeout",
                  "optional": false,
                  "tsType": {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  }
                },
                "right": "<UNIMPLEMENTED>",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Guild",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Guild"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 335,
            "col": 2
          }
        },
        {
          "jsDoc": "Attach an integration object from the current user to the guild.",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createIntegration",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "type",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Guild",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Guild"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 353,
            "col": 2
          }
        },
        {
          "jsDoc": "Modify the behavior and settings of an integration object for the guild.",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "editIntegration",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "expireBehavior",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "",
                          "kind": "union",
                          "union": [
                            {
                              "repr": "number",
                              "kind": "keyword",
                              "keyword": "number"
                            },
                            {
                              "repr": "null",
                              "kind": "keyword",
                              "keyword": "null"
                            }
                          ]
                        },
                        "typeParams": []
                      },
                      {
                        "name": "expireGracePeriod",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "",
                          "kind": "union",
                          "union": [
                            {
                              "repr": "number",
                              "kind": "keyword",
                              "keyword": "number"
                            },
                            {
                              "repr": "null",
                              "kind": "keyword",
                              "keyword": "null"
                            }
                          ]
                        },
                        "typeParams": []
                      },
                      {
                        "name": "enableEmoticons",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "",
                          "kind": "union",
                          "union": [
                            {
                              "repr": "boolean",
                              "kind": "keyword",
                              "keyword": "boolean"
                            },
                            {
                              "repr": "null",
                              "kind": "keyword",
                              "keyword": "null"
                            }
                          ]
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Guild",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Guild"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 359,
            "col": 2
          }
        },
        {
          "jsDoc": "Delete the attached integration object for the guild. Deletes any associated webhooks and kicks the associated bot if there is one.",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "deleteIntegration",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Guild",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Guild"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 376,
            "col": 2
          }
        },
        {
          "jsDoc": "Sync an integration.",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "syncIntegration",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Guild",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Guild"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 382,
            "col": 2
          }
        },
        {
          "jsDoc": "Returns the widget for the guild.",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getWidget",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "GuildWidgetPayload",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "GuildWidgetPayload"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 388,
            "col": 2
          }
        },
        {
          "jsDoc": "Modify a guild widget object for the guild.",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "editWidget",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "enabled",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "boolean",
                          "kind": "keyword",
                          "keyword": "boolean"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "channel",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "",
                          "kind": "union",
                          "union": [
                            {
                              "repr": "string",
                              "kind": "keyword",
                              "keyword": "string"
                            },
                            {
                              "repr": "GuildChannels",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": null,
                                "typeName": "GuildChannels"
                              }
                            }
                          ]
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Guild",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Guild"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 393,
            "col": 2
          }
        },
        {
          "jsDoc": "Returns a partial invite object for guilds with that feature enabled.",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getVanity",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "typeLiteral",
                    "typeLiteral": {
                      "methods": [],
                      "properties": [
                        {
                          "name": "code",
                          "params": [],
                          "computed": false,
                          "optional": false,
                          "tsType": {
                            "repr": "",
                            "kind": "union",
                            "union": [
                              {
                                "repr": "string",
                                "kind": "keyword",
                                "keyword": "string"
                              },
                              {
                                "repr": "null",
                                "kind": "keyword",
                                "keyword": "null"
                              }
                            ]
                          },
                          "typeParams": []
                        },
                        {
                          "name": "uses",
                          "params": [],
                          "computed": false,
                          "optional": false,
                          "tsType": {
                            "repr": "number",
                            "kind": "keyword",
                            "keyword": "number"
                          },
                          "typeParams": []
                        }
                      ],
                      "callSignatures": [],
                      "indexSignatures": []
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 406,
            "col": 2
          }
        },
        {
          "jsDoc": "Returns a PNG (URL) image widget for the guild.",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getWidgetImageURL",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "style",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "shield",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "shield"
                      }
                    },
                    {
                      "repr": "banner1",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "banner1"
                      }
                    },
                    {
                      "repr": "banner2",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "banner2"
                      }
                    },
                    {
                      "repr": "banner3",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "banner3"
                      }
                    },
                    {
                      "repr": "banner4",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "banner4"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 426,
            "col": 2
          }
        },
        {
          "jsDoc": "Leave a Guild.",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "leave",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Client",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Client"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 435,
            "col": 2
          }
        },
        {
          "jsDoc": "Returns an array of template objects.",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getTemplates",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "Template",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Template"
                      }
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 441,
            "col": 2
          }
        },
        {
          "jsDoc": "Creates a template for the guild.",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createTemplate",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "description",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "null",
                      "kind": "keyword",
                      "keyword": "null"
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Template",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Template"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 450,
            "col": 2
          }
        },
        {
          "jsDoc": "Syncs the template to the guild's current state.",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "syncTemplate",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "code",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Template",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Template"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 462,
            "col": 2
          }
        },
        {
          "jsDoc": "Modifies the template's metadata.",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "editTemplate",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "code",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "name",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "description",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Template",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Template"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 470,
            "col": 2
          }
        },
        {
          "jsDoc": "Deletes the template. Requires the MANAGE_GUILD permission.",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "deleteTemplate",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "code",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Guild",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Guild"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 481,
            "col": 2
          }
        },
        {
          "jsDoc": "Gets a preview of the guild. Returns GuildPreview.",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "preview",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "GuildPreview",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "GuildPreview"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 487,
            "col": 2
          }
        },
        {
          "jsDoc": "Edits the guild.\n@param options Guild edit options",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "edit",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "GuildModifyOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GuildModifyOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Guild",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Guild"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 495,
            "col": 2
          }
        },
        {
          "jsDoc": "Deletes the guild.",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "delete",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Guild",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Guild"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 503,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getPruneCount",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "days",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "number",
                          "kind": "keyword",
                          "keyword": "number"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "includeRoles",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "Array",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": [
                              {
                                "repr": "",
                                "kind": "union",
                                "union": [
                                  {
                                    "repr": "Role",
                                    "kind": "typeRef",
                                    "typeRef": {
                                      "typeParams": null,
                                      "typeName": "Role"
                                    }
                                  },
                                  {
                                    "repr": "string",
                                    "kind": "keyword",
                                    "keyword": "string"
                                  }
                                ]
                              }
                            ],
                            "typeName": "Array"
                          }
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 509,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "prune",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "days",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "number",
                          "kind": "keyword",
                          "keyword": "number"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "computePruneCount",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "true",
                          "kind": "literal",
                          "literal": {
                            "kind": "boolean",
                            "boolean": true
                          }
                        },
                        "typeParams": []
                      },
                      {
                        "name": "includeRoles",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "Array",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": [
                              {
                                "repr": "",
                                "kind": "union",
                                "union": [
                                  {
                                    "repr": "Role",
                                    "kind": "typeRef",
                                    "typeRef": {
                                      "typeParams": null,
                                      "typeName": "Role"
                                    }
                                  },
                                  {
                                    "repr": "string",
                                    "kind": "keyword",
                                    "keyword": "string"
                                  }
                                ]
                              }
                            ],
                            "typeName": "Array"
                          }
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 532,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "prune",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "days",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "number",
                          "kind": "keyword",
                          "keyword": "number"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "computePruneCount",
                        "params": [],
                        "computed": false,
                        "optional": false,
                        "tsType": {
                          "repr": "false",
                          "kind": "literal",
                          "literal": {
                            "kind": "boolean",
                            "boolean": false
                          }
                        },
                        "typeParams": []
                      },
                      {
                        "name": "includeRoles",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "Array",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": [
                              {
                                "repr": "",
                                "kind": "union",
                                "union": [
                                  {
                                    "repr": "Role",
                                    "kind": "typeRef",
                                    "typeRef": {
                                      "typeParams": null,
                                      "typeName": "Role"
                                    }
                                  },
                                  {
                                    "repr": "string",
                                    "kind": "keyword",
                                    "keyword": "string"
                                  }
                                ]
                              }
                            ],
                            "typeName": "Array"
                          }
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "null",
                    "kind": "keyword",
                    "keyword": "null"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 537,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "prune",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "days",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "number",
                          "kind": "keyword",
                          "keyword": "number"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "computePruneCount",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "boolean",
                          "kind": "keyword",
                          "keyword": "boolean"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "includeRoles",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "Array",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": [
                              {
                                "repr": "",
                                "kind": "union",
                                "union": [
                                  {
                                    "repr": "Role",
                                    "kind": "typeRef",
                                    "typeRef": {
                                      "typeParams": null,
                                      "typeName": "Role"
                                    }
                                  },
                                  {
                                    "repr": "string",
                                    "kind": "keyword",
                                    "keyword": "string"
                                  }
                                ]
                              }
                            ],
                            "typeName": "Array"
                          }
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "number",
                        "kind": "keyword",
                        "keyword": "number"
                      },
                      {
                        "repr": "null",
                        "kind": "keyword",
                        "keyword": "null"
                      }
                    ]
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 542,
            "col": 2
          }
        }
      ],
      "extends": "SnowflakeBase",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "GuildBan",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
      "line": 46,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "GuildBanPayload",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "GuildBanPayload"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "guild",
              "optional": false,
              "tsType": {
                "repr": "Guild",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Guild"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 51,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Guild",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Guild"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "guild",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 47,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "reason",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 48,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "User",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "User"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "user",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 49,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "Base",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "GuildBans",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
      "line": 59,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "guild",
              "optional": false,
              "tsType": {
                "repr": "Guild",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Guild"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 63,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Client",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Client"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "client",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 60,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Guild",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Guild"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "guild",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 61,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": "Gets all bans in the Guild.",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "all",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "GuildBan",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "GuildBan"
                      }
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 71,
            "col": 2
          }
        },
        {
          "jsDoc": "Gets ban details of a User if any.\n@param user User to get ban of, ID or User object.",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "get",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "user",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "User",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "User"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "GuildBan",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "GuildBan"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 86,
            "col": 2
          }
        },
        {
          "jsDoc": "Bans a User.\n@param user User to ban, ID or User object.\n@param reason Reason for the Ban.\n@param deleteMessagesDays Delete Old Messages? If yes, how much days.",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "add",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "user",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "User",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "User"
                      }
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "reason",
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "deleteMessagesDays",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 100,
            "col": 2
          }
        },
        {
          "jsDoc": "Unbans (removes ban from) a User.\n@param user User to unban, ID or User object.",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "remove",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "user",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "User",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "User"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 122,
            "col": 2
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "GuildIntegration",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
      "line": 564,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "GuildIntegrationPayload",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "GuildIntegrationPayload"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 581,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 565,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "name",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 566,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 567,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "enabled",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 568,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "syncing",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 569,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "roleID",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 570,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "enableEmoticons",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 571,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "IntegrationExpireBehavior",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "IntegrationExpireBehavior"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "expireBehaviour",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 572,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "expireGracePeriod",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 573,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "User",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "User"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "user",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 574,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "IntegrationAccountPayload",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "IntegrationAccountPayload"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "account",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 575,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "syncedAt",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 576,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "subscriberCount",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 577,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "revoked",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 578,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Application",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Application"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "application",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
            "line": 579,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "Base",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "RolePayload",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/role.ts",
      "line": 1,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/role.ts",
            "line": 2,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "name",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/role.ts",
            "line": 3,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "color",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/role.ts",
            "line": 4,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "hoist",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/role.ts",
            "line": 5,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "position",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/role.ts",
            "line": 6,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "permissions",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/role.ts",
            "line": 7,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "managed",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/role.ts",
            "line": 8,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "mentionable",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/role.ts",
            "line": 9,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "tags",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/role.ts",
            "line": 10,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "RoleTagsPayload",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "RoleTagsPayload"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "Collection",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/collection.ts",
      "line": 2,
      "col": 0
    },
    "jsDoc": "Enhanced Map with various utility functions",
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": "Set a key to value in Collection",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "set",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "key",
                "optional": false,
                "tsType": {
                  "repr": "K",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "K"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "value",
                "optional": false,
                "tsType": {
                  "repr": "V",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "V"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/collection.ts",
            "line": 4,
            "col": 2
          }
        },
        {
          "jsDoc": "Get Array of values in Collection",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "array",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "",
              "kind": "array",
              "array": {
                "repr": "V",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "V"
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/collection.ts",
            "line": 9,
            "col": 2
          }
        },
        {
          "jsDoc": "Get first value(s) in Collection",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "first",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "V",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "V"
                  }
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/collection.ts",
            "line": 14,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "first",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "amount",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "array",
              "array": {
                "repr": "V",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "V"
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/collection.ts",
            "line": 15,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "first",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "amount",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "V",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "V"
                  }
                },
                {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "V",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "V"
                    }
                  }
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/collection.ts",
            "line": 16,
            "col": 2
          }
        },
        {
          "jsDoc": "Get last value(s) in Collection",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "last",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "V",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "V"
                  }
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/collection.ts",
            "line": 25,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "last",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "amount",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "array",
              "array": {
                "repr": "V",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "V"
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/collection.ts",
            "line": 26,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "last",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "amount",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "V",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "V"
                  }
                },
                {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "V",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "V"
                    }
                  }
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/collection.ts",
            "line": 27,
            "col": 2
          }
        },
        {
          "jsDoc": "Get random value(s) from Collection",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "random",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "V",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "V"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/collection.ts",
            "line": 36,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "random",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "amount",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "array",
              "array": {
                "repr": "V",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "V"
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/collection.ts",
            "line": 37,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "random",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "amount",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "V",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "V"
                  }
                },
                {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "V",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "V"
                    }
                  }
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/collection.ts",
            "line": 38,
            "col": 2
          }
        },
        {
          "jsDoc": "Find a value from Collection using callback",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "find",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "callback",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "boolean",
                      "kind": "keyword",
                      "keyword": "boolean"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "value",
                        "optional": false,
                        "tsType": {
                          "repr": "V",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "V"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "key",
                        "optional": false,
                        "tsType": {
                          "repr": "K",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "K"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "V",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "V"
                  }
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/collection.ts",
            "line": 47,
            "col": 2
          }
        },
        {
          "jsDoc": "Filter out the Collection using callback",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "filter",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "callback",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "boolean",
                      "kind": "keyword",
                      "keyword": "boolean"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "value",
                        "optional": false,
                        "tsType": {
                          "repr": "V",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "V"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "key",
                        "optional": false,
                        "tsType": {
                          "repr": "K",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "K"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Collection",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "K",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "K"
                    }
                  },
                  {
                    "repr": "V",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "V"
                    }
                  }
                ],
                "typeName": "Collection"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/collection.ts",
            "line": 56,
            "col": 2
          }
        },
        {
          "jsDoc": "Map the collection",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "map",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "callback",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "T",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "T"
                      }
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "value",
                        "optional": false,
                        "tsType": {
                          "repr": "V",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "V"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "key",
                        "optional": false,
                        "tsType": {
                          "repr": "K",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "K"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "array",
              "array": {
                "repr": "T",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "T"
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": [
              {
                "name": "T"
              }
            ]
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/collection.ts",
            "line": 65,
            "col": 2
          }
        },
        {
          "jsDoc": "Check if any of the values/keys in Collection satisfies callback",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "some",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "callback",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "boolean",
                      "kind": "keyword",
                      "keyword": "boolean"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "value",
                        "optional": false,
                        "tsType": {
                          "repr": "V",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "V"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "key",
                        "optional": false,
                        "tsType": {
                          "repr": "K",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "K"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/collection.ts",
            "line": 75,
            "col": 2
          }
        },
        {
          "jsDoc": "Check if every value/key in Collection satisfies callback",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "every",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "callback",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "boolean",
                      "kind": "keyword",
                      "keyword": "boolean"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "value",
                        "optional": false,
                        "tsType": {
                          "repr": "V",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "V"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "key",
                        "optional": false,
                        "tsType": {
                          "repr": "K",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "K"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/collection.ts",
            "line": 84,
            "col": 2
          }
        },
        {
          "jsDoc": "Reduce the Collection to a single value",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "reduce",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "callback",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "T",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "T"
                      }
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "accumulator",
                        "optional": false,
                        "tsType": {
                          "repr": "T",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "T"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "value",
                        "optional": false,
                        "tsType": {
                          "repr": "V",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "V"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "key",
                        "optional": false,
                        "tsType": {
                          "repr": "K",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "K"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "initialValue",
                "optional": true,
                "tsType": {
                  "repr": "T",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "T"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "T",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "T"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": [
              {
                "name": "T"
              }
            ]
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/collection.ts",
            "line": 93,
            "col": 2
          }
        },
        {
          "jsDoc": "Create a Collection from an Object",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "fromObject",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "object",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [],
                    "callSignatures": [],
                    "indexSignatures": [
                      {
                        "readonly": false,
                        "params": [
                          {
                            "kind": "identifier",
                            "name": "key",
                            "optional": false,
                            "tsType": {
                              "repr": "string",
                              "kind": "keyword",
                              "keyword": "string"
                            }
                          }
                        ],
                        "tsType": {
                          "repr": "V",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "V"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Collection",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  {
                    "repr": "V",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "V"
                    }
                  }
                ],
                "typeName": "Collection"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": [
              {
                "name": "V"
              }
            ]
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/collection.ts",
            "line": 108,
            "col": 2
          }
        },
        {
          "jsDoc": "Convert Collection to an object",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "toObject",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "",
              "kind": "typeLiteral",
              "typeLiteral": {
                "methods": [],
                "properties": [],
                "callSignatures": [],
                "indexSignatures": [
                  {
                    "readonly": false,
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "name",
                        "optional": false,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        }
                      }
                    ],
                    "tsType": {
                      "repr": "V",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "V"
                      }
                    }
                  }
                ]
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/collection.ts",
            "line": 113,
            "col": 2
          }
        }
      ],
      "extends": "Map",
      "implements": [],
      "typeParams": [
        {
          "name": "K",
          "default": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          }
        },
        {
          "name": "V",
          "default": {
            "repr": "any",
            "kind": "keyword",
            "keyword": "any"
          }
        }
      ],
      "superTypeParams": [
        {
          "repr": "K",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "K"
          }
        },
        {
          "repr": "V",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "V"
          }
        }
      ]
    }
  },
  {
    "kind": "class",
    "name": "Embed",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/embed.ts",
      "line": 16,
      "col": 0
    },
    "jsDoc": "Message Embed Object",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "data",
              "optional": true,
              "tsType": {
                "repr": "EmbedPayload",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "EmbedPayload"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/embed.ts",
            "line": 32,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "title",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/embed.ts",
            "line": 17,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "EmbedTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "EmbedTypes"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/embed.ts",
            "line": 18,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "description",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/embed.ts",
            "line": 19,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "url",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/embed.ts",
            "line": 20,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "timestamp",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/embed.ts",
            "line": 21,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "color",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/embed.ts",
            "line": 22,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "EmbedFooter",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "EmbedFooter"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "footer",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/embed.ts",
            "line": 23,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "EmbedImage",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "EmbedImage"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "image",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/embed.ts",
            "line": 24,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "EmbedThumbnail",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "EmbedThumbnail"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "thumbnail",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/embed.ts",
            "line": 25,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "EmbedVideo",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "EmbedVideo"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "video",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/embed.ts",
            "line": 26,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "EmbedProvider",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "EmbedProvider"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "provider",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/embed.ts",
            "line": 27,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "EmbedAuthor",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "EmbedAuthor"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "author",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/embed.ts",
            "line": 28,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "EmbedField",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "EmbedField"
              }
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "fields",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/embed.ts",
            "line": 29,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "MessageAttachment",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "MessageAttachment"
              }
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "files",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/embed.ts",
            "line": 30,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": "Convert Embed Object to Embed Payload JSON",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "toJSON",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "EmbedPayload",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "EmbedPayload"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/embed.ts",
            "line": 49,
            "col": 2
          }
        },
        {
          "jsDoc": "Set Title of the Embed",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setTitle",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "title",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Embed",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Embed"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/embed.ts",
            "line": 68,
            "col": 2
          }
        },
        {
          "jsDoc": "Set Embed description",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setDescription",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "description",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Embed",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Embed"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/embed.ts",
            "line": 74,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "attach",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "rest",
                "arg": {
                  "kind": "identifier",
                  "name": "files",
                  "optional": false,
                  "tsType": null
                },
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "MessageAttachment",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "MessageAttachment"
                    }
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Embed",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Embed"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/embed.ts",
            "line": 79,
            "col": 2
          }
        },
        {
          "jsDoc": "Set Embed Type",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setType",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "type",
                "optional": false,
                "tsType": {
                  "repr": "EmbedTypes",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "EmbedTypes"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Embed",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Embed"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/embed.ts",
            "line": 87,
            "col": 2
          }
        },
        {
          "jsDoc": "Set URL of the Embed",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setURL",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "url",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "URL",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "URL"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Embed",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Embed"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/embed.ts",
            "line": 93,
            "col": 2
          }
        },
        {
          "jsDoc": "Set Timestamp of the Embed",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setTimestamp",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "timeString",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Embed",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Embed"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/embed.ts",
            "line": 99,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setTimestamp",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "unixTimestamp",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "Embed",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Embed"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/embed.ts",
            "line": 100,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setTimestamp",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "dateObject",
                "optional": false,
                "tsType": {
                  "repr": "Date",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Date"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Embed",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Embed"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/embed.ts",
            "line": 101,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setTimestamp",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "timestamp",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "Date",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Date"
                      }
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Embed",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Embed"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/embed.ts",
            "line": 102,
            "col": 2
          }
        },
        {
          "jsDoc": "Set Color of the Embed",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setColor",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "hexInt",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "Embed",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Embed"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/embed.ts",
            "line": 108,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setColor",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "r",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "g",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "b",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "Embed",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Embed"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/embed.ts",
            "line": 109,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setColor",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "random",
                "optional": false,
                "tsType": {
                  "repr": "random",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "random"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Embed",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Embed"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/embed.ts",
            "line": 110,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setColor",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "hexStr",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Embed",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Embed"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/embed.ts",
            "line": 111,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setColor",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "namedColor",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "typeOperator",
                  "typeOperator": {
                    "operator": "keyof",
                    "tsType": {
                      "repr": "Colors",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Colors"
                      }
                    }
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Embed",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Embed"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/embed.ts",
            "line": 112,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setColor",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "color",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    },
                    {
                      "repr": "random",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "random"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "",
                      "kind": "typeOperator",
                      "typeOperator": {
                        "operator": "keyof",
                        "tsType": {
                          "repr": "Colors",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Colors"
                          }
                        }
                      }
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "g",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "b",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "Embed",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Embed"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/embed.ts",
            "line": 113,
            "col": 2
          }
        },
        {
          "jsDoc": "Set Footer of the Embed",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setFooter",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "text",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "icon",
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Embed",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Embed"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/embed.ts",
            "line": 140,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setFooter",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "footer",
                "optional": false,
                "tsType": {
                  "repr": "EmbedFooter",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "EmbedFooter"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Embed",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Embed"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/embed.ts",
            "line": 141,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setFooter",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "footer",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "EmbedFooter",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "EmbedFooter"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "icon",
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Embed",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Embed"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/embed.ts",
            "line": 142,
            "col": 2
          }
        },
        {
          "jsDoc": "Set Image of the Embed",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setImage",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "image",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "EmbedImage",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "EmbedImage"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Embed",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Embed"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/embed.ts",
            "line": 149,
            "col": 2
          }
        },
        {
          "jsDoc": "Set Thumbnail Image of the Embed",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setThumbnail",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "thumbnail",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "EmbedThumbnail",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "EmbedThumbnail"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Embed",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Embed"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/embed.ts",
            "line": 155,
            "col": 2
          }
        },
        {
          "jsDoc": "Set Embed Video",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setVideo",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "video",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "EmbedVideo",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "EmbedVideo"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Embed",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Embed"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/embed.ts",
            "line": 162,
            "col": 2
          }
        },
        {
          "jsDoc": "Set Provider of the Embed",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setProvider",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "url",
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Embed",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Embed"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/embed.ts",
            "line": 168,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setProvider",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "provider",
                "optional": false,
                "tsType": {
                  "repr": "EmbedProvider",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "EmbedProvider"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Embed",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Embed"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/embed.ts",
            "line": 169,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setProvider",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "provider",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "EmbedProvider",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "EmbedProvider"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "url",
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Embed",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Embed"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/embed.ts",
            "line": 170,
            "col": 2
          }
        },
        {
          "jsDoc": "Set Author of the Embed",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setAuthor",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "author",
                "optional": false,
                "tsType": {
                  "repr": "EmbedAuthor",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "EmbedAuthor"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Embed",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Embed"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/embed.ts",
            "line": 177,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setAuthor",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "image",
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Embed",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Embed"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/embed.ts",
            "line": 178,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setAuthor",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "author",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "EmbedAuthor",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "EmbedAuthor"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "image",
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Embed",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Embed"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/embed.ts",
            "line": 179,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setFields",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fields",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "EmbedField",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "EmbedField"
                    }
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Embed",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Embed"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/embed.ts",
            "line": 185,
            "col": 2
          }
        },
        {
          "jsDoc": "Adds a Field to the Embed",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addField",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "field",
                "optional": false,
                "tsType": {
                  "repr": "EmbedField",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "EmbedField"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Embed",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Embed"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/embed.ts",
            "line": 191,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addField",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "value",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "inline",
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                }
              }
            ],
            "returnType": {
              "repr": "Embed",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Embed"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/embed.ts",
            "line": 192,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addField",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "EmbedField",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "EmbedField"
                      }
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "value",
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "inline",
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                }
              }
            ],
            "returnType": {
              "repr": "Embed",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Embed"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/embed.ts",
            "line": 193,
            "col": 2
          }
        },
        {
          "jsDoc": "Adds multiple fields to the Embed",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addFields",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "rest",
                "arg": {
                  "kind": "identifier",
                  "name": "fields",
                  "optional": false,
                  "tsType": null
                },
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "EmbedField",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "EmbedField"
                    }
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Embed",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Embed"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/embed.ts",
            "line": 209,
            "col": 2
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "DMChannel",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/dmChannel.ts",
      "line": 6,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DMChannelPayload",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DMChannelPayload"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/dmChannel.ts",
            "line": 9,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "UserPayload",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "UserPayload"
              }
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "recipients",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/dmChannel.ts",
            "line": 7,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "readFromData",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "DMChannelPayload",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "DMChannelPayload"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/dmChannel.ts",
            "line": 14,
            "col": 2
          }
        }
      ],
      "extends": "TextChannel",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "MemberData",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/member.ts",
      "line": 11,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "nick",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/member.ts",
            "line": 12,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "roles",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/member.ts",
            "line": 13,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Array",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "Role",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Role"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              ],
              "typeName": "Array"
            }
          },
          "typeParams": []
        },
        {
          "name": "deaf",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/member.ts",
            "line": 14,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "mute",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/member.ts",
            "line": 15,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "Member",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/member.ts",
      "line": 18,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "MemberPayload",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "MemberPayload"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "user",
              "optional": false,
              "tsType": {
                "repr": "User",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "User"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "guild",
              "optional": false,
              "tsType": {
                "repr": "Guild",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Guild"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "perms",
              "optional": true,
              "tsType": {
                "repr": "Permissions",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Permissions"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/member.ts",
            "line": 30,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/member.ts",
            "line": 19,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "User",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "User"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "user",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/member.ts",
            "line": 20,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "nick",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/member.ts",
            "line": 21,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "MemberRolesManager",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MemberRolesManager"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "roles",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/member.ts",
            "line": 22,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "joinedAt",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/member.ts",
            "line": 23,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "premiumSince",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/member.ts",
            "line": 24,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "deaf",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/member.ts",
            "line": 25,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "mute",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/member.ts",
            "line": 26,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Guild",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Guild"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "guild",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/member.ts",
            "line": 27,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Permissions",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Permissions"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "permissions",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/member.ts",
            "line": 28,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "displayName",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/member.ts",
            "line": 51,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "toString",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/member.ts",
            "line": 55,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "readFromData",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "MemberPayload",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "MemberPayload"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/member.ts",
            "line": 59,
            "col": 2
          }
        },
        {
          "jsDoc": "Updates the Member data in cache (and this object).",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fetch",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Member",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Member"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/member.ts",
            "line": 70,
            "col": 2
          }
        },
        {
          "jsDoc": "Edits the Member\n@param data Data to apply",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "edit",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "MemberData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "MemberData"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Member",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Member"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/member.ts",
            "line": 82,
            "col": 2
          }
        },
        {
          "jsDoc": "New nickname to set. If empty, nick is reset\n@param nick New nickname",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setNickname",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "nick",
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Member",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Member"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/member.ts",
            "line": 109,
            "col": 2
          }
        },
        {
          "jsDoc": "Resets nickname of the Member",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "resetNickname",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Member",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Member"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/member.ts",
            "line": 118,
            "col": 2
          }
        },
        {
          "jsDoc": "Sets a Member mute in VC\n@param mute Value to set",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setMute",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "mute",
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Member",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Member"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/member.ts",
            "line": 126,
            "col": 2
          }
        },
        {
          "jsDoc": "Sets a Member deaf in VC\n@param deaf Value to set",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setDeaf",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "deaf",
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Member",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Member"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/member.ts",
            "line": 136,
            "col": 2
          }
        },
        {
          "jsDoc": "Unmutes the Member from VC.",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "unmute",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Member",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Member"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/member.ts",
            "line": 145,
            "col": 2
          }
        },
        {
          "jsDoc": "Kicks the member.",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "kick",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/member.ts",
            "line": 152,
            "col": 2
          }
        },
        {
          "jsDoc": "Bans the Member.\n@param reason Reason for the Ban.\n@param deleteOldMessages Delete Old Messages? If yes, how much days.",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "ban",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "reason",
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "deleteOldMessages",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/member.ts",
            "line": 169,
            "col": 2
          }
        }
      ],
      "extends": "SnowflakeBase",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "import",
    "name": "MemberRolesManager",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/member.ts",
      "line": 1,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/managers/memberRoles.ts",
      "imported": "MemberRolesManager"
    }
  },
  {
    "kind": "import",
    "name": "Client",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/member.ts",
      "line": 2,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
      "imported": "Client"
    }
  },
  {
    "kind": "import",
    "name": "GUILD_MEMBER",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/member.ts",
      "line": 3,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/types/endpoint.ts",
      "imported": "GUILD_MEMBER"
    }
  },
  {
    "kind": "import",
    "name": "MemberPayload",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/member.ts",
      "line": 4,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
      "imported": "MemberPayload"
    }
  },
  {
    "kind": "import",
    "name": "Permissions",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/member.ts",
      "line": 5,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/utils/permissions.ts",
      "imported": "Permissions"
    }
  },
  {
    "kind": "import",
    "name": "SnowflakeBase",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/member.ts",
      "line": 6,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/structures/base.ts",
      "imported": "SnowflakeBase"
    }
  },
  {
    "kind": "import",
    "name": "Guild",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/member.ts",
      "line": 7,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
      "imported": "Guild"
    }
  },
  {
    "kind": "import",
    "name": "Role",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/member.ts",
      "line": 8,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/structures/role.ts",
      "imported": "Role"
    }
  },
  {
    "kind": "import",
    "name": "User",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/member.ts",
      "line": 9,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/structures/user.ts",
      "imported": "User"
    }
  },
  {
    "kind": "class",
    "name": "GuildChannelsManager",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/guildChannels.ts",
      "line": 28,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "parent",
              "optional": false,
              "tsType": {
                "repr": "ChannelsManager",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ChannelsManager"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "guild",
              "optional": false,
              "tsType": {
                "repr": "Guild",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Guild"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/guildChannels.ts",
            "line": 34,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Guild",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Guild"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "guild",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/guildChannels.ts",
            "line": 32,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "get",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "GuildChannels",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "GuildChannels"
                        }
                      },
                      {
                        "repr": "undefined",
                        "kind": "keyword",
                        "keyword": "undefined"
                      }
                    ]
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/guildChannels.ts",
            "line": 39,
            "col": 2
          }
        },
        {
          "jsDoc": "Delete a Guild Channel",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "delete",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/guildChannels.ts",
            "line": 46,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "array",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "GuildChannels",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "GuildChannels"
                      }
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/guildChannels.ts",
            "line": 50,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "flush",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/guildChannels.ts",
            "line": 57,
            "col": 2
          }
        },
        {
          "jsDoc": "Create a new Guild Channel",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "create",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "CreateChannelOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "CreateChannelOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "GuildChannels",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "GuildChannels"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/guildChannels.ts",
            "line": 66,
            "col": 2
          }
        },
        {
          "jsDoc": "Modify the positions of a set of channel positions for the guild.",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "editPositions",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "rest",
                "arg": {
                  "kind": "identifier",
                  "name": "positions",
                  "optional": false,
                  "tsType": null
                },
                "tsType": {
                  "repr": "Array",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": [
                      {
                        "repr": "",
                        "kind": "typeLiteral",
                        "typeLiteral": {
                          "methods": [],
                          "properties": [
                            {
                              "name": "id",
                              "params": [],
                              "computed": false,
                              "optional": false,
                              "tsType": {
                                "repr": "",
                                "kind": "union",
                                "union": [
                                  {
                                    "repr": "string",
                                    "kind": "keyword",
                                    "keyword": "string"
                                  },
                                  {
                                    "repr": "GuildChannels",
                                    "kind": "typeRef",
                                    "typeRef": {
                                      "typeParams": null,
                                      "typeName": "GuildChannels"
                                    }
                                  }
                                ]
                              },
                              "typeParams": []
                            },
                            {
                              "name": "position",
                              "params": [],
                              "computed": false,
                              "optional": false,
                              "tsType": {
                                "repr": "",
                                "kind": "union",
                                "union": [
                                  {
                                    "repr": "number",
                                    "kind": "keyword",
                                    "keyword": "number"
                                  },
                                  {
                                    "repr": "null",
                                    "kind": "keyword",
                                    "keyword": "null"
                                  }
                                ]
                              },
                              "typeParams": []
                            }
                          ],
                          "callSignatures": [],
                          "indexSignatures": []
                        }
                      }
                    ],
                    "typeName": "Array"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "GuildChannelsManager",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "GuildChannelsManager"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/guildChannels.ts",
            "line": 94,
            "col": 2
          }
        }
      ],
      "extends": "BaseChildManager",
      "implements": [],
      "typeParams": [],
      "superTypeParams": [
        {
          "repr": "GuildChannelPayloads",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GuildChannelPayloads"
          }
        },
        {
          "repr": "GuildChannels",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GuildChannels"
          }
        }
      ]
    }
  },
  {
    "kind": "class",
    "name": "SlashModule",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashModule.ts",
      "line": 3,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashModule.ts",
            "line": 8,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "name",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashModule.ts",
            "line": 4,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "SlashCommandHandler",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "SlashCommandHandler"
              }
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "commands",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashModule.ts",
            "line": 5,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "SlashCommandHandler",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "SlashCommandHandler"
              }
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "_decoratedSlash",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashModule.ts",
            "line": 6,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "add",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "handler",
                "optional": false,
                "tsType": {
                  "repr": "SlashCommandHandler",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "SlashCommandHandler"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "SlashModule",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "SlashModule"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashModule.ts",
            "line": 14,
            "col": 2
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "UserFlagsManager",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/userFlags.ts",
      "line": 4,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "bits",
              "optional": false,
              "tsType": {
                "repr": "any",
                "kind": "keyword",
                "keyword": "any"
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/userFlags.ts",
            "line": 5,
            "col": 2
          }
        }
      ],
      "properties": [],
      "indexSignatures": [],
      "methods": [],
      "extends": "BitField",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "ActivityGame",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/presence.ts",
      "line": 71,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "name",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/presence.ts",
            "line": 72,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "type",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/presence.ts",
            "line": 73,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "0",
                "kind": "literal",
                "literal": {
                  "kind": "number",
                  "number": 0.0
                }
              },
              {
                "repr": "1",
                "kind": "literal",
                "literal": {
                  "kind": "number",
                  "number": 1.0
                }
              },
              {
                "repr": "2",
                "kind": "literal",
                "literal": {
                  "kind": "number",
                  "number": 2.0
                }
              },
              {
                "repr": "3",
                "kind": "literal",
                "literal": {
                  "kind": "number",
                  "number": 3.0
                }
              },
              {
                "repr": "4",
                "kind": "literal",
                "literal": {
                  "kind": "number",
                  "number": 4.0
                }
              },
              {
                "repr": "5",
                "kind": "literal",
                "literal": {
                  "kind": "number",
                  "number": 5.0
                }
              },
              {
                "repr": "ActivityType",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ActivityType"
                }
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "url",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/presence.ts",
            "line": 74,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "ClientActivity",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/presence.ts",
      "line": 77,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "status",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/presence.ts",
            "line": 78,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "StatusType",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "StatusType"
            }
          },
          "typeParams": []
        },
        {
          "name": "activity",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/presence.ts",
            "line": 79,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "ActivityGame",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ActivityGame"
                }
              },
              {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "ActivityGame",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ActivityGame"
                  }
                }
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "since",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/presence.ts",
            "line": 80,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "number",
                "kind": "keyword",
                "keyword": "number"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "afk",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/presence.ts",
            "line": 81,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "ClientStatus",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/presence.ts",
      "line": 1,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "desktop",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/presence.ts",
            "line": 2,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "StatusType",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "StatusType"
            }
          },
          "typeParams": []
        },
        {
          "name": "mobile",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/presence.ts",
            "line": 3,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "StatusType",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "StatusType"
            }
          },
          "typeParams": []
        },
        {
          "name": "web",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/presence.ts",
            "line": 4,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "StatusType",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "StatusType"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "StatusType",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/presence.ts",
      "line": 69,
      "col": 0
    },
    "jsDoc": null,
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "online",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "online"
            }
          },
          {
            "repr": "invisible",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "invisible"
            }
          },
          {
            "repr": "offline",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "offline"
            }
          },
          {
            "repr": "idle",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "idle"
            }
          },
          {
            "repr": "dnd",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "dnd"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "ActivityAssets",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/presence.ts",
      "line": 40,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "large_image",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/presence.ts",
            "line": 41,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "large_text",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/presence.ts",
            "line": 42,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "small_image",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/presence.ts",
            "line": 43,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "small_text",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/presence.ts",
            "line": 44,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "ActivityEmoji",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/presence.ts",
      "line": 29,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "name",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/presence.ts",
            "line": 30,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/presence.ts",
            "line": 31,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "animated",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/presence.ts",
            "line": 32,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "enum",
    "name": "ActivityFlags",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/presence.ts",
      "line": 53,
      "col": 0
    },
    "jsDoc": null,
    "enumDef": {
      "members": [
        {
          "name": "INSTANCE",
          "jsDoc": null
        },
        {
          "name": "JOIN",
          "jsDoc": null
        },
        {
          "name": "SPECTATE",
          "jsDoc": null
        },
        {
          "name": "JOIN_REQUEST",
          "jsDoc": null
        },
        {
          "name": "SYNC",
          "jsDoc": null
        },
        {
          "name": "PLAY",
          "jsDoc": null
        }
      ]
    }
  },
  {
    "kind": "interface",
    "name": "ActivityParty",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/presence.ts",
      "line": 35,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/presence.ts",
            "line": 36,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "size",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/presence.ts",
            "line": 37,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "number",
              "kind": "keyword",
              "keyword": "number"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "ActivityPayload",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/presence.ts",
      "line": 7,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "name",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/presence.ts",
            "line": 8,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "type",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/presence.ts",
            "line": 9,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "0",
                "kind": "literal",
                "literal": {
                  "kind": "number",
                  "number": 0.0
                }
              },
              {
                "repr": "1",
                "kind": "literal",
                "literal": {
                  "kind": "number",
                  "number": 1.0
                }
              },
              {
                "repr": "2",
                "kind": "literal",
                "literal": {
                  "kind": "number",
                  "number": 2.0
                }
              },
              {
                "repr": "3",
                "kind": "literal",
                "literal": {
                  "kind": "number",
                  "number": 3.0
                }
              },
              {
                "repr": "4",
                "kind": "literal",
                "literal": {
                  "kind": "number",
                  "number": 4.0
                }
              },
              {
                "repr": "5",
                "kind": "literal",
                "literal": {
                  "kind": "number",
                  "number": 5.0
                }
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "url",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/presence.ts",
            "line": 10,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "undefined",
                "kind": "keyword",
                "keyword": "undefined"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "created_at",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/presence.ts",
            "line": 11,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "timestamps",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/presence.ts",
            "line": 12,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "ActivityTimestamps",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ActivityTimestamps"
            }
          },
          "typeParams": []
        },
        {
          "name": "application_id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/presence.ts",
            "line": 13,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "details",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/presence.ts",
            "line": 14,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "undefined",
                "kind": "keyword",
                "keyword": "undefined"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "state",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/presence.ts",
            "line": 15,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "undefined",
                "kind": "keyword",
                "keyword": "undefined"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "emoji",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/presence.ts",
            "line": 16,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "ActivityEmoji",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ActivityEmoji"
            }
          },
          "typeParams": []
        },
        {
          "name": "party",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/presence.ts",
            "line": 17,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "ActivityParty",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ActivityParty"
            }
          },
          "typeParams": []
        },
        {
          "name": "assets",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/presence.ts",
            "line": 18,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "ActivityAssets",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ActivityAssets"
            }
          },
          "typeParams": []
        },
        {
          "name": "secrets",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/presence.ts",
            "line": 19,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "ActivitySecrets",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ActivitySecrets"
            }
          },
          "typeParams": []
        },
        {
          "name": "instance",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/presence.ts",
            "line": 20,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "flags",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/presence.ts",
            "line": 21,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "ActivitySecrets",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/presence.ts",
      "line": 47,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "join",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/presence.ts",
            "line": 48,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "spectate",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/presence.ts",
            "line": 49,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "match",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/presence.ts",
            "line": 50,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "ActivityTimestamps",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/presence.ts",
      "line": 24,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "start",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/presence.ts",
            "line": 25,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "end",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/presence.ts",
            "line": 26,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "ActivityType",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/presence.ts",
      "line": 62,
      "col": 0
    },
    "jsDoc": null,
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "PLAYING",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "PLAYING"
            }
          },
          {
            "repr": "STREAMING",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "STREAMING"
            }
          },
          {
            "repr": "LISTENING",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "LISTENING"
            }
          },
          {
            "repr": "WATCHING",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "WATCHING"
            }
          },
          {
            "repr": "CUSTOM_STATUS",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "CUSTOM_STATUS"
            }
          },
          {
            "repr": "COMPETING",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "COMPETING"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "UsersManager",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/users.ts",
      "line": 7,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/users.ts",
            "line": 8,
            "col": 2
          }
        }
      ],
      "properties": [],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fetch",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "User",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "User"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/users.ts",
            "line": 12,
            "col": 2
          }
        }
      ],
      "extends": "BaseManager",
      "implements": [],
      "typeParams": [],
      "superTypeParams": [
        {
          "repr": "UserPayload",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "UserPayload"
          }
        },
        {
          "repr": "User",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "User"
          }
        }
      ]
    }
  },
  {
    "kind": "class",
    "name": "TextChannel",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/textChannel.ts",
      "line": 36,
      "col": 0
    },
    "jsDoc": "Channel object for Text Channel type",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "TextChannelPayload",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "TextChannelPayload"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/textChannel.ts",
            "line": 41,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "lastMessageID",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/textChannel.ts",
            "line": 37,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "lastPinTimestamp",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/textChannel.ts",
            "line": 38,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "MessagesManager",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MessagesManager"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "messages",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/textChannel.ts",
            "line": 39,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "readFromData",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "TextChannelPayload",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "TextChannelPayload"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/textChannel.ts",
            "line": 48,
            "col": 2
          }
        },
        {
          "jsDoc": "@param content Text content of the Message to send.\n@param option Various other Message options.\n@param reply Reference to a Message object to reply-to.",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "send",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "content",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "AllMessageOptions",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "AllMessageOptions"
                      }
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "option",
                "optional": true,
                "tsType": {
                  "repr": "AllMessageOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "AllMessageOptions"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "reply",
                "optional": true,
                "tsType": {
                  "repr": "Message",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Message"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Message",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Message"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/textChannel.ts",
            "line": 60,
            "col": 2
          }
        },
        {
          "jsDoc": "@param message Message to edit. ID or the Message object itself.\n@param text New text contents of the Message.\n@param option Other options to edit the message.",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "editMessage",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "message",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "Message",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Message"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "text",
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "option",
                "optional": true,
                "tsType": {
                  "repr": "MessageOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "MessageOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Message",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Message"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/textChannel.ts",
            "line": 109,
            "col": 2
          }
        },
        {
          "jsDoc": "Add a reaction to a Message in this Channel",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addReaction",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "message",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "Message",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Message"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "emoji",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "Emoji",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Emoji"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/textChannel.ts",
            "line": 143,
            "col": 2
          }
        },
        {
          "jsDoc": "Remove Reaction from a Message in this Channel",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "removeReaction",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "message",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "Message",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Message"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "emoji",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "Emoji",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Emoji"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "user",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "User",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "User"
                      }
                    },
                    {
                      "repr": "Member",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Member"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/textChannel.ts",
            "line": 162,
            "col": 2
          }
        },
        {
          "jsDoc": "Fetch Messages of a Channel\n@param options Options to configure fetching Messages",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fetchMessages",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "limit",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "number",
                          "kind": "keyword",
                          "keyword": "number"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "around",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "",
                          "kind": "union",
                          "union": [
                            {
                              "repr": "Message",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": null,
                                "typeName": "Message"
                              }
                            },
                            {
                              "repr": "string",
                              "kind": "keyword",
                              "keyword": "string"
                            }
                          ]
                        },
                        "typeParams": []
                      },
                      {
                        "name": "before",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "",
                          "kind": "union",
                          "union": [
                            {
                              "repr": "Message",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": null,
                                "typeName": "Message"
                              }
                            },
                            {
                              "repr": "string",
                              "kind": "keyword",
                              "keyword": "string"
                            }
                          ]
                        },
                        "typeParams": []
                      },
                      {
                        "name": "after",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "",
                          "kind": "union",
                          "union": [
                            {
                              "repr": "Message",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": null,
                                "typeName": "Message"
                              }
                            },
                            {
                              "repr": "string",
                              "kind": "keyword",
                              "keyword": "string"
                            }
                          ]
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Collection",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        {
                          "repr": "Message",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Message"
                          }
                        }
                      ],
                      "typeName": "Collection"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/textChannel.ts",
            "line": 196,
            "col": 2
          }
        },
        {
          "jsDoc": "Trigger the typing indicator. NOT recommended to be used by bots unless you really want to.",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "triggerTyping",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "TextChannel",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "TextChannel"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/textChannel.ts",
            "line": 235,
            "col": 2
          }
        }
      ],
      "extends": "Channel",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "GuildTextChannel",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/textChannel.ts",
      "line": 242,
      "col": 0
    },
    "jsDoc": "Represents a Text Channel but in a Guild",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "GuildTextChannelPayload",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "GuildTextChannelPayload"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "guild",
              "optional": false,
              "tsType": {
                "repr": "Guild",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Guild"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/textChannel.ts",
            "line": 261,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "guildID",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/textChannel.ts",
            "line": 243,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "name",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/textChannel.ts",
            "line": 244,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "position",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/textChannel.ts",
            "line": 245,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "Overwrite",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Overwrite"
              }
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "permissionOverwrites",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/textChannel.ts",
            "line": 246,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "nsfw",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/textChannel.ts",
            "line": 247,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "parentID",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/textChannel.ts",
            "line": 248,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "slowmode",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/textChannel.ts",
            "line": 249,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "topic",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/textChannel.ts",
            "line": 250,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Guild",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Guild"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "guild",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/textChannel.ts",
            "line": 251,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "mention",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/textChannel.ts",
            "line": 253,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "toString",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/textChannel.ts",
            "line": 257,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "readFromData",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "GuildTextChannelPayload",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GuildTextChannelPayload"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/textChannel.ts",
            "line": 274,
            "col": 2
          }
        },
        {
          "jsDoc": "Edit the Guild Text Channel",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "edit",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "ModifyGuildTextChannelOption",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ModifyGuildTextChannelOption"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "GuildTextChannel",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "GuildTextChannel"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/textChannel.ts",
            "line": 288,
            "col": 2
          }
        },
        {
          "jsDoc": "Bulk Delete Messages in a Guild Text Channel\n@param messages Messages to delete. Can be a number, or Array of Message or IDs",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "bulkDelete",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "messages",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "Array",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": [
                          {
                            "repr": "",
                            "kind": "union",
                            "union": [
                              {
                                "repr": "Message",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "Message"
                                }
                              },
                              {
                                "repr": "string",
                                "kind": "keyword",
                                "keyword": "string"
                              }
                            ]
                          }
                        ],
                        "typeName": "Array"
                      }
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "GuildTextChannel",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "GuildTextChannel"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/textChannel.ts",
            "line": 310,
            "col": 2
          }
        },
        {
          "jsDoc": "Create an Invite for this Channel",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createInvite",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "CreateInviteOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "CreateInviteOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Invite",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Invite"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/textChannel.ts",
            "line": 343,
            "col": 2
          }
        },
        {
          "jsDoc": "Get Permission Overties for a specific Member",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "overwritesFor",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "member",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "Member",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Member"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "Overwrite",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Overwrite"
                      }
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/textChannel.ts",
            "line": 348,
            "col": 2
          }
        },
        {
          "jsDoc": "Get Permissions for a Member in this Channel",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "permissionsFor",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "member",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "Member",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Member"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Permissions",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Permissions"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/textChannel.ts",
            "line": 371,
            "col": 2
          }
        },
        {
          "jsDoc": "Edit name of the channel",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setName",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "GuildTextChannel",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "GuildTextChannel"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/textChannel.ts",
            "line": 398,
            "col": 2
          }
        },
        {
          "jsDoc": "Edit topic of the channel",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setTopic",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "topic",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "GuildTextChannel",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "GuildTextChannel"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/textChannel.ts",
            "line": 403,
            "col": 2
          }
        },
        {
          "jsDoc": "Edit topic of the channel",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setCategory",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "category",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "CategoryChannel",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "CategoryChannel"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "GuildTextChannel",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "GuildTextChannel"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/textChannel.ts",
            "line": 408,
            "col": 2
          }
        },
        {
          "jsDoc": "Edit position of the channel",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setPosition",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "position",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "GuildTextChannel",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "GuildTextChannel"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/textChannel.ts",
            "line": 417,
            "col": 2
          }
        },
        {
          "jsDoc": "Edit Slowmode of the channel",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setSlowmode",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "slowmode",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    },
                    {
                      "repr": "null",
                      "kind": "keyword",
                      "keyword": "null"
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "GuildTextChannel",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "GuildTextChannel"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/textChannel.ts",
            "line": 422,
            "col": 2
          }
        },
        {
          "jsDoc": "Edit NSFW property of the channel",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setNSFW",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "nsfw",
                "optional": false,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "GuildTextChannel",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "GuildTextChannel"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/textChannel.ts",
            "line": 427,
            "col": 2
          }
        },
        {
          "jsDoc": "Set Permission Overwrites of the Channel",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setOverwrites",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "overwrites",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "Overwrite",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Overwrite"
                    }
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "GuildTextChannel",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "GuildTextChannel"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/textChannel.ts",
            "line": 432,
            "col": 2
          }
        },
        {
          "jsDoc": "Add a Permission Overwrite",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addOverwrite",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "overwrite",
                "optional": false,
                "tsType": {
                  "repr": "Overwrite",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Overwrite"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "GuildTextChannel",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "GuildTextChannel"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/textChannel.ts",
            "line": 437,
            "col": 2
          }
        },
        {
          "jsDoc": "Remove a Permission Overwrite",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "removeOverwrite",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "GuildTextChannel",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "GuildTextChannel"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/textChannel.ts",
            "line": 444,
            "col": 2
          }
        },
        {
          "jsDoc": "Edit a Permission Overwrite",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "editOverwrite",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "overwrite",
                "optional": false,
                "tsType": {
                  "repr": "Overwrite",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Overwrite"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "GuildTextChannel",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "GuildTextChannel"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/textChannel.ts",
            "line": 452,
            "col": 2
          }
        }
      ],
      "extends": "TextChannel",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "AllMessageOptions",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/textChannel.ts",
      "line": 33,
      "col": 0
    },
    "jsDoc": null,
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "MessageOptions",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MessageOptions"
            }
          },
          {
            "repr": "Embed",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Embed"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "ApplicationPayload",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/application.ts",
      "line": 3,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/application.ts",
            "line": 4,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "name",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/application.ts",
            "line": 5,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "icon",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/application.ts",
            "line": 6,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "description",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/application.ts",
            "line": 7,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "summary",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/application.ts",
            "line": 8,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "bot",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/application.ts",
            "line": 9,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "UserPayload",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "UserPayload"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "InvitePayload",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/invite.ts",
      "line": 7,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "code",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/invite.ts",
            "line": 8,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "guild",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/invite.ts",
            "line": 9,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "GuildPayload",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GuildPayload"
            }
          },
          "typeParams": []
        },
        {
          "name": "channel",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/invite.ts",
            "line": 10,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "ChannelPayload",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ChannelPayload"
            }
          },
          "typeParams": []
        },
        {
          "name": "inviter",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/invite.ts",
            "line": 11,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "UserPayload",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "UserPayload"
            }
          },
          "typeParams": []
        },
        {
          "name": "target_user",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/invite.ts",
            "line": 12,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "UserPayload",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "UserPayload"
            }
          },
          "typeParams": []
        },
        {
          "name": "target_user_type",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/invite.ts",
            "line": 13,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "approximate_presence_count",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/invite.ts",
            "line": 14,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "approximate_member_count",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/invite.ts",
            "line": 15,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "PartialInvitePayload",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/invite.ts",
      "line": 18,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "code",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/invite.ts",
            "line": 19,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "channel",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/invite.ts",
            "line": 20,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "Channel",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Channel"
            }
          },
          "typeParams": []
        },
        {
          "name": "guild",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/invite.ts",
            "line": 21,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Guild",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Guild"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "BaseChildManager",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/baseChild.ts",
      "line": 6,
      "col": 0
    },
    "jsDoc": "Child Managers validate data from their parents i.e. from Managers",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "parent",
              "optional": false,
              "tsType": {
                "repr": "BaseManager",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": [
                    {
                      "repr": "T",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "T"
                      }
                    },
                    {
                      "repr": "T2",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "T2"
                      }
                    }
                  ],
                  "typeName": "BaseManager"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/baseChild.ts",
            "line": 11,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Client",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Client"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "client",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/baseChild.ts",
            "line": 7,
            "col": 2
          }
        },
        {
          "jsDoc": "Parent Manager",
          "tsType": {
            "repr": "BaseManager",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "T",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "T"
                  }
                },
                {
                  "repr": "T2",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "T2"
                  }
                }
              ],
              "typeName": "BaseManager"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "parent",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/baseChild.ts",
            "line": 9,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "get",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "key",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "T2",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "T2"
                        }
                      },
                      {
                        "repr": "undefined",
                        "kind": "keyword",
                        "keyword": "undefined"
                      }
                    ]
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/baseChild.ts",
            "line": 16,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "set",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "key",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "value",
                "optional": false,
                "tsType": {
                  "repr": "T",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "T"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/baseChild.ts",
            "line": 20,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "delete",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "key",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "any",
                    "kind": "keyword",
                    "keyword": "any"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/baseChild.ts",
            "line": 24,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "array",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "any",
                    "kind": "keyword",
                    "keyword": "any"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/baseChild.ts",
            "line": 28,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "collection",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Collection",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        {
                          "repr": "T2",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "T2"
                          }
                        }
                      ],
                      "typeName": "Collection"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/baseChild.ts",
            "line": 32,
            "col": 2
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [
        {
          "name": "T"
        },
        {
          "name": "T2"
        }
      ],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "VoiceChannel",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guildVoiceChannel.ts",
      "line": 19,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "GuildVoiceChannelPayload",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "GuildVoiceChannelPayload"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "guild",
              "optional": false,
              "tsType": {
                "repr": "Guild",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Guild"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guildVoiceChannel.ts",
            "line": 29,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "bitrate",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guildVoiceChannel.ts",
            "line": 20,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "userLimit",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guildVoiceChannel.ts",
            "line": 21,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "guildID",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guildVoiceChannel.ts",
            "line": 22,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "name",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guildVoiceChannel.ts",
            "line": 23,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Guild",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Guild"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "guild",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guildVoiceChannel.ts",
            "line": 24,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "position",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guildVoiceChannel.ts",
            "line": 25,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "Overwrite",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Overwrite"
              }
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "permissionOverwrites",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guildVoiceChannel.ts",
            "line": 26,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "parentID",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guildVoiceChannel.ts",
            "line": 27,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": "Join the Voice Channel",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "join",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "intersection",
                  "intersection": [
                    {
                      "repr": "VoiceStateOptions",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "VoiceStateOptions"
                      }
                    },
                    {
                      "repr": "",
                      "kind": "typeLiteral",
                      "typeLiteral": {
                        "methods": [],
                        "properties": [
                          {
                            "name": "onlyJoin",
                            "params": [],
                            "computed": false,
                            "optional": true,
                            "tsType": {
                              "repr": "boolean",
                              "kind": "keyword",
                              "keyword": "boolean"
                            },
                            "typeParams": []
                          }
                        ],
                        "callSignatures": [],
                        "indexSignatures": []
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "VoiceServerUpdateData",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "VoiceServerUpdateData"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guildVoiceChannel.ts",
            "line": 42,
            "col": 2
          }
        },
        {
          "jsDoc": "Leave the Voice Channel",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "leave",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guildVoiceChannel.ts",
            "line": 97,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "readFromData",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "GuildVoiceChannelPayload",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GuildVoiceChannelPayload"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guildVoiceChannel.ts",
            "line": 103,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "edit",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "ModifyVoiceChannelOption",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ModifyVoiceChannelOption"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "VoiceChannel",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "VoiceChannel"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guildVoiceChannel.ts",
            "line": 115,
            "col": 2
          }
        }
      ],
      "extends": "Channel",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "Intents",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/intents.ts",
      "line": 7,
      "col": 0
    },
    "jsDoc": "Utility class for handling Gateway Intents",
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "number",
              "kind": "keyword",
              "keyword": "number"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "NonPrivileged",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/intents.ts",
            "line": 8,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "number",
              "kind": "keyword",
              "keyword": "number"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "All",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/intents.ts",
            "line": 24,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "number",
              "kind": "keyword",
              "keyword": "number"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "Presence",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/intents.ts",
            "line": 30,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "number",
              "kind": "keyword",
              "keyword": "number"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "GuildMembers",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/intents.ts",
            "line": 35,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "number",
              "kind": "keyword",
              "keyword": "number"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "None",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/intents.ts",
            "line": 40,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": "Create an Array of Intents easily passing Intents you're privileged for and disable the ones you don't need",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "create",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "privileged",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "PrivilegedIntents",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "PrivilegedIntents"
                    }
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "disable",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "array",
              "array": {
                "repr": "number",
                "kind": "keyword",
                "keyword": "number"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/intents.ts",
            "line": 43,
            "col": 2
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "EmojiPayload",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/emoji.ts",
      "line": 3,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/emoji.ts",
            "line": 4,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "name",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/emoji.ts",
            "line": 5,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "roles",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/emoji.ts",
            "line": 6,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            }
          },
          "typeParams": []
        },
        {
          "name": "user",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/emoji.ts",
            "line": 7,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "UserPayload",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "UserPayload"
            }
          },
          "typeParams": []
        },
        {
          "name": "require_colons",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/emoji.ts",
            "line": 8,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "managed",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/emoji.ts",
            "line": 9,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "animated",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/emoji.ts",
            "line": 10,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "available",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/emoji.ts",
            "line": 11,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "BaseManager",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/base.ts",
      "line": 9,
      "col": 0
    },
    "jsDoc": "Managers handle caching data. And also some REST Methods as required.\n\nYou should not be making Managers yourself.",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "cacheName",
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            },
            {
              "kind": "identifier",
              "name": "DataType",
              "optional": false,
              "tsType": {
                "repr": "any",
                "kind": "keyword",
                "keyword": "any"
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/base.ts",
            "line": 16,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Client",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Client"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "client",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/base.ts",
            "line": 10,
            "col": 2
          }
        },
        {
          "jsDoc": "Caches Name or Key used to differentiate caches",
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "cacheName",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/base.ts",
            "line": 12,
            "col": 2
          }
        },
        {
          "jsDoc": "Which data type does this cache have",
          "tsType": {
            "repr": "any",
            "kind": "keyword",
            "keyword": "any"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "DataType",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/base.ts",
            "line": 14,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": "Gets raw value from a cache (payload)",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "_get",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "key",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "T",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "T"
                        }
                      },
                      {
                        "repr": "undefined",
                        "kind": "keyword",
                        "keyword": "undefined"
                      }
                    ]
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/base.ts",
            "line": 23,
            "col": 2
          }
        },
        {
          "jsDoc": "Gets a value from Cache",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "get",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "key",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "T2",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "T2"
                        }
                      },
                      {
                        "repr": "undefined",
                        "kind": "keyword",
                        "keyword": "undefined"
                      }
                    ]
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/base.ts",
            "line": 28,
            "col": 2
          }
        },
        {
          "jsDoc": "Sets a value to Cache",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "set",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "key",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "value",
                "optional": false,
                "tsType": {
                  "repr": "T",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "T"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "any",
                    "kind": "keyword",
                    "keyword": "any"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/base.ts",
            "line": 35,
            "col": 2
          }
        },
        {
          "jsDoc": "Deletes a key from Cache",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "_delete",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "key",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/base.ts",
            "line": 40,
            "col": 2
          }
        },
        {
          "jsDoc": "Gets an Array of values from Cache",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "array",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "T2",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "T2"
                      }
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/base.ts",
            "line": 45,
            "col": 2
          }
        },
        {
          "jsDoc": "Gets a Collection of values from Cache",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "collection",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Collection",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        {
                          "repr": "T2",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "T2"
                          }
                        }
                      ],
                      "typeName": "Collection"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/base.ts",
            "line": 52,
            "col": 2
          }
        },
        {
          "jsDoc": "Deletes everything from Cache",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "flush",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/base.ts",
            "line": 64,
            "col": 2
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [
        {
          "name": "T"
        },
        {
          "name": "T2"
        }
      ],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "ReactionUsersManager",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/reactionUsers.ts",
      "line": 6,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "reaction",
              "optional": false,
              "tsType": {
                "repr": "MessageReaction",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "MessageReaction"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/reactionUsers.ts",
            "line": 9,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "MessageReaction",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MessageReaction"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "reaction",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/reactionUsers.ts",
            "line": 7,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": "Remove all Users from this Reaction",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "removeAll",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/reactionUsers.ts",
            "line": 16,
            "col": 2
          }
        },
        {
          "jsDoc": "Remove a specific User from this Reaction",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "remove",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "user",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "User",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "User"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/reactionUsers.ts",
            "line": 21,
            "col": 2
          }
        }
      ],
      "extends": "UsersManager",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "MessagesManager",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/messages.ts",
      "line": 9,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "channel",
              "optional": false,
              "tsType": {
                "repr": "TextChannel",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "TextChannel"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/messages.ts",
            "line": 12,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "TextChannel",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "TextChannel"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "channel",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/messages.ts",
            "line": 10,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "get",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "key",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "Message",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Message"
                        }
                      },
                      {
                        "repr": "undefined",
                        "kind": "keyword",
                        "keyword": "undefined"
                      }
                    ]
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/messages.ts",
            "line": 17,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "set",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "key",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "value",
                "optional": false,
                "tsType": {
                  "repr": "MessagePayload",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "MessagePayload"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "any",
                    "kind": "keyword",
                    "keyword": "any"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/messages.ts",
            "line": 38,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "array",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "Message",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Message"
                      }
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/messages.ts",
            "line": 47,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fetch",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Message",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Message"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/messages.ts",
            "line": 83,
            "col": 2
          }
        }
      ],
      "extends": "BaseManager",
      "implements": [],
      "typeParams": [],
      "superTypeParams": [
        {
          "repr": "MessagePayload",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "MessagePayload"
          }
        },
        {
          "repr": "Message",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Message"
          }
        }
      ]
    }
  },
  {
    "kind": "class",
    "name": "GroupDMChannel",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/groupChannel.ts",
      "line": 5,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "GroupDMChannelPayload",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "GroupDMChannelPayload"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/groupChannel.ts",
            "line": 10,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "name",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/groupChannel.ts",
            "line": 6,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "icon",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/groupChannel.ts",
            "line": 7,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "ownerID",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/groupChannel.ts",
            "line": 8,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "readFromData",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "GroupDMChannelPayload",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GroupDMChannelPayload"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/groupChannel.ts",
            "line": 18,
            "col": 2
          }
        }
      ],
      "extends": "Channel",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "ImageFormats",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/cdn.ts",
      "line": 2,
      "col": 0
    },
    "jsDoc": null,
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "jpg",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "jpg"
            }
          },
          {
            "repr": "jpeg",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "jpeg"
            }
          },
          {
            "repr": "png",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "png"
            }
          },
          {
            "repr": "webp",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "webp"
            }
          },
          {
            "repr": "gif",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "gif"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "ImageSize",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/cdn.ts",
      "line": 1,
      "col": 0
    },
    "jsDoc": null,
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "16",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 16.0
            }
          },
          {
            "repr": "32",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 32.0
            }
          },
          {
            "repr": "64",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 64.0
            }
          },
          {
            "repr": "128",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 128.0
            }
          },
          {
            "repr": "256",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 256.0
            }
          },
          {
            "repr": "512",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 512.0
            }
          },
          {
            "repr": "1024",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 1024.0
            }
          },
          {
            "repr": "2048",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 2048.0
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "ClientProperties",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
      "line": 30,
      "col": 0
    },
    "jsDoc": "OS related properties sent with Gateway Identify",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "os",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 31,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "darwin",
                "kind": "literal",
                "literal": {
                  "kind": "string",
                  "string": "darwin"
                }
              },
              {
                "repr": "windows",
                "kind": "literal",
                "literal": {
                  "kind": "string",
                  "string": "windows"
                }
              },
              {
                "repr": "linux",
                "kind": "literal",
                "literal": {
                  "kind": "string",
                  "string": "linux"
                }
              },
              {
                "repr": "custom_os",
                "kind": "literal",
                "literal": {
                  "kind": "string",
                  "string": "custom_os"
                }
              },
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "browser",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 32,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "harmony",
                "kind": "literal",
                "literal": {
                  "kind": "string",
                  "string": "harmony"
                }
              },
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "device",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 33,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "harmony",
                "kind": "literal",
                "literal": {
                  "kind": "string",
                  "string": "harmony"
                }
              },
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            ]
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "ClientOptions",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
      "line": 37,
      "col": 0
    },
    "jsDoc": "Some Client Options to modify behaviour",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 39,
            "col": 2
          },
          "jsDoc": "ID of the Client/Application to initialize Slash Client REST",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "token",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 41,
            "col": 2
          },
          "jsDoc": "Token of the Bot/User",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "intents",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 43,
            "col": 2
          },
          "jsDoc": "Gateway Intents",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "GatewayIntents",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "GatewayIntents"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "cache",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 45,
            "col": 2
          },
          "jsDoc": "Cache Adapter to use, defaults to Collections one",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "ICacheAdapter",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ICacheAdapter"
            }
          },
          "typeParams": []
        },
        {
          "name": "forceNewSession",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 47,
            "col": 2
          },
          "jsDoc": "Force New Session and don't use cached Session (by persistent caching)",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "presence",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 49,
            "col": 2
          },
          "jsDoc": "Startup presence of client",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "ClientPresence",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ClientPresence"
                }
              },
              {
                "repr": "ClientActivity",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ClientActivity"
                }
              },
              {
                "repr": "ActivityGame",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ActivityGame"
                }
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "canary",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 51,
            "col": 2
          },
          "jsDoc": "Force all requests to Canary API",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "messageCacheLifetime",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 53,
            "col": 2
          },
          "jsDoc": "Time till which Messages are to be cached, in MS. Default is 3600000",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "reactionCacheLifetime",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 55,
            "col": 2
          },
          "jsDoc": "Time till which Message Reactions are to be cached, in MS. Default is 3600000",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "fetchUncachedReactions",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 57,
            "col": 2
          },
          "jsDoc": "Whether to fetch Uncached Message of Reaction or not?",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "clientProperties",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 59,
            "col": 2
          },
          "jsDoc": "Client Properties",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "ClientProperties",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ClientProperties"
            }
          },
          "typeParams": []
        },
        {
          "name": "enableSlash",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 61,
            "col": 2
          },
          "jsDoc": "Enable/Disable Slash Commands Integration (enabled by default)",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "disableEnvToken",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 63,
            "col": 2
          },
          "jsDoc": "Disable taking token from env if not provided (token is taken from env if present by default)",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "restOptions",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 65,
            "col": 2
          },
          "jsDoc": "Override REST Options",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "RESTOptions",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "RESTOptions"
            }
          },
          "typeParams": []
        },
        {
          "name": "fetchGatewayInfo",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 67,
            "col": 2
          },
          "jsDoc": "Whether to fetch Gateway info or not",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "shard",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 69,
            "col": 2
          },
          "jsDoc": "ADVANCED: Shard ID to launch on",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "shardCount",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 71,
            "col": 2
          },
          "jsDoc": "ADVACNED: Shard count.",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "number",
                "kind": "keyword",
                "keyword": "number"
              },
              {
                "repr": "auto",
                "kind": "literal",
                "literal": {
                  "kind": "string",
                  "string": "auto"
                }
              }
            ]
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "Client",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
      "line": 77,
      "col": 0
    },
    "jsDoc": "Discord Client.",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "assign",
              "left": {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "ClientOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ClientOptions"
                  }
                }
              },
              "right": "<UNIMPLEMENTED>",
              "tsType": null
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 160,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": "REST Manager - used to make all requests",
          "tsType": {
            "repr": "RESTManager",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "RESTManager"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "rest",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 79,
            "col": 2
          }
        },
        {
          "jsDoc": "User which Client logs in to, undefined until logs in",
          "tsType": {
            "repr": "User",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "User"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "user",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 81,
            "col": 2
          }
        },
        {
          "jsDoc": "WebSocket ping of Client",
          "tsType": null,
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "ping",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 83,
            "col": 2
          }
        },
        {
          "jsDoc": "Token of the Bot/User",
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "token",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 85,
            "col": 2
          }
        },
        {
          "jsDoc": "Cache Adapter",
          "tsType": {
            "repr": "ICacheAdapter",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ICacheAdapter"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "cache",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 87,
            "col": 2
          }
        },
        {
          "jsDoc": "Gateway Intents",
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "GatewayIntents",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "GatewayIntents"
              }
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "intents",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 89,
            "col": 2
          }
        },
        {
          "jsDoc": "Whether to force new session or not",
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "forceNewSession",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 91,
            "col": 2
          }
        },
        {
          "jsDoc": "Time till messages to stay cached, in MS.",
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "messageCacheLifetime",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 93,
            "col": 2
          }
        },
        {
          "jsDoc": "Time till messages to stay cached, in MS.",
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "reactionCacheLifetime",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 95,
            "col": 2
          }
        },
        {
          "jsDoc": "Whether to fetch Uncached Message of Reaction or not?",
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fetchUncachedReactions",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 97,
            "col": 2
          }
        },
        {
          "jsDoc": "Client Properties",
          "tsType": {
            "repr": "ClientProperties",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ClientProperties"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "clientProperties",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 99,
            "col": 2
          }
        },
        {
          "jsDoc": "Slash-Commands Management client",
          "tsType": {
            "repr": "SlashClient",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "SlashClient"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "slash",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 101,
            "col": 2
          }
        },
        {
          "jsDoc": "Whether to fetch Gateway info or not",
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fetchGatewayInfo",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 103,
            "col": 2
          }
        },
        {
          "jsDoc": "Users Manager, containing all Users cached",
          "tsType": {
            "repr": "UsersManager",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "UsersManager"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "users",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 106,
            "col": 2
          }
        },
        {
          "jsDoc": "Guilds Manager, providing cache & API interface to Guilds",
          "tsType": {
            "repr": "GuildManager",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GuildManager"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "guilds",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 108,
            "col": 2
          }
        },
        {
          "jsDoc": "Channels Manager, providing cache interface to Channels",
          "tsType": {
            "repr": "ChannelsManager",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ChannelsManager"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "channels",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 110,
            "col": 2
          }
        },
        {
          "jsDoc": "Channels Manager, providing cache interface to Channels",
          "tsType": {
            "repr": "EmojisManager",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "EmojisManager"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "emojis",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 112,
            "col": 2
          }
        },
        {
          "jsDoc": "Last READY timestamp",
          "tsType": {
            "repr": "Date",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Date"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "upSince",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 115,
            "col": 2
          }
        },
        {
          "jsDoc": "Client's presence. Startup one if set before connecting",
          "tsType": {
            "repr": "ClientPresence",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ClientPresence"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "presence",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 118,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [],
              "callSignatures": [],
              "indexSignatures": [
                {
                  "readonly": false,
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "name",
                      "optional": false,
                      "tsType": {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    }
                  ],
                  "tsType": {
                    "repr": "",
                    "kind": "fnOrConstructor",
                    "fnOrConstructor": {
                      "constructor": false,
                      "tsType": {
                        "repr": "void",
                        "kind": "keyword",
                        "keyword": "void"
                      },
                      "params": [
                        {
                          "kind": "rest",
                          "arg": {
                            "kind": "identifier",
                            "name": "args",
                            "optional": false,
                            "tsType": null
                          },
                          "tsType": {
                            "repr": "",
                            "kind": "array",
                            "array": {
                              "repr": "any",
                              "kind": "keyword",
                              "keyword": "any"
                            }
                          }
                        }
                      ],
                      "typeParams": []
                    }
                  }
                }
              ]
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "_decoratedEvents",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 119,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Array",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "name",
                        "params": [],
                        "computed": false,
                        "optional": false,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "guild",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "parent",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "group",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "handler",
                        "params": [],
                        "computed": false,
                        "optional": false,
                        "tsType": {
                          "repr": "",
                          "kind": "fnOrConstructor",
                          "fnOrConstructor": {
                            "constructor": false,
                            "tsType": {
                              "repr": "any",
                              "kind": "keyword",
                              "keyword": "any"
                            },
                            "params": [
                              {
                                "kind": "identifier",
                                "name": "interaction",
                                "optional": false,
                                "tsType": {
                                  "repr": "Interaction",
                                  "kind": "typeRef",
                                  "typeRef": {
                                    "typeParams": null,
                                    "typeName": "Interaction"
                                  }
                                }
                              }
                            ],
                            "typeParams": []
                          }
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              ],
              "typeName": "Array"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "_decoratedSlash",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 123,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "_id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 131,
            "col": 2
          }
        },
        {
          "jsDoc": "Shard on which this Client is",
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "shard",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 134,
            "col": 2
          }
        },
        {
          "jsDoc": "Shard Count",
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "number",
                "kind": "keyword",
                "keyword": "number"
              },
              {
                "repr": "auto",
                "kind": "literal",
                "literal": {
                  "kind": "string",
                  "string": "auto"
                }
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "shardCount",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 136,
            "col": 2
          }
        },
        {
          "jsDoc": "Shard Manager of this Client if Sharded",
          "tsType": {
            "repr": "ShardManager",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ShardManager"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "shards",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 138,
            "col": 2
          }
        },
        {
          "jsDoc": "Collectors set",
          "tsType": {
            "repr": "Set",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "Collector",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Collector"
                  }
                }
              ],
              "typeName": "Set"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "collectors",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 140,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "applicationID",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 157,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "applicationFlags",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 158,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": "Since when is Client online (ready).",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "uptime",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "number",
              "kind": "keyword",
              "keyword": "number"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 143,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "gateway",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Gateway",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Gateway"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 152,
            "col": 2
          }
        },
        {
          "jsDoc": "Sets Cache Adapter\n\nShould NOT be set after bot is already logged in or using current cache.\nPlease look into using `cache` option.",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setAdapter",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "adapter",
                "optional": false,
                "tsType": {
                  "repr": "ICacheAdapter",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ICacheAdapter"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Client",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Client"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 238,
            "col": 2
          }
        },
        {
          "jsDoc": "Changes Presence of Client",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setPresence",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "presence",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "ClientPresence",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "ClientPresence"
                      }
                    },
                    {
                      "repr": "ClientActivity",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "ClientActivity"
                      }
                    },
                    {
                      "repr": "ActivityGame",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "ActivityGame"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 244,
            "col": 2
          }
        },
        {
          "jsDoc": "Emits debug event",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "debug",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "tag",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "msg",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 252,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getEstimatedID",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 257,
            "col": 2
          }
        },
        {
          "jsDoc": "Fetch Application of the Client",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fetchApplication",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Application",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Application"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 271,
            "col": 2
          }
        },
        {
          "jsDoc": "Fetch an Invite",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fetchInvite",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Invite",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Invite"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 277,
            "col": 2
          }
        },
        {
          "jsDoc": "This function is used for connecting to discord.\n@param token Your token. This is required if not given in ClientOptions.\n@param intents Gateway intents in array. This is required if not given in ClientOptions.",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "connect",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "token",
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "intents",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "GatewayIntents",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "GatewayIntents"
                    }
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Client",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Client"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 293,
            "col": 2
          }
        },
        {
          "jsDoc": "Destroy the Gateway connection",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "destroy",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Client",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Client"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 318,
            "col": 2
          }
        },
        {
          "jsDoc": "Attempt to Close current Gateway connection and Resume",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "reconnect",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Client",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Client"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 331,
            "col": 2
          }
        },
        {
          "jsDoc": "Add a new Collector",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addCollector",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "collector",
                "optional": false,
                "tsType": {
                  "repr": "Collector",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Collector"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 338,
            "col": 2
          }
        },
        {
          "jsDoc": "Remove a Collector",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "removeCollector",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "collector",
                "optional": false,
                "tsType": {
                  "repr": "Collector",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Collector"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 347,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "emit",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "typeOperator",
                  "typeOperator": {
                    "operator": "keyof",
                    "tsType": {
                      "repr": "ClientEvents",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "ClientEvents"
                      }
                    }
                  }
                }
              },
              {
                "kind": "rest",
                "arg": {
                  "kind": "identifier",
                  "name": "args",
                  "optional": false,
                  "tsType": null
                },
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "any",
                    "kind": "keyword",
                    "keyword": "any"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 355,
            "col": 2
          }
        },
        {
          "jsDoc": "Returns an array of voice region objects that can be used when creating servers.",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fetchVoiceRegions",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "VoiceRegion",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "VoiceRegion"
                      }
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 370,
            "col": 2
          }
        },
        {
          "jsDoc": "Modify current (Client) User.",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "editUser",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "username",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "avatar",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Client",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Client"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 375,
            "col": 2
          }
        },
        {
          "jsDoc": "Change Username of the Client User",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setUsername",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "username",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Client",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Client"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 396,
            "col": 2
          }
        },
        {
          "jsDoc": "Change Avatar of the Client User",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setAvatar",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "avatar",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Client",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Client"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 401,
            "col": 2
          }
        },
        {
          "jsDoc": "Create a DM Channel with a User",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createDM",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "user",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "User",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "User"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "DMChannel",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "DMChannel"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 406,
            "col": 2
          }
        },
        {
          "jsDoc": "Returns a template object for the given code.",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fetchTemplate",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "code",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Template",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Template"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
            "line": 416,
            "col": 2
          }
        }
      ],
      "extends": "HarmonyEventEmitter",
      "implements": [],
      "typeParams": [],
      "superTypeParams": [
        {
          "repr": "ClientEvents",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "ClientEvents"
          }
        }
      ]
    }
  },
  {
    "kind": "function",
    "name": "event",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
      "line": 423,
      "col": 0
    },
    "jsDoc": "Event decorator to create an Event handler from function",
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "name",
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "typeOperator",
            "typeOperator": {
              "operator": "keyof",
              "tsType": {
                "repr": "ClientEvents",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ClientEvents"
                }
              }
            }
          }
        }
      ],
      "returnType": null,
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "function",
    "name": "slash",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
      "line": 441,
      "col": 0
    },
    "jsDoc": "Decorator to create a Slash Command handler",
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "name",
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          }
        },
        {
          "kind": "identifier",
          "name": "guild",
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          }
        }
      ],
      "returnType": null,
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "function",
    "name": "subslash",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
      "line": 457,
      "col": 0
    },
    "jsDoc": "Decorator to create a Sub-Slash Command handler",
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "parent",
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          }
        },
        {
          "kind": "identifier",
          "name": "name",
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          }
        },
        {
          "kind": "identifier",
          "name": "guild",
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          }
        }
      ],
      "returnType": null,
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "function",
    "name": "groupslash",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
      "line": 474,
      "col": 0
    },
    "jsDoc": "Decorator to create a Grouped Slash Command handler",
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "parent",
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          }
        },
        {
          "kind": "identifier",
          "name": "group",
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          }
        },
        {
          "kind": "identifier",
          "name": "name",
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          }
        },
        {
          "kind": "identifier",
          "name": "guild",
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          }
        }
      ],
      "returnType": null,
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "import",
    "name": "User",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
      "line": 2,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/structures/user.ts",
      "imported": "User"
    }
  },
  {
    "kind": "import",
    "name": "GatewayIntents",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
      "line": 3,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/types/gateway.ts",
      "imported": "GatewayIntents"
    }
  },
  {
    "kind": "import",
    "name": "Gateway",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
      "line": 4,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/gateway/index.ts",
      "imported": "Gateway"
    }
  },
  {
    "kind": "import",
    "name": "RESTManager",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
      "line": 5,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/models/rest.ts",
      "imported": "RESTManager"
    }
  },
  {
    "kind": "import",
    "name": "RESTOptions",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
      "line": 5,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/models/rest.ts",
      "imported": "RESTOptions"
    }
  },
  {
    "kind": "import",
    "name": "TokenType",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
      "line": 5,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/models/rest.ts",
      "imported": "TokenType"
    }
  },
  {
    "kind": "import",
    "name": "DefaultCacheAdapter",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
      "line": 6,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/models/cacheAdapter.ts",
      "imported": "DefaultCacheAdapter"
    }
  },
  {
    "kind": "import",
    "name": "ICacheAdapter",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
      "line": 6,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/models/cacheAdapter.ts",
      "imported": "ICacheAdapter"
    }
  },
  {
    "kind": "import",
    "name": "UsersManager",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
      "line": 7,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/managers/users.ts",
      "imported": "UsersManager"
    }
  },
  {
    "kind": "import",
    "name": "GuildManager",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
      "line": 8,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/managers/guilds.ts",
      "imported": "GuildManager"
    }
  },
  {
    "kind": "import",
    "name": "ChannelsManager",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
      "line": 9,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/managers/channels.ts",
      "imported": "ChannelsManager"
    }
  },
  {
    "kind": "import",
    "name": "ClientPresence",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
      "line": 10,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/structures/presence.ts",
      "imported": "ClientPresence"
    }
  },
  {
    "kind": "import",
    "name": "EmojisManager",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
      "line": 11,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/managers/emojis.ts",
      "imported": "EmojisManager"
    }
  },
  {
    "kind": "import",
    "name": "ActivityGame",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
      "line": 12,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/types/presence.ts",
      "imported": "ActivityGame"
    }
  },
  {
    "kind": "import",
    "name": "ClientActivity",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
      "line": 12,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/types/presence.ts",
      "imported": "ClientActivity"
    }
  },
  {
    "kind": "import",
    "name": "Extension",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
      "line": 13,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/models/extensions.ts",
      "imported": "Extension"
    }
  },
  {
    "kind": "import",
    "name": "SlashClient",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
      "line": 14,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
      "imported": "SlashClient"
    }
  },
  {
    "kind": "import",
    "name": "Interaction",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
      "line": 15,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/structures/slash.ts",
      "imported": "Interaction"
    }
  },
  {
    "kind": "import",
    "name": "SlashModule",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
      "line": 16,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashModule.ts",
      "imported": "SlashModule"
    }
  },
  {
    "kind": "import",
    "name": "ShardManager",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
      "line": 17,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/models/shard.ts",
      "imported": "ShardManager"
    }
  },
  {
    "kind": "import",
    "name": "Application",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
      "line": 18,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/structures/application.ts",
      "imported": "Application"
    }
  },
  {
    "kind": "import",
    "name": "Invite",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
      "line": 19,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/structures/invite.ts",
      "imported": "Invite"
    }
  },
  {
    "kind": "import",
    "name": "INVITE",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
      "line": 20,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/types/endpoint.ts",
      "imported": "INVITE"
    }
  },
  {
    "kind": "import",
    "name": "ClientEvents",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
      "line": 21,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/gateway/handlers/index.ts",
      "imported": "ClientEvents"
    }
  },
  {
    "kind": "import",
    "name": "Collector",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
      "line": 22,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/models/collectors.ts",
      "imported": "Collector"
    }
  },
  {
    "kind": "import",
    "name": "HarmonyEventEmitter",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
      "line": 23,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/utils/events.ts",
      "imported": "HarmonyEventEmitter"
    }
  },
  {
    "kind": "import",
    "name": "VoiceRegion",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
      "line": 24,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/types/voice.ts",
      "imported": "VoiceRegion"
    }
  },
  {
    "kind": "import",
    "name": "fetchAuto",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
      "line": 25,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/deps.ts",
      "imported": "fetchAuto"
    }
  },
  {
    "kind": "import",
    "name": "DMChannel",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
      "line": 26,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/structures/dmChannel.ts",
      "imported": "DMChannel"
    }
  },
  {
    "kind": "import",
    "name": "Template",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
      "line": 27,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/structures/template.ts",
      "imported": "Template"
    }
  },
  {
    "kind": "typeAlias",
    "name": "BitFieldResolvable",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/bitfield.ts",
      "line": 2,
      "col": 0
    },
    "jsDoc": null,
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "number",
              "kind": "keyword",
              "keyword": "number"
            }
          },
          {
            "repr": "BitField",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "BitField"
            }
          },
          {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            }
          },
          {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "BitField",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "BitField"
              }
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "BitField",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/bitfield.ts",
      "line": 11,
      "col": 0
    },
    "jsDoc": "Bit Field utility to work with Bits and Flags",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "flags",
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "typeLiteral",
                "typeLiteral": {
                  "methods": [],
                  "properties": [],
                  "callSignatures": [],
                  "indexSignatures": [
                    {
                      "readonly": false,
                      "params": [
                        {
                          "kind": "identifier",
                          "name": "name",
                          "optional": false,
                          "tsType": {
                            "repr": "string",
                            "kind": "keyword",
                            "keyword": "string"
                          }
                        }
                      ],
                      "tsType": {
                        "repr": "number",
                        "kind": "keyword",
                        "keyword": "number"
                      }
                    }
                  ]
                }
              }
            },
            {
              "kind": "identifier",
              "name": "bits",
              "optional": false,
              "tsType": {
                "repr": "any",
                "kind": "keyword",
                "keyword": "any"
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/bitfield.ts",
            "line": 15,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [],
              "callSignatures": [],
              "indexSignatures": [
                {
                  "readonly": false,
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "name",
                      "optional": false,
                      "tsType": {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    }
                  ],
                  "tsType": {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  }
                }
              ]
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "flags",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/bitfield.ts",
            "line": 12,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "bitfield",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/bitfield.ts",
            "line": 13,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "any",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "bit",
                "optional": false,
                "tsType": {
                  "repr": "BitFieldResolvable",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "BitFieldResolvable"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/bitfield.ts",
            "line": 20,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "equals",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "bit",
                "optional": false,
                "tsType": {
                  "repr": "BitFieldResolvable",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "BitFieldResolvable"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/bitfield.ts",
            "line": 24,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "has",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "bit",
                "optional": false,
                "tsType": {
                  "repr": "BitFieldResolvable",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "BitFieldResolvable"
                  }
                }
              },
              {
                "kind": "rest",
                "arg": {
                  "kind": "identifier",
                  "name": "args",
                  "optional": false,
                  "tsType": null
                },
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "any",
                    "kind": "keyword",
                    "keyword": "any"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/bitfield.ts",
            "line": 28,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "missing",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "bits",
                "optional": false,
                "tsType": {
                  "repr": "any",
                  "kind": "keyword",
                  "keyword": "any"
                }
              },
              {
                "kind": "rest",
                "arg": {
                  "kind": "identifier",
                  "name": "hasParams",
                  "optional": false,
                  "tsType": null
                },
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "any",
                    "kind": "keyword",
                    "keyword": "any"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "array",
              "array": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/bitfield.ts",
            "line": 34,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "freeze",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Readonly",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "BitField",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "BitField"
                    }
                  }
                ],
                "typeName": "Readonly"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/bitfield.ts",
            "line": 40,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "add",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "rest",
                "arg": {
                  "kind": "identifier",
                  "name": "bits",
                  "optional": false,
                  "tsType": null
                },
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "BitFieldResolvable",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "BitFieldResolvable"
                    }
                  }
                }
              }
            ],
            "returnType": {
              "repr": "BitField",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "BitField"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/bitfield.ts",
            "line": 44,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "remove",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "rest",
                "arg": {
                  "kind": "identifier",
                  "name": "bits",
                  "optional": false,
                  "tsType": null
                },
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "BitFieldResolvable",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "BitFieldResolvable"
                    }
                  }
                }
              }
            ],
            "returnType": {
              "repr": "BitField",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "BitField"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/bitfield.ts",
            "line": 55,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "serialize",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "rest",
                "arg": {
                  "kind": "identifier",
                  "name": "hasParams",
                  "optional": false,
                  "tsType": null
                },
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "any",
                    "kind": "keyword",
                    "keyword": "any"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "typeLiteral",
              "typeLiteral": {
                "methods": [],
                "properties": [],
                "callSignatures": [],
                "indexSignatures": [
                  {
                    "readonly": false,
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "key",
                        "optional": false,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        }
                      }
                    ],
                    "tsType": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    }
                  }
                ]
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/bitfield.ts",
            "line": 66,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "toArray",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "rest",
                "arg": {
                  "kind": "identifier",
                  "name": "hasParams",
                  "optional": false,
                  "tsType": null
                },
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "any",
                    "kind": "keyword",
                    "keyword": "any"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "array",
              "array": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/bitfield.ts",
            "line": 76,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "toJSON",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "number",
              "kind": "keyword",
              "keyword": "number"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/bitfield.ts",
            "line": 82,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "valueOf",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "number",
              "kind": "keyword",
              "keyword": "number"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/bitfield.ts",
            "line": 86,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "[Symbol.iterator]",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Iterator",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                ],
                "typeName": "Iterator"
              }
            },
            "isAsync": false,
            "isGenerator": true,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/bitfield.ts",
            "line": 90,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "resolve",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "flags",
                "optional": false,
                "tsType": {
                  "repr": "any",
                  "kind": "keyword",
                  "keyword": "any"
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "bit",
                  "optional": false,
                  "tsType": {
                    "repr": "BitFieldResolvable",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "BitFieldResolvable"
                    }
                  }
                },
                "right": "<UNIMPLEMENTED>",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "number",
              "kind": "keyword",
              "keyword": "number"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/bitfield.ts",
            "line": 94,
            "col": 2
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "Base",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/base.ts",
      "line": 4,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "_data",
              "optional": true,
              "tsType": {
                "repr": "any",
                "kind": "keyword",
                "keyword": "any"
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/base.ts",
            "line": 7,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Client",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Client"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "client",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/base.ts",
            "line": 5,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "Base",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/base.ts",
      "line": 4,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "_data",
              "optional": true,
              "tsType": {
                "repr": "any",
                "kind": "keyword",
                "keyword": "any"
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/base.ts",
            "line": 7,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Client",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Client"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "client",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/base.ts",
            "line": 5,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "SnowflakeBase",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/base.ts",
      "line": 12,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/base.ts",
            "line": 13,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": "Get Snowflake Object",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "snowflake",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Snowflake",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Snowflake"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/base.ts",
            "line": 16,
            "col": 2
          }
        },
        {
          "jsDoc": "Timestamp of when resource was created",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "timestamp",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Date",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Date"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/base.ts",
            "line": 21,
            "col": 2
          }
        }
      ],
      "extends": "Base",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "import",
    "name": "Client",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/base.ts",
      "line": 1,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
      "imported": "Client"
    }
  },
  {
    "kind": "import",
    "name": "Snowflake",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/base.ts",
      "line": 2,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/utils/snowflake.ts",
      "imported": "Snowflake"
    }
  },
  {
    "kind": "class",
    "name": "Application",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/application.ts",
      "line": 6,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "ApplicationPayload",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ApplicationPayload"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/application.ts",
            "line": 14,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/application.ts",
            "line": 7,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "name",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/application.ts",
            "line": 8,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "icon",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/application.ts",
            "line": 9,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "description",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/application.ts",
            "line": 10,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "summary",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/application.ts",
            "line": 11,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "User",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "User"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "bot",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/application.ts",
            "line": 12,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "SnowflakeBase",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "CommandClient",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/commandClient.ts",
      "line": 47,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "options",
              "optional": false,
              "tsType": {
                "repr": "CommandClientOptions",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "CommandClientOptions"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/commandClient.ts",
            "line": 71,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "prefix",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/commandClient.ts",
            "line": 48,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "mentionPrefix",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/commandClient.ts",
            "line": 49,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "fnOrConstructor",
            "fnOrConstructor": {
              "constructor": false,
              "tsType": {
                "repr": "PrefixReturnType",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "PrefixReturnType"
                }
              },
              "params": [
                {
                  "kind": "identifier",
                  "name": "guildID",
                  "optional": false,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                }
              ],
              "typeParams": []
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getGuildPrefix",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/commandClient.ts",
            "line": 51,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "fnOrConstructor",
            "fnOrConstructor": {
              "constructor": false,
              "tsType": {
                "repr": "PrefixReturnType",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "PrefixReturnType"
                }
              },
              "params": [
                {
                  "kind": "identifier",
                  "name": "userID",
                  "optional": false,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                }
              ],
              "typeParams": []
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getUserPrefix",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/commandClient.ts",
            "line": 52,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "fnOrConstructor",
            "fnOrConstructor": {
              "constructor": false,
              "tsType": {
                "repr": "PrefixReturnType",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "PrefixReturnType"
                }
              },
              "params": [
                {
                  "kind": "identifier",
                  "name": "channelID",
                  "optional": false,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                }
              ],
              "typeParams": []
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getChannelPrefix",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/commandClient.ts",
            "line": 53,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "fnOrConstructor",
            "fnOrConstructor": {
              "constructor": false,
              "tsType": {
                "repr": "",
                "kind": "union",
                "union": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  },
                  {
                    "repr": "Promise",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "boolean",
                          "kind": "keyword",
                          "keyword": "boolean"
                        }
                      ],
                      "typeName": "Promise"
                    }
                  }
                ]
              },
              "params": [
                {
                  "kind": "identifier",
                  "name": "guildID",
                  "optional": false,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                }
              ],
              "typeParams": []
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isGuildBlacklisted",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/commandClient.ts",
            "line": 55,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "fnOrConstructor",
            "fnOrConstructor": {
              "constructor": false,
              "tsType": {
                "repr": "",
                "kind": "union",
                "union": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  },
                  {
                    "repr": "Promise",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "boolean",
                          "kind": "keyword",
                          "keyword": "boolean"
                        }
                      ],
                      "typeName": "Promise"
                    }
                  }
                ]
              },
              "params": [
                {
                  "kind": "identifier",
                  "name": "guildID",
                  "optional": false,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                }
              ],
              "typeParams": []
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isUserBlacklisted",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/commandClient.ts",
            "line": 56,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "fnOrConstructor",
            "fnOrConstructor": {
              "constructor": false,
              "tsType": {
                "repr": "",
                "kind": "union",
                "union": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  },
                  {
                    "repr": "Promise",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "boolean",
                          "kind": "keyword",
                          "keyword": "boolean"
                        }
                      ],
                      "typeName": "Promise"
                    }
                  }
                ]
              },
              "params": [
                {
                  "kind": "identifier",
                  "name": "guildID",
                  "optional": false,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                }
              ],
              "typeParams": []
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isChannelBlacklisted",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/commandClient.ts",
            "line": 57,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "spacesAfterPrefix",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/commandClient.ts",
            "line": 59,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "owners",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/commandClient.ts",
            "line": 60,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "allowBots",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/commandClient.ts",
            "line": 61,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "allowDMs",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/commandClient.ts",
            "line": 62,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "caseSensitive",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/commandClient.ts",
            "line": 63,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "ExtensionsManager",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ExtensionsManager"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "extensions",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/commandClient.ts",
            "line": 65,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "CommandsManager",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "CommandsManager"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "commands",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/commandClient.ts",
            "line": 66,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "CategoriesManager",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "CategoriesManager"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "categories",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/commandClient.ts",
            "line": 67,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [],
              "callSignatures": [],
              "indexSignatures": [
                {
                  "readonly": false,
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "name",
                      "optional": false,
                      "tsType": {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    }
                  ],
                  "tsType": {
                    "repr": "Command",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Command"
                    }
                  }
                }
              ]
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "_decoratedCommands",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/commandClient.ts",
            "line": 69,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": "Processes a Message to Execute Command.",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "processMessage",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "msg",
                "optional": false,
                "tsType": {
                  "repr": "Message",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Message"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "any",
                    "kind": "keyword",
                    "keyword": "any"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/commandClient.ts",
            "line": 129,
            "col": 2
          }
        }
      ],
      "extends": "Client",
      "implements": [
        {
          "repr": "CommandClientOptions",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "CommandClientOptions"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "function",
    "name": "command",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/commandClient.ts",
      "line": 376,
      "col": 0
    },
    "jsDoc": "Command decorator",
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "options",
          "optional": true,
          "tsType": {
            "repr": "CommandOptions",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "CommandOptions"
            }
          }
        }
      ],
      "returnType": null,
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "CommandClientOptions",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/commandClient.ts",
      "line": 18,
      "col": 0
    },
    "jsDoc": "Command Client options extending Client Options to provide a lot of Commands-related customizations",
    "interfaceDef": {
      "extends": [
        {
          "repr": "ClientOptions",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "ClientOptions"
          }
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "prefix",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/commandClient.ts",
            "line": 20,
            "col": 2
          },
          "jsDoc": "Global prefix(s) of the bot.",
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "mentionPrefix",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/commandClient.ts",
            "line": 22,
            "col": 2
          },
          "jsDoc": "Whether to enable mention prefix or not.",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "getGuildPrefix",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/commandClient.ts",
            "line": 24,
            "col": 2
          },
          "jsDoc": "Method to get a Guild's custom prefix(s).",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "fnOrConstructor",
            "fnOrConstructor": {
              "constructor": false,
              "tsType": {
                "repr": "PrefixReturnType",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "PrefixReturnType"
                }
              },
              "params": [
                {
                  "kind": "identifier",
                  "name": "guildID",
                  "optional": false,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                }
              ],
              "typeParams": []
            }
          },
          "typeParams": []
        },
        {
          "name": "getUserPrefix",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/commandClient.ts",
            "line": 26,
            "col": 2
          },
          "jsDoc": "Method to get a User's custom prefix(s).",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "fnOrConstructor",
            "fnOrConstructor": {
              "constructor": false,
              "tsType": {
                "repr": "PrefixReturnType",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "PrefixReturnType"
                }
              },
              "params": [
                {
                  "kind": "identifier",
                  "name": "userID",
                  "optional": false,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                }
              ],
              "typeParams": []
            }
          },
          "typeParams": []
        },
        {
          "name": "getChannelPrefix",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/commandClient.ts",
            "line": 28,
            "col": 2
          },
          "jsDoc": "Method to get a Channel's custom prefix(s).",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "fnOrConstructor",
            "fnOrConstructor": {
              "constructor": false,
              "tsType": {
                "repr": "PrefixReturnType",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "PrefixReturnType"
                }
              },
              "params": [
                {
                  "kind": "identifier",
                  "name": "channelID",
                  "optional": false,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                }
              ],
              "typeParams": []
            }
          },
          "typeParams": []
        },
        {
          "name": "isGuildBlacklisted",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/commandClient.ts",
            "line": 30,
            "col": 2
          },
          "jsDoc": "Method to check if certain Guild is blacklisted from using Commands.",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "fnOrConstructor",
            "fnOrConstructor": {
              "constructor": false,
              "tsType": {
                "repr": "",
                "kind": "union",
                "union": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  },
                  {
                    "repr": "Promise",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "boolean",
                          "kind": "keyword",
                          "keyword": "boolean"
                        }
                      ],
                      "typeName": "Promise"
                    }
                  }
                ]
              },
              "params": [
                {
                  "kind": "identifier",
                  "name": "guildID",
                  "optional": false,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                }
              ],
              "typeParams": []
            }
          },
          "typeParams": []
        },
        {
          "name": "isUserBlacklisted",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/commandClient.ts",
            "line": 32,
            "col": 2
          },
          "jsDoc": "Method to check if certain User is blacklisted from using Commands.",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "fnOrConstructor",
            "fnOrConstructor": {
              "constructor": false,
              "tsType": {
                "repr": "",
                "kind": "union",
                "union": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  },
                  {
                    "repr": "Promise",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "boolean",
                          "kind": "keyword",
                          "keyword": "boolean"
                        }
                      ],
                      "typeName": "Promise"
                    }
                  }
                ]
              },
              "params": [
                {
                  "kind": "identifier",
                  "name": "guildID",
                  "optional": false,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                }
              ],
              "typeParams": []
            }
          },
          "typeParams": []
        },
        {
          "name": "isChannelBlacklisted",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/commandClient.ts",
            "line": 34,
            "col": 2
          },
          "jsDoc": "Method to check if certain Channel is blacklisted from using Commands.",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "fnOrConstructor",
            "fnOrConstructor": {
              "constructor": false,
              "tsType": {
                "repr": "",
                "kind": "union",
                "union": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  },
                  {
                    "repr": "Promise",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "boolean",
                          "kind": "keyword",
                          "keyword": "boolean"
                        }
                      ],
                      "typeName": "Promise"
                    }
                  }
                ]
              },
              "params": [
                {
                  "kind": "identifier",
                  "name": "guildID",
                  "optional": false,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                }
              ],
              "typeParams": []
            }
          },
          "typeParams": []
        },
        {
          "name": "spacesAfterPrefix",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/commandClient.ts",
            "line": 36,
            "col": 2
          },
          "jsDoc": "Allow spaces after prefix? Recommended with Mention Prefix ON.",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "owners",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/commandClient.ts",
            "line": 38,
            "col": 2
          },
          "jsDoc": "List of Bot's Owner IDs whom can access `ownerOnly` commands.",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            }
          },
          "typeParams": []
        },
        {
          "name": "allowBots",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/commandClient.ts",
            "line": 40,
            "col": 2
          },
          "jsDoc": "Whether to allow Bots to use Commands or not, not allowed by default.",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "allowDMs",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/commandClient.ts",
            "line": 42,
            "col": 2
          },
          "jsDoc": "Whether to allow Commands in DMs or not, allowed by default.",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "caseSensitive",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/commandClient.ts",
            "line": 44,
            "col": 2
          },
          "jsDoc": "Whether Commands should be case-sensitive or not, not by default.",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "MessageMentions",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/messageMentions.ts",
      "line": 9,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "message",
              "optional": false,
              "tsType": {
                "repr": "Message",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Message"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/messageMentions.ts",
            "line": 22,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Client",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Client"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "client",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/messageMentions.ts",
            "line": 10,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Message",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Message"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "message",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/messageMentions.ts",
            "line": 11,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Collection",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                {
                  "repr": "User",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "User"
                  }
                }
              ],
              "typeName": "Collection"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "users",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/messageMentions.ts",
            "line": 12,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Collection",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                {
                  "repr": "Role",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Role"
                  }
                }
              ],
              "typeName": "Collection"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "roles",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/messageMentions.ts",
            "line": 13,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Collection",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                {
                  "repr": "GuildTextChannel",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GuildTextChannel"
                  }
                }
              ],
              "typeName": "Collection"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "channels",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/messageMentions.ts",
            "line": 14,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "everyone",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/messageMentions.ts",
            "line": 15,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": null,
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "EVERYONE_MENTION",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/messageMentions.ts",
            "line": 17,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": null,
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "USER_MENTION",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/messageMentions.ts",
            "line": 18,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": null,
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "ROLE_MENTION",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/messageMentions.ts",
            "line": 19,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": null,
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "CHANNEL_MENTION",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/messageMentions.ts",
            "line": 20,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fromPayload",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "payload",
                "optional": false,
                "tsType": {
                  "repr": "MessagePayload",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "MessagePayload"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "MessageMentions",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "MessageMentions"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/messageMentions.ts",
            "line": 27,
            "col": 2
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "Presence",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/presence.ts",
      "line": 23,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "PresenceUpdatePayload",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "PresenceUpdatePayload"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "user",
              "optional": false,
              "tsType": {
                "repr": "User",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "User"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "guild",
              "optional": false,
              "tsType": {
                "repr": "Guild",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Guild"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/presence.ts",
            "line": 31,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "User",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "User"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "user",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/presence.ts",
            "line": 24,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Guild",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Guild"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "guild",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/presence.ts",
            "line": 25,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "StatusType",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "StatusType"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "status",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/presence.ts",
            "line": 26,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "ActivityPayload",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "ActivityPayload"
              }
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "activities",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/presence.ts",
            "line": 28,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "ClientStatus",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ClientStatus"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "clientStatus",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/presence.ts",
            "line": 29,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fromPayload",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "PresenceUpdatePayload",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "PresenceUpdatePayload"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Presence",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Presence"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/presence.ts",
            "line": 45,
            "col": 2
          }
        }
      ],
      "extends": "Base",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "ClientPresence",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/presence.ts",
      "line": 57,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "data",
              "optional": true,
              "tsType": {
                "repr": "",
                "kind": "union",
                "union": [
                  {
                    "repr": "ClientActivity",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "ClientActivity"
                    }
                  },
                  {
                    "repr": "StatusPayload",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "StatusPayload"
                    }
                  },
                  {
                    "repr": "ActivityGame",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "ActivityGame"
                    }
                  }
                ]
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/presence.ts",
            "line": 64,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "StatusType",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "StatusType"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "status",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/presence.ts",
            "line": 58,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "ActivityGame",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ActivityGame"
                }
              },
              {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "ActivityGame",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ActivityGame"
                  }
                }
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "activity",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/presence.ts",
            "line": 59,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "number",
                "kind": "keyword",
                "keyword": "number"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "since",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/presence.ts",
            "line": 60,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "afk",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/presence.ts",
            "line": 61,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "ClientStatus",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ClientStatus"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "clientStatus",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/presence.ts",
            "line": 62,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": "Parses from Payload",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "parse",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "payload",
                "optional": false,
                "tsType": {
                  "repr": "StatusPayload",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "StatusPayload"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "ClientPresence",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "ClientPresence"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/presence.ts",
            "line": 81,
            "col": 2
          }
        },
        {
          "jsDoc": "Parses from Payload and creates new ClientPresence",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "parse",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "payload",
                "optional": false,
                "tsType": {
                  "repr": "StatusUpdatePayload",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "StatusUpdatePayload"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "ClientPresence",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "ClientPresence"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/presence.ts",
            "line": 91,
            "col": 2
          }
        },
        {
          "jsDoc": "Creates Presence Payload",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "create",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "StatusPayload",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "StatusPayload"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/presence.ts",
            "line": 96,
            "col": 2
          }
        },
        {
          "jsDoc": "Creates Activity Payload",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createActivity",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "ActivityGame",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "ActivityGame"
                    }
                  }
                },
                {
                  "repr": "null",
                  "kind": "keyword",
                  "keyword": "null"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/presence.ts",
            "line": 107,
            "col": 2
          }
        },
        {
          "jsDoc": "Set Status of Presence",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setStatus",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "status",
                "optional": false,
                "tsType": {
                  "repr": "StatusType",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "StatusType"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "ClientPresence",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "ClientPresence"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/presence.ts",
            "line": 126,
            "col": 2
          }
        },
        {
          "jsDoc": "Set Activity for Presence",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setActivity",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "activity",
                "optional": false,
                "tsType": {
                  "repr": "ActivityGame",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ActivityGame"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "ClientPresence",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "ClientPresence"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/presence.ts",
            "line": 132,
            "col": 2
          }
        },
        {
          "jsDoc": "Set Activities for Presence",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setActivities",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "activities",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "ActivityGame",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "ActivityGame"
                    }
                  }
                }
              }
            ],
            "returnType": {
              "repr": "ClientPresence",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "ClientPresence"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/presence.ts",
            "line": 138,
            "col": 2
          }
        },
        {
          "jsDoc": "Set AFK value",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setAFK",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "afk",
                "optional": false,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                }
              }
            ],
            "returnType": {
              "repr": "ClientPresence",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "ClientPresence"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/presence.ts",
            "line": 144,
            "col": 2
          }
        },
        {
          "jsDoc": "Remove AFK (set false)",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "removeAFK",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "ClientPresence",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "ClientPresence"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/presence.ts",
            "line": 150,
            "col": 2
          }
        },
        {
          "jsDoc": "Toggle AFK (boolean) value",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "toggleAFK",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "ClientPresence",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "ClientPresence"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/presence.ts",
            "line": 156,
            "col": 2
          }
        },
        {
          "jsDoc": "Set Since property of Activity",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setSince",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "since",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "ClientPresence",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "ClientPresence"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/presence.ts",
            "line": 162,
            "col": 2
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "enum",
    "name": "ActivityTypes",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/presence.ts",
      "line": 14,
      "col": 0
    },
    "jsDoc": null,
    "enumDef": {
      "members": [
        {
          "name": "PLAYING",
          "jsDoc": null
        },
        {
          "name": "STREAMING",
          "jsDoc": null
        },
        {
          "name": "LISTENING",
          "jsDoc": null
        },
        {
          "name": "WATCHING",
          "jsDoc": null
        },
        {
          "name": "CUSTOM_STATUS",
          "jsDoc": null
        },
        {
          "name": "COMPETING",
          "jsDoc": null
        }
      ]
    }
  },
  {
    "kind": "class",
    "name": "GuildEmojisManager",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/guildEmojis.ts",
      "line": 11,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "parent",
              "optional": false,
              "tsType": {
                "repr": "EmojisManager",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "EmojisManager"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "guild",
              "optional": false,
              "tsType": {
                "repr": "Guild",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Guild"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/guildEmojis.ts",
            "line": 14,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Guild",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Guild"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "guild",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/guildEmojis.ts",
            "line": 12,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "get",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "Emoji",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Emoji"
                        }
                      },
                      {
                        "repr": "undefined",
                        "kind": "keyword",
                        "keyword": "undefined"
                      }
                    ]
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/guildEmojis.ts",
            "line": 19,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "delete",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/guildEmojis.ts",
            "line": 25,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fetch",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "Emoji",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Emoji"
                        }
                      },
                      {
                        "repr": "undefined",
                        "kind": "keyword",
                        "keyword": "undefined"
                      }
                    ]
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/guildEmojis.ts",
            "line": 29,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "create",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "url",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "roles",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "",
                      "kind": "array",
                      "array": {
                        "repr": "Role",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Role"
                        }
                      }
                    },
                    {
                      "repr": "",
                      "kind": "array",
                      "array": {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "Emoji",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Emoji"
                        }
                      },
                      {
                        "repr": "undefined",
                        "kind": "keyword",
                        "keyword": "undefined"
                      }
                    ]
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/guildEmojis.ts",
            "line": 44,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "array",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "Emoji",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Emoji"
                      }
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/guildEmojis.ts",
            "line": 80,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "flush",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/guildEmojis.ts",
            "line": 87,
            "col": 2
          }
        }
      ],
      "extends": "BaseChildManager",
      "implements": [],
      "typeParams": [],
      "superTypeParams": [
        {
          "repr": "EmojiPayload",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "EmojiPayload"
          }
        },
        {
          "repr": "Emoji",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Emoji"
          }
        }
      ]
    }
  },
  {
    "kind": "class",
    "name": "MessageReaction",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/messageReaction.ts",
      "line": 8,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "Reaction",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Reaction"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "message",
              "optional": false,
              "tsType": {
                "repr": "Message",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Message"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "emoji",
              "optional": false,
              "tsType": {
                "repr": "Emoji",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Emoji"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/messageReaction.ts",
            "line": 15,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Message",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Message"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "message",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/messageReaction.ts",
            "line": 9,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "count",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/messageReaction.ts",
            "line": 10,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Emoji",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Emoji"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "emoji",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/messageReaction.ts",
            "line": 11,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "me",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/messageReaction.ts",
            "line": 12,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "ReactionUsersManager",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ReactionUsersManager"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "users",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/messageReaction.ts",
            "line": 13,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fromPayload",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "Reaction",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Reaction"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/messageReaction.ts",
            "line": 24,
            "col": 2
          }
        }
      ],
      "extends": "Base",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "NewsChannel",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guildNewsChannel.ts",
      "line": 12,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "GuildNewsChannelPayload",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "GuildNewsChannelPayload"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "guild",
              "optional": false,
              "tsType": {
                "repr": "Guild",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Guild"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guildNewsChannel.ts",
            "line": 22,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "guildID",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guildNewsChannel.ts",
            "line": 13,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Guild",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Guild"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "guild",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guildNewsChannel.ts",
            "line": 14,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "name",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guildNewsChannel.ts",
            "line": 15,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "position",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guildNewsChannel.ts",
            "line": 16,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "Overwrite",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Overwrite"
              }
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "permissionOverwrites",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guildNewsChannel.ts",
            "line": 17,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "nsfw",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guildNewsChannel.ts",
            "line": 18,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "parentID",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guildNewsChannel.ts",
            "line": 19,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "topic",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guildNewsChannel.ts",
            "line": 20,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "readFromData",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "GuildNewsChannelPayload",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GuildNewsChannelPayload"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guildNewsChannel.ts",
            "line": 34,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "edit",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "ModifyGuildNewsChannelOption",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ModifyGuildNewsChannelOption"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "NewsChannel",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "NewsChannel"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guildNewsChannel.ts",
            "line": 46,
            "col": 2
          }
        }
      ],
      "extends": "TextChannel",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "Channel",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/channel.ts",
      "line": 5,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "ChannelPayload",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ChannelPayload"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/channel.ts",
            "line": 13,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "ChannelTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ChannelTypes"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/channel.ts",
            "line": 6,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/channel.ts",
            "line": 7,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": null,
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "cacheName",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/channel.ts",
            "line": 8,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "mention",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/channel.ts",
            "line": 9,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "readFromData",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "ChannelPayload",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ChannelPayload"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/channel.ts",
            "line": 19,
            "col": 2
          }
        }
      ],
      "extends": "SnowflakeBase",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "RolesManager",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/roles.ts",
      "line": 17,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "guild",
              "optional": false,
              "tsType": {
                "repr": "Guild",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Guild"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/roles.ts",
            "line": 20,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Guild",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Guild"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "guild",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/roles.ts",
            "line": 18,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": "Fetch a Guild Role (from API)",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fetch",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Role",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Role"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/roles.ts",
            "line": 26,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "get",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "key",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "Role",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Role"
                        }
                      },
                      {
                        "repr": "undefined",
                        "kind": "keyword",
                        "keyword": "undefined"
                      }
                    ]
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/roles.ts",
            "line": 38,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "array",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "Role",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Role"
                      }
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/roles.ts",
            "line": 44,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fromPayload",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "roles",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "RolePayload",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "RolePayload"
                    }
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/roles.ts",
            "line": 50,
            "col": 2
          }
        },
        {
          "jsDoc": "Create a Guild Role",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "create",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": true,
                "tsType": {
                  "repr": "CreateGuildRoleOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "CreateGuildRoleOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Role",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Role"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/roles.ts",
            "line": 58,
            "col": 2
          }
        },
        {
          "jsDoc": "Delete a Guild Role",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "delete",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "role",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "Role",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Role"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "Role",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Role"
                        }
                      },
                      {
                        "repr": "undefined",
                        "kind": "keyword",
                        "keyword": "undefined"
                      }
                    ]
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/roles.ts",
            "line": 89,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "edit",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "role",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "Role",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Role"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "RoleModifyPayload",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "RoleModifyPayload"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Role",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Role"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/roles.ts",
            "line": 99,
            "col": 2
          }
        },
        {
          "jsDoc": "Modify the positions of a set of role positions for the guild.",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "editPositions",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "rest",
                "arg": {
                  "kind": "identifier",
                  "name": "positions",
                  "optional": false,
                  "tsType": null
                },
                "tsType": {
                  "repr": "Array",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": [
                      {
                        "repr": "",
                        "kind": "typeLiteral",
                        "typeLiteral": {
                          "methods": [],
                          "properties": [
                            {
                              "name": "id",
                              "params": [],
                              "computed": false,
                              "optional": false,
                              "tsType": {
                                "repr": "",
                                "kind": "union",
                                "union": [
                                  {
                                    "repr": "string",
                                    "kind": "keyword",
                                    "keyword": "string"
                                  },
                                  {
                                    "repr": "Role",
                                    "kind": "typeRef",
                                    "typeRef": {
                                      "typeParams": null,
                                      "typeName": "Role"
                                    }
                                  }
                                ]
                              },
                              "typeParams": []
                            },
                            {
                              "name": "position",
                              "params": [],
                              "computed": false,
                              "optional": false,
                              "tsType": {
                                "repr": "",
                                "kind": "union",
                                "union": [
                                  {
                                    "repr": "number",
                                    "kind": "keyword",
                                    "keyword": "number"
                                  },
                                  {
                                    "repr": "null",
                                    "kind": "keyword",
                                    "keyword": "null"
                                  }
                                ]
                              },
                              "typeParams": []
                            }
                          ],
                          "callSignatures": [],
                          "indexSignatures": []
                        }
                      }
                    ],
                    "typeName": "Array"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "RolesManager",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "RolesManager"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/roles.ts",
            "line": 112,
            "col": 2
          }
        }
      ],
      "extends": "BaseManager",
      "implements": [],
      "typeParams": [],
      "superTypeParams": [
        {
          "repr": "RolePayload",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "RolePayload"
          }
        },
        {
          "repr": "Role",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Role"
          }
        }
      ]
    }
  },
  {
    "kind": "class",
    "name": "SlashCommand",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
      "line": 18,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "manager",
              "optional": false,
              "tsType": {
                "repr": "SlashCommandsManager",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "SlashCommandsManager"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "SlashCommandPayload",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "SlashCommandPayload"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "guild",
              "optional": true,
              "tsType": {
                "repr": "Guild",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Guild"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 28,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "SlashCommandsManager",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "SlashCommandsManager"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "slash",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 19,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 20,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "applicationID",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 21,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "name",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 22,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "description",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 23,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "SlashCommandOption",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "SlashCommandOption"
              }
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "options",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 24,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Guild",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Guild"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "guild",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 25,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "_guild",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 26,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "delete",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 42,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "edit",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "SlashCommandPartial",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "SlashCommandPartial"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 46,
            "col": 2
          }
        },
        {
          "jsDoc": "Create a handler for this Slash Command",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "handle",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "func",
                "optional": false,
                "tsType": {
                  "repr": "SlashCommandHandlerCallback",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "SlashCommandHandlerCallback"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "parent",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "group",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "SlashCommand",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "SlashCommand"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 51,
            "col": 2
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "CreateOptions",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
      "line": 66,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "name",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 67,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "description",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 68,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "options",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 69,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Array",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "SlashCommandOption",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "SlashCommandOption"
                      }
                    },
                    {
                      "repr": "SlashOptionCallable",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "SlashOptionCallable"
                      }
                    }
                  ]
                }
              ],
              "typeName": "Array"
            }
          },
          "typeParams": []
        },
        {
          "name": "choices",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 70,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Array",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "SlashCommandChoice",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "SlashCommandChoice"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              ],
              "typeName": "Array"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "SlashOption",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
      "line": 97,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "string",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "CreateOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "CreateOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "SlashCommandOption",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "SlashCommandOption"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 98,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "bool",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "CreateOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "CreateOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "SlashCommandOption",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "SlashCommandOption"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 102,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "subCommand",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "CreateOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "CreateOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "SlashCommandOption",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "SlashCommandOption"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 106,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "subCommandGroup",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "CreateOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "CreateOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "SlashCommandOption",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "SlashCommandOption"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 110,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "role",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "CreateOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "CreateOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "SlashCommandOption",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "SlashCommandOption"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 114,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "channel",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "CreateOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "CreateOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "SlashCommandOption",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "SlashCommandOption"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 118,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "user",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "CreateOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "CreateOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "SlashCommandOption",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "SlashCommandOption"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 122,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "number",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "CreateOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "CreateOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "SlashCommandOption",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "SlashCommandOption"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 126,
            "col": 2
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "SlashOptionCallable",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
      "line": 131,
      "col": 0
    },
    "jsDoc": null,
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "fnOrConstructor",
        "fnOrConstructor": {
          "constructor": false,
          "tsType": {
            "repr": "SlashCommandOption",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "SlashCommandOption"
            }
          },
          "params": [
            {
              "kind": "identifier",
              "name": "o",
              "optional": false,
              "tsType": {
                "repr": "SlashOption",
                "kind": "typeQuery",
                "typeQuery": "SlashOption"
              }
            }
          ],
          "typeParams": []
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "SlashBuilderOptionsData",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
      "line": 133,
      "col": 0
    },
    "jsDoc": null,
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "Array",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "SlashCommandOption",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "SlashCommandOption"
                      }
                    },
                    {
                      "repr": "SlashOptionCallable",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "SlashOptionCallable"
                      }
                    }
                  ]
                }
              ],
              "typeName": "Array"
            }
          },
          {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [],
              "callSignatures": [],
              "indexSignatures": [
                {
                  "readonly": false,
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "name",
                      "optional": false,
                      "tsType": {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    }
                  ],
                  "tsType": {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "",
                        "kind": "typeLiteral",
                        "typeLiteral": {
                          "methods": [],
                          "properties": [
                            {
                              "name": "description",
                              "params": [],
                              "computed": false,
                              "optional": false,
                              "tsType": {
                                "repr": "string",
                                "kind": "keyword",
                                "keyword": "string"
                              },
                              "typeParams": []
                            },
                            {
                              "name": "type",
                              "params": [],
                              "computed": false,
                              "optional": false,
                              "tsType": {
                                "repr": "SlashCommandOptionType",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "SlashCommandOptionType"
                                }
                              },
                              "typeParams": []
                            },
                            {
                              "name": "options",
                              "params": [],
                              "computed": false,
                              "optional": true,
                              "tsType": {
                                "repr": "",
                                "kind": "array",
                                "array": {
                                  "repr": "SlashCommandOption",
                                  "kind": "typeRef",
                                  "typeRef": {
                                    "typeParams": null,
                                    "typeName": "SlashCommandOption"
                                  }
                                }
                              },
                              "typeParams": []
                            },
                            {
                              "name": "choices",
                              "params": [],
                              "computed": false,
                              "optional": true,
                              "tsType": {
                                "repr": "",
                                "kind": "array",
                                "array": {
                                  "repr": "SlashCommandChoice",
                                  "kind": "typeRef",
                                  "typeRef": {
                                    "typeParams": null,
                                    "typeName": "SlashCommandChoice"
                                  }
                                }
                              },
                              "typeParams": []
                            }
                          ],
                          "callSignatures": [],
                          "indexSignatures": []
                        }
                      },
                      {
                        "repr": "SlashOptionCallable",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "SlashOptionCallable"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "SlashBuilder",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
      "line": 158,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "name",
              "optional": true,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            },
            {
              "kind": "identifier",
              "name": "description",
              "optional": true,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            },
            {
              "kind": "identifier",
              "name": "options",
              "optional": true,
              "tsType": {
                "repr": "SlashBuilderOptionsData",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "SlashBuilderOptionsData"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 161,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "SlashCommandPartial",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "SlashCommandPartial"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "data",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 159,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "name",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "SlashBuilder",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "SlashBuilder"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 173,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "description",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "desc",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "SlashBuilder",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "SlashBuilder"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 178,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "option",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "option",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "SlashOptionCallable",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "SlashOptionCallable"
                      }
                    },
                    {
                      "repr": "SlashCommandOption",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "SlashCommandOption"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "SlashBuilder",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "SlashBuilder"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 183,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "options",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "SlashBuilderOptionsData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "SlashBuilderOptionsData"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "SlashBuilder",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "SlashBuilder"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 191,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "export",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "SlashCommandPartial",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "SlashCommandPartial"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 196,
            "col": 2
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "SlashCommandsManager",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
      "line": 203,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "SlashClient",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "SlashClient"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 207,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "SlashClient",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "SlashClient"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "slash",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 204,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "RESTManager",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "RESTManager"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "rest",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 205,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": "Get all Global Slash Commands",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "all",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Collection",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        {
                          "repr": "SlashCommand",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "SlashCommand"
                          }
                        }
                      ],
                      "typeName": "Collection"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 213,
            "col": 2
          }
        },
        {
          "jsDoc": "Get a Guild's Slash Commands",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "guild",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "guild",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "Guild",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Guild"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Collection",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        {
                          "repr": "SlashCommand",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "SlashCommand"
                          }
                        }
                      ],
                      "typeName": "Collection"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 230,
            "col": 2
          }
        },
        {
          "jsDoc": "Create a Slash Command (global or Guild)",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "create",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "SlashCommandPartial",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "SlashCommandPartial"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "guild",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "Guild",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Guild"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "SlashCommand",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "SlashCommand"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 255,
            "col": 2
          }
        },
        {
          "jsDoc": "Edit a Slash Command (global or Guild)",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "edit",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "SlashCommandPartial",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "SlashCommandPartial"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "guild",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "Guild",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Guild"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "SlashCommandsManager",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "SlashCommandsManager"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 283,
            "col": 2
          }
        },
        {
          "jsDoc": "Delete a Slash Command (global or Guild)",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "delete",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "guild",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "Guild",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Guild"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "SlashCommandsManager",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "SlashCommandsManager"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 300,
            "col": 2
          }
        },
        {
          "jsDoc": "Get a Slash Command (global or Guild)",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "get",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "guild",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "Guild",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Guild"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "SlashCommand",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "SlashCommand"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 316,
            "col": 2
          }
        },
        {
          "jsDoc": "Bulk Edit Global or Guild Slash Commands",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "bulkEdit",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cmds",
                "optional": false,
                "tsType": {
                  "repr": "Array",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": [
                      {
                        "repr": "",
                        "kind": "union",
                        "union": [
                          {
                            "repr": "SlashCommandPartial",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "SlashCommandPartial"
                            }
                          },
                          {
                            "repr": "SlashCommandPayload",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "SlashCommandPayload"
                            }
                          }
                        ]
                      }
                    ],
                    "typeName": "Array"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "guild",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "Guild",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Guild"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "SlashCommandsManager",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "SlashCommandsManager"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 337,
            "col": 2
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "SlashCommandHandlerCallback",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
      "line": 354,
      "col": 0
    },
    "jsDoc": null,
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "fnOrConstructor",
        "fnOrConstructor": {
          "constructor": false,
          "tsType": {
            "repr": "any",
            "kind": "keyword",
            "keyword": "any"
          },
          "params": [
            {
              "kind": "identifier",
              "name": "interaction",
              "optional": false,
              "tsType": {
                "repr": "Interaction",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Interaction"
                }
              }
            }
          ],
          "typeParams": []
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "SlashCommandHandler",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
      "line": 355,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "name",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 356,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "guild",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 357,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "parent",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 358,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "group",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 359,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "handler",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 360,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "SlashCommandHandlerCallback",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "SlashCommandHandlerCallback"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "SlashOptions",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
      "line": 363,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 364,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "",
                "kind": "parenthesized",
                "parenthesized": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    "params": [],
                    "typeParams": []
                  }
                }
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "client",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 365,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Client",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Client"
            }
          },
          "typeParams": []
        },
        {
          "name": "enabled",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 366,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "token",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 367,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "rest",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 368,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "RESTManager",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "RESTManager"
            }
          },
          "typeParams": []
        },
        {
          "name": "publicKey",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 369,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "SlashClient",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
      "line": 372,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "options",
              "optional": false,
              "tsType": {
                "repr": "SlashOptions",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "SlashOptions"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 391,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "",
                "kind": "parenthesized",
                "parenthesized": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    "params": [],
                    "typeParams": []
                  }
                }
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 373,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Client",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Client"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "client",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 374,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "token",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 375,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "enabled",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 376,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "SlashCommandsManager",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "SlashCommandsManager"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "commands",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 377,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "SlashCommandHandler",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "SlashCommandHandler"
              }
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "handlers",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 378,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "RESTManager",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "RESTManager"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "rest",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 379,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "SlashModule",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "SlashModule"
              }
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "modules",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 380,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "publicKey",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 381,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Array",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "name",
                        "params": [],
                        "computed": false,
                        "optional": false,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "guild",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "parent",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "group",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "handler",
                        "params": [],
                        "computed": false,
                        "optional": false,
                        "tsType": {
                          "repr": "",
                          "kind": "fnOrConstructor",
                          "fnOrConstructor": {
                            "constructor": false,
                            "tsType": {
                              "repr": "any",
                              "kind": "keyword",
                              "keyword": "any"
                            },
                            "params": [
                              {
                                "kind": "identifier",
                                "name": "interaction",
                                "optional": false,
                                "tsType": {
                                  "repr": "Interaction",
                                  "kind": "typeRef",
                                  "typeRef": {
                                    "typeParams": null,
                                    "typeName": "Interaction"
                                  }
                                }
                              }
                            ],
                            "typeParams": []
                          }
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              ],
              "typeName": "Array"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "_decoratedSlash",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 383,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getID",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 433,
            "col": 2
          }
        },
        {
          "jsDoc": "Adds a new Slash Command Handler",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "handle",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "handler",
                "optional": false,
                "tsType": {
                  "repr": "SlashCommandHandler",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "SlashCommandHandler"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "SlashClient",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "SlashClient"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 438,
            "col": 2
          }
        },
        {
          "jsDoc": "Load a Slash Module",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "loadModule",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "module",
                "optional": false,
                "tsType": {
                  "repr": "SlashModule",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "SlashModule"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "SlashClient",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "SlashClient"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 444,
            "col": 2
          }
        },
        {
          "jsDoc": "Get all Handlers. Including Slash Modules",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getHandlers",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "",
              "kind": "array",
              "array": {
                "repr": "SlashCommandHandler",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "SlashCommandHandler"
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 450,
            "col": 2
          }
        },
        {
          "jsDoc": "Get Handler for an Interaction. Supports nested sub commands and sub command groups.",
          "accessibility": "private",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "_getCommand",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "i",
                "optional": false,
                "tsType": {
                  "repr": "Interaction",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Interaction"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "SlashCommandHandler",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "SlashCommandHandler"
                  }
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 466,
            "col": 2
          }
        },
        {
          "jsDoc": "Process an incoming Slash Command (interaction)",
          "accessibility": "private",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "_process",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "interaction",
                "optional": false,
                "tsType": {
                  "repr": "Interaction",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Interaction"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 489,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "verifyKey",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "rawBody",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "Uint8Array",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Uint8Array"
                      }
                    },
                    {
                      "repr": "Buffer",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Buffer"
                      }
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "signature",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "timestamp",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 505,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "verifyOpineRequest",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "req",
                "optional": false,
                "tsType": {
                  "repr": "any",
                  "kind": "keyword",
                  "keyword": "any"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 526,
            "col": 2
          }
        },
        {
          "jsDoc": "Middleware to verify request in Opine framework.",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "verifyOpineMiddleware",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "req",
                "optional": false,
                "tsType": {
                  "repr": "any",
                  "kind": "keyword",
                  "keyword": "any"
                }
              },
              {
                "kind": "identifier",
                "name": "res",
                "optional": false,
                "tsType": {
                  "repr": "any",
                  "kind": "keyword",
                  "keyword": "any"
                }
              },
              {
                "kind": "identifier",
                "name": "next",
                "optional": false,
                "tsType": {
                  "repr": "CallableFunction",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "CallableFunction"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "any",
                    "kind": "keyword",
                    "keyword": "any"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 544,
            "col": 2
          }
        },
        {
          "jsDoc": "Method to verify Request from Oak server \"Context\".",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "verifyOakRequest",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "ctx",
                "optional": false,
                "tsType": {
                  "repr": "any",
                  "kind": "keyword",
                  "keyword": "any"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "any",
                    "kind": "keyword",
                    "keyword": "any"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
            "line": 558,
            "col": 2
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "import",
    "name": "Guild",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
      "line": 1,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/structures/guild.ts",
      "imported": "Guild"
    }
  },
  {
    "kind": "import",
    "name": "Interaction",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
      "line": 2,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/structures/slash.ts",
      "imported": "Interaction"
    }
  },
  {
    "kind": "import",
    "name": "InteractionType",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
      "line": 3,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
      "imported": "InteractionType"
    }
  },
  {
    "kind": "import",
    "name": "SlashCommandChoice",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
      "line": 3,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
      "imported": "SlashCommandChoice"
    }
  },
  {
    "kind": "import",
    "name": "SlashCommandOption",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
      "line": 3,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
      "imported": "SlashCommandOption"
    }
  },
  {
    "kind": "import",
    "name": "SlashCommandOptionType",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
      "line": 3,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
      "imported": "SlashCommandOptionType"
    }
  },
  {
    "kind": "import",
    "name": "SlashCommandPartial",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
      "line": 3,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
      "imported": "SlashCommandPartial"
    }
  },
  {
    "kind": "import",
    "name": "SlashCommandPayload",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
      "line": 3,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/types/slash.ts",
      "imported": "SlashCommandPayload"
    }
  },
  {
    "kind": "import",
    "name": "Collection",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
      "line": 11,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/utils/collection.ts",
      "imported": "Collection"
    }
  },
  {
    "kind": "import",
    "name": "Client",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
      "line": 12,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/models/client.ts",
      "imported": "Client"
    }
  },
  {
    "kind": "import",
    "name": "RESTManager",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
      "line": 13,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/models/rest.ts",
      "imported": "RESTManager"
    }
  },
  {
    "kind": "import",
    "name": "SlashModule",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
      "line": 14,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashModule.ts",
      "imported": "SlashModule"
    }
  },
  {
    "kind": "import",
    "name": "edverify",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
      "line": 15,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "https://deno.land/x/ed25519/mod.ts",
      "imported": "verify"
    }
  },
  {
    "kind": "import",
    "name": "Buffer",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/slashClient.ts",
      "line": 16,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "https://deno.land/std@0.80.0/node/buffer.ts",
      "imported": "Buffer"
    }
  },
  {
    "kind": "typeAlias",
    "name": "EveryChannelTypes",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/getChannelByType.ts",
      "line": 36,
      "col": 0
    },
    "jsDoc": null,
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "Channel",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Channel"
            }
          },
          {
            "repr": "CategoryChannel",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "CategoryChannel"
            }
          },
          {
            "repr": "VoiceChannel",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "VoiceChannel"
            }
          },
          {
            "repr": "EveryTextChannelTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "EveryTextChannelTypes"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "UserPayload",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/user.ts",
      "line": 1,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/user.ts",
            "line": 2,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "username",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/user.ts",
            "line": 3,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "discriminator",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/user.ts",
            "line": 4,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "avatar",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/user.ts",
            "line": 5,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "bot",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/user.ts",
            "line": 6,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "system",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/user.ts",
            "line": 7,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "mfa_enabled",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/user.ts",
            "line": 8,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "locale",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/user.ts",
            "line": 9,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "verified",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/user.ts",
            "line": 10,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "email",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/user.ts",
            "line": 11,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "flags",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/user.ts",
            "line": 12,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "premium_type",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/user.ts",
            "line": 13,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "0",
                "kind": "literal",
                "literal": {
                  "kind": "number",
                  "number": 0.0
                }
              },
              {
                "repr": "1",
                "kind": "literal",
                "literal": {
                  "kind": "number",
                  "number": 1.0
                }
              },
              {
                "repr": "2",
                "kind": "literal",
                "literal": {
                  "kind": "number",
                  "number": 2.0
                }
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "public_flags",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/user.ts",
            "line": 14,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "WebhookPayload",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/webhook.ts",
      "line": 3,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/webhook.ts",
            "line": 4,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "type",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/webhook.ts",
            "line": 5,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "1",
                "kind": "literal",
                "literal": {
                  "kind": "number",
                  "number": 1.0
                }
              },
              {
                "repr": "2",
                "kind": "literal",
                "literal": {
                  "kind": "number",
                  "number": 2.0
                }
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "guild_id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/webhook.ts",
            "line": 6,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "channel_id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/webhook.ts",
            "line": 7,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "user",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/webhook.ts",
            "line": 8,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "UserPayload",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "UserPayload"
            }
          },
          "typeParams": []
        },
        {
          "name": "name",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/webhook.ts",
            "line": 9,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "avatar",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/webhook.ts",
            "line": 10,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "token",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/webhook.ts",
            "line": 11,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "application_id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/webhook.ts",
            "line": 12,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "enum",
    "name": "Verification",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
      "line": 95,
      "col": 0
    },
    "jsDoc": null,
    "enumDef": {
      "members": [
        {
          "name": "NONE",
          "jsDoc": null
        },
        {
          "name": "LOW",
          "jsDoc": null
        },
        {
          "name": "MEDIUM",
          "jsDoc": null
        },
        {
          "name": "HIGH",
          "jsDoc": null
        },
        {
          "name": "VERY_HIGH",
          "jsDoc": null
        }
      ]
    }
  },
  {
    "kind": "interface",
    "name": "GuildIntegrationPayload",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
      "line": 142,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 143,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "name",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 144,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "type",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 145,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "enabled",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 146,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "syncing",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 147,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "role_id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 148,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "enable_emoticons",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 149,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "expire_behaviour",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 150,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "IntegrationExpireBehavior",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "IntegrationExpireBehavior"
            }
          },
          "typeParams": []
        },
        {
          "name": "expire_grace_period",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 151,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "user",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 152,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "UserPayload",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "UserPayload"
            }
          },
          "typeParams": []
        },
        {
          "name": "account",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 153,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "IntegrationAccountPayload",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "IntegrationAccountPayload"
            }
          },
          "typeParams": []
        },
        {
          "name": "synced_at",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 154,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "subscriber_count",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 155,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "revoked",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 156,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "application",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 157,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "ApplicationPayload",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ApplicationPayload"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GuildPayload",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
      "line": 20,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 21,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "name",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 22,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "icon",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 23,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "icon_hash",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 24,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "splash",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 25,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "discovery_splash",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 26,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "owner",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 27,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "owner_id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 28,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "permissions",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 29,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "region",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 30,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "afk_channel_id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 31,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "afk_timeout",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 32,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "widget_enabled",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 33,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "widget_channel_id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 34,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "verification_level",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 35,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "Verification",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Verification"
            }
          },
          "typeParams": []
        },
        {
          "name": "default_message_notifications",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 36,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "MessageNotification",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MessageNotification"
            }
          },
          "typeParams": []
        },
        {
          "name": "explicit_content_filter",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 37,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "ContentFilter",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ContentFilter"
            }
          },
          "typeParams": []
        },
        {
          "name": "roles",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 38,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "RolePayload",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "RolePayload"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "emojis",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 39,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "EmojiPayload",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "EmojiPayload"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "features",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 40,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "GuildFeatures",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "GuildFeatures"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "mfa_level",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 41,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "application_id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 42,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "system_channel_id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 43,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "system_channel_flags",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 44,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "rules_channel_id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 45,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "joined_at",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 46,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "large",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 47,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "unavailable",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 48,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "member_count",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 49,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "voice_states",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 50,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "VoiceStatePayload",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "VoiceStatePayload"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "members",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 51,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "MemberPayload",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "MemberPayload"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "channels",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 52,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "ChannelPayload",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "ChannelPayload"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "presences",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 53,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "PresenceUpdatePayload",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "PresenceUpdatePayload"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "max_presences",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 54,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "max_members",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 55,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "vanity_url_code",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 56,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "description",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 57,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "banner",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 58,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "premium_tier",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 59,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "premium_subscription_count",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 60,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "preferred_locale",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 61,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "public_updates_channel_id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 62,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "max_video_channel_users",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 63,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "approximate_number_count",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 64,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "approximate_presence_count",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 65,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GuildBanPayload",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
      "line": 160,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "reason",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 161,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "user",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 162,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "UserPayload",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "UserPayload"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "GuildFeatures",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
      "line": 115,
      "col": 0
    },
    "jsDoc": null,
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "INVITE_SPLASH",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "INVITE_SPLASH"
            }
          },
          {
            "repr": "VIP_REGIONS",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "VIP_REGIONS"
            }
          },
          {
            "repr": "VANITY_URL",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "VANITY_URL"
            }
          },
          {
            "repr": "VERIFIED",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "VERIFIED"
            }
          },
          {
            "repr": "PARTNERED",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "PARTNERED"
            }
          },
          {
            "repr": "PUBLIC",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "PUBLIC"
            }
          },
          {
            "repr": "COMMERCE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "COMMERCE"
            }
          },
          {
            "repr": "NEWS",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "NEWS"
            }
          },
          {
            "repr": "DISCOVERABLE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "DISCOVERABLE"
            }
          },
          {
            "repr": "FEATURABLE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "FEATURABLE"
            }
          },
          {
            "repr": "ANIMATED_ICON",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "ANIMATED_ICON"
            }
          },
          {
            "repr": "BANNER",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "BANNER"
            }
          },
          {
            "repr": "WELCOME_SCREEN_ENABLED",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "WELCOME_SCREEN_ENABLED"
            }
          },
          {
            "repr": "MEMBER_VERIFICATION_GATE_ENABLED",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MEMBER_VERIFICATION_GATE_ENABLED"
            }
          },
          {
            "repr": "PREVIEW_ENABLED",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "PREVIEW_ENABLED"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "GuildChannels",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
      "line": 178,
      "col": 0
    },
    "jsDoc": null,
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "GuildTextChannel",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GuildTextChannel"
            }
          },
          {
            "repr": "VoiceChannel",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "VoiceChannel"
            }
          },
          {
            "repr": "CategoryChannel",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "CategoryChannel"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GuildCreateOptions",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
      "line": 219,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "name",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 220,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "region",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 221,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "icon",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 222,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "verificationLevel",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 223,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Verification",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Verification"
            }
          },
          "typeParams": []
        },
        {
          "name": "roles",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 224,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Array",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "Role",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Role"
                      }
                    },
                    {
                      "repr": "GuildCreateRolePayload",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "GuildCreateRolePayload"
                      }
                    }
                  ]
                }
              ],
              "typeName": "Array"
            }
          },
          "typeParams": []
        },
        {
          "name": "channels",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 225,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Array",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "GuildChannels",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "GuildChannels"
                      }
                    },
                    {
                      "repr": "GuildCreateChannelOptions",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "GuildCreateChannelOptions"
                      }
                    }
                  ]
                }
              ],
              "typeName": "Array"
            }
          },
          "typeParams": []
        },
        {
          "name": "afkChannelID",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 226,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "afkTimeout",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 227,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "systemChannelID",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 228,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GuildCreateChannelOptions",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
      "line": 212,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 213,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "name",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 214,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "type",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 215,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "ChannelTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ChannelTypes"
            }
          },
          "typeParams": []
        },
        {
          "name": "parentID",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 216,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GuildCreateRolePayload",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
      "line": 194,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 195,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "name",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 196,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "color",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 197,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "hoist",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 198,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "position",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 199,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "permissions",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 200,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "managed",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 201,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "mentionable",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/guild.ts",
            "line": 202,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "Extension",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/extensions.ts",
      "line": 63,
      "col": 0
    },
    "jsDoc": "Customizable, isolated and pluggable Extensions are a great way of writing certain Modules independent of others",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "CommandClient",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "CommandClient"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/extensions.ts",
            "line": 79,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "CommandClient",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "CommandClient"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "client",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/extensions.ts",
            "line": 64,
            "col": 2
          }
        },
        {
          "jsDoc": "Name of the Extension",
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "name",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/extensions.ts",
            "line": 66,
            "col": 2
          }
        },
        {
          "jsDoc": "Description of the Extension",
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "description",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/extensions.ts",
            "line": 68,
            "col": 2
          }
        },
        {
          "jsDoc": "Extensions's Commands Manager",
          "tsType": {
            "repr": "ExtensionCommands",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ExtensionCommands"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "commands",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/extensions.ts",
            "line": 70,
            "col": 2
          }
        },
        {
          "jsDoc": "Sub-Prefix to be used for ALL of Extension's Commands.",
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "subPrefix",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/extensions.ts",
            "line": 72,
            "col": 2
          }
        },
        {
          "jsDoc": "Events registered by this Extension",
          "tsType": {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [],
              "callSignatures": [],
              "indexSignatures": [
                {
                  "readonly": false,
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "name",
                      "optional": false,
                      "tsType": {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    }
                  ],
                  "tsType": {
                    "repr": "",
                    "kind": "fnOrConstructor",
                    "fnOrConstructor": {
                      "constructor": false,
                      "tsType": {
                        "repr": "",
                        "kind": "typeLiteral",
                        "typeLiteral": {
                          "methods": [],
                          "properties": [],
                          "callSignatures": [],
                          "indexSignatures": []
                        }
                      },
                      "params": [
                        {
                          "kind": "rest",
                          "arg": {
                            "kind": "identifier",
                            "name": "args",
                            "optional": false,
                            "tsType": null
                          },
                          "tsType": {
                            "repr": "",
                            "kind": "array",
                            "array": {
                              "repr": "any",
                              "kind": "keyword",
                              "keyword": "any"
                            }
                          }
                        }
                      ],
                      "typeParams": []
                    }
                  }
                }
              ]
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "events",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/extensions.ts",
            "line": 74,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [],
              "callSignatures": [],
              "indexSignatures": [
                {
                  "readonly": false,
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "name",
                      "optional": false,
                      "tsType": {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    }
                  ],
                  "tsType": {
                    "repr": "Command",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Command"
                    }
                  }
                }
              ]
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "_decoratedCommands",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/extensions.ts",
            "line": 76,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [],
              "callSignatures": [],
              "indexSignatures": [
                {
                  "readonly": false,
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "name",
                      "optional": false,
                      "tsType": {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    }
                  ],
                  "tsType": {
                    "repr": "",
                    "kind": "fnOrConstructor",
                    "fnOrConstructor": {
                      "constructor": false,
                      "tsType": {
                        "repr": "any",
                        "kind": "keyword",
                        "keyword": "any"
                      },
                      "params": [
                        {
                          "kind": "rest",
                          "arg": {
                            "kind": "identifier",
                            "name": "args",
                            "optional": false,
                            "tsType": null
                          },
                          "tsType": {
                            "repr": "",
                            "kind": "array",
                            "array": {
                              "repr": "any",
                              "kind": "keyword",
                              "keyword": "any"
                            }
                          }
                        }
                      ],
                      "typeParams": []
                    }
                  }
                }
              ]
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "_decoratedEvents",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/extensions.ts",
            "line": 77,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": "Listens for an Event through Extension.",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "listen",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "typeOperator",
                  "typeOperator": {
                    "operator": "keyof",
                    "tsType": {
                      "repr": "ClientEvents",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "ClientEvents"
                      }
                    }
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "cb",
                "optional": false,
                "tsType": {
                  "repr": "ExtensionEventCallback",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ExtensionEventCallback"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/extensions.ts",
            "line": 101,
            "col": 2
          }
        },
        {
          "jsDoc": "Method called upon loading of an Extension",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "load",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/extensions.ts",
            "line": 115,
            "col": 2
          }
        },
        {
          "jsDoc": "Method called upon unloading of an Extension",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "unload",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/extensions.ts",
            "line": 117,
            "col": 2
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "ExtensionCommands",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/extensions.ts",
      "line": 9,
      "col": 0
    },
    "jsDoc": "Extension Commands Manager",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "ext",
              "optional": false,
              "tsType": {
                "repr": "Extension",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Extension"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/extensions.ts",
            "line": 12,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Extension",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Extension"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "extension",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/extensions.ts",
            "line": 10,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": "Gets a list of Extension's Commands",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "list",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Collection",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  {
                    "repr": "Command",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Command"
                    }
                  }
                ],
                "typeName": "Collection"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/extensions.ts",
            "line": 17,
            "col": 2
          }
        },
        {
          "jsDoc": "Gets an Extension Command",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "get",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cmd",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "Command",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Command"
                  }
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/extensions.ts",
            "line": 24,
            "col": 2
          }
        },
        {
          "jsDoc": "Adds an Extension Command",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "add",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "Cmd",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "Command",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Command"
                      }
                    },
                    {
                      "repr": "Command",
                      "kind": "typeQuery",
                      "typeQuery": "Command"
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/extensions.ts",
            "line": 34,
            "col": 2
          }
        },
        {
          "jsDoc": "Deletes an Extension Command",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "delete",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cmd",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "Command",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Command"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/extensions.ts",
            "line": 41,
            "col": 2
          }
        },
        {
          "jsDoc": "Deletes all Commands of an Extension",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "deleteAll",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/extensions.ts",
            "line": 55,
            "col": 2
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "ExtensionsManager",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/extensions.ts",
      "line": 121,
      "col": 0
    },
    "jsDoc": "Extensions Manager for CommandClient",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "CommandClient",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "CommandClient"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/extensions.ts",
            "line": 125,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "CommandClient",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "CommandClient"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "client",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/extensions.ts",
            "line": 122,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Collection",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                {
                  "repr": "Extension",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Extension"
                  }
                }
              ],
              "typeName": "Collection"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "list",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/extensions.ts",
            "line": 123,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": "Gets an Extension by name",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "get",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "ext",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "Extension",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Extension"
                  }
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/extensions.ts",
            "line": 130,
            "col": 2
          }
        },
        {
          "jsDoc": "Checks whether an Extension exists or not",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "exists",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "ext",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/extensions.ts",
            "line": 135,
            "col": 2
          }
        },
        {
          "jsDoc": "Loads an Extension onto Command Client",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "load",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "ext",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "Extension",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Extension"
                      }
                    },
                    {
                      "repr": "Extension",
                      "kind": "typeQuery",
                      "typeQuery": "Extension"
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/extensions.ts",
            "line": 140,
            "col": 2
          }
        },
        {
          "jsDoc": "Unloads an Extension from Command Client",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "unload",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "ext",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "Extension",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Extension"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/extensions.ts",
            "line": 150,
            "col": 2
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "GatewayCache",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/gatewayCache.ts",
      "line": 8,
      "col": 0
    },
    "jsDoc": "Cache Manager used for Caching values related to Gateway connection\n\nIn case of Redis, this will persistently cache session ID and seq for fast resumes.",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "cacheName",
              "optional": true,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/gatewayCache.ts",
            "line": 12,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Client",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Client"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "client",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/gatewayCache.ts",
            "line": 9,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "cacheName",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/gatewayCache.ts",
            "line": 10,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "get",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "key",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "undefined",
                        "kind": "keyword",
                        "keyword": "undefined"
                      },
                      {
                        "repr": "any",
                        "kind": "keyword",
                        "keyword": "any"
                      }
                    ]
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/gatewayCache.ts",
            "line": 17,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "set",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "key",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "value",
                "optional": false,
                "tsType": {
                  "repr": "any",
                  "kind": "keyword",
                  "keyword": "any"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "any",
                    "kind": "keyword",
                    "keyword": "any"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/gatewayCache.ts",
            "line": 22,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "delete",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "key",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/gatewayCache.ts",
            "line": 27,
            "col": 2
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "ClientEvents",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/gateway/handlers/index.ts",
      "line": 125,
      "col": 0
    },
    "jsDoc": "All Client Events",
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "typeLiteral",
        "typeLiteral": {
          "methods": [],
          "properties": [
            {
              "name": "ready",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "reconnect",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "resumed",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "channelCreate",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "EveryChannelTypes",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "EveryChannelTypes"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "channelDelete",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "EveryChannelTypes",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "EveryChannelTypes"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "channelPinsUpdate",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "EveryTextChannelTypes",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "EveryTextChannelTypes"
                    }
                  },
                  {
                    "repr": "EveryTextChannelTypes",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "EveryTextChannelTypes"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "channelUpdate",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "EveryChannelTypes",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "EveryChannelTypes"
                    }
                  },
                  {
                    "repr": "EveryChannelTypes",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "EveryChannelTypes"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "guildBanAdd",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "Guild",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Guild"
                    }
                  },
                  {
                    "repr": "User",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "User"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "guildBanRemove",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "Guild",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Guild"
                    }
                  },
                  {
                    "repr": "User",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "User"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "guildCreate",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "Guild",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Guild"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "guildLoaded",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "Guild",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Guild"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "guildDelete",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "Guild",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Guild"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "guildEmojiAdd",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "Emoji",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Emoji"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "guildEmojiDelete",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "Emoji",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Emoji"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "guildEmojiUpdate",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "Emoji",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Emoji"
                    }
                  },
                  {
                    "repr": "Emoji",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Emoji"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "guildIntegrationsUpdate",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "Guild",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Guild"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "guildEmojisUpdate",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "Guild",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Guild"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "guildMemberAdd",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "Member",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Member"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "guildMemberRemove",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "Member",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Member"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "guildMemberUpdate",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "Member",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Member"
                    }
                  },
                  {
                    "repr": "Member",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Member"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "guildRoleCreate",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "Role",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Role"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "guildRoleDelete",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "Role",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Role"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "guildRoleUpdate",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "Role",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Role"
                    }
                  },
                  {
                    "repr": "Role",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Role"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "guildUpdate",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "Guild",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Guild"
                    }
                  },
                  {
                    "repr": "Guild",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Guild"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "messageCreate",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "Message",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Message"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "messageDelete",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "Message",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Message"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "messageDeleteBulk",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "GuildTextChannel",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "GuildTextChannel"
                    }
                  },
                  {
                    "repr": "Collection",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        {
                          "repr": "Message",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Message"
                          }
                        }
                      ],
                      "typeName": "Collection"
                    }
                  },
                  {
                    "repr": "Set",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        }
                      ],
                      "typeName": "Set"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "messageUpdate",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "Message",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Message"
                    }
                  },
                  {
                    "repr": "Message",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Message"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "messageReactionAdd",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "MessageReaction",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "MessageReaction"
                    }
                  },
                  {
                    "repr": "User",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "User"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "messageReactionRemove",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "MessageReaction",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "MessageReaction"
                    }
                  },
                  {
                    "repr": "User",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "User"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "messageReactionRemoveAll",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "Message",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Message"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "messageReactionRemoveEmoji",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "Message",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Message"
                    }
                  },
                  {
                    "repr": "Emoji",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Emoji"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "typingStart",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "User",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "User"
                    }
                  },
                  {
                    "repr": "TextChannel",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "TextChannel"
                    }
                  },
                  {
                    "repr": "Date",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Date"
                    }
                  },
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "TypingStartGuildData",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "TypingStartGuildData"
                        }
                      },
                      {
                        "repr": "undefined",
                        "kind": "keyword",
                        "keyword": "undefined"
                      }
                    ]
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "inviteCreate",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "Invite",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Invite"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "inviteDelete",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "Invite",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Invite"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "userUpdate",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "User",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "User"
                    }
                  },
                  {
                    "repr": "User",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "User"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "voiceServerUpdate",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "VoiceServerUpdateData",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "VoiceServerUpdateData"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "voiceStateAdd",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "VoiceState",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "VoiceState"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "voiceStateRemove",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "VoiceState",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "VoiceState"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "voiceStateUpdate",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "VoiceState",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "VoiceState"
                    }
                  },
                  {
                    "repr": "VoiceState",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "VoiceState"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "presenceUpdate",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "Presence",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Presence"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "webhooksUpdate",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "Guild",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Guild"
                    }
                  },
                  {
                    "repr": "GuildTextChannel",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "GuildTextChannel"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "interactionCreate",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "Interaction",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Interaction"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "debug",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "raw",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  {
                    "repr": "any",
                    "kind": "keyword",
                    "keyword": "any"
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "messageDeleteUncached",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "MessageDeletePayload",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "MessageDeletePayload"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "guildMembersChunk",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "Guild",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Guild"
                    }
                  },
                  {
                    "repr": "",
                    "kind": "typeLiteral",
                    "typeLiteral": {
                      "methods": [],
                      "properties": [
                        {
                          "name": "chunkIndex",
                          "params": [],
                          "computed": false,
                          "optional": false,
                          "tsType": {
                            "repr": "number",
                            "kind": "keyword",
                            "keyword": "number"
                          },
                          "typeParams": []
                        },
                        {
                          "name": "chunkCount",
                          "params": [],
                          "computed": false,
                          "optional": false,
                          "tsType": {
                            "repr": "number",
                            "kind": "keyword",
                            "keyword": "number"
                          },
                          "typeParams": []
                        },
                        {
                          "name": "members",
                          "params": [],
                          "computed": false,
                          "optional": false,
                          "tsType": {
                            "repr": "",
                            "kind": "array",
                            "array": {
                              "repr": "string",
                              "kind": "keyword",
                              "keyword": "string"
                            }
                          },
                          "typeParams": []
                        },
                        {
                          "name": "presences",
                          "params": [],
                          "computed": false,
                          "optional": false,
                          "tsType": {
                            "repr": "",
                            "kind": "union",
                            "union": [
                              {
                                "repr": "",
                                "kind": "array",
                                "array": {
                                  "repr": "string",
                                  "kind": "keyword",
                                  "keyword": "string"
                                }
                              },
                              {
                                "repr": "undefined",
                                "kind": "keyword",
                                "keyword": "undefined"
                              }
                            ]
                          },
                          "typeParams": []
                        }
                      ],
                      "callSignatures": [],
                      "indexSignatures": []
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "guildMembersChunked",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "Guild",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Guild"
                    }
                  },
                  {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "rateLimit",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "",
                    "kind": "typeLiteral",
                    "typeLiteral": {
                      "methods": [],
                      "properties": [
                        {
                          "name": "method",
                          "params": [],
                          "computed": false,
                          "optional": false,
                          "tsType": {
                            "repr": "RequestMethods",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "RequestMethods"
                            }
                          },
                          "typeParams": []
                        },
                        {
                          "name": "url",
                          "params": [],
                          "computed": false,
                          "optional": false,
                          "tsType": {
                            "repr": "string",
                            "kind": "keyword",
                            "keyword": "string"
                          },
                          "typeParams": []
                        },
                        {
                          "name": "body",
                          "params": [],
                          "computed": false,
                          "optional": false,
                          "tsType": {
                            "repr": "any",
                            "kind": "keyword",
                            "keyword": "any"
                          },
                          "typeParams": []
                        }
                      ],
                      "callSignatures": [],
                      "indexSignatures": []
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "inviteDeleteUncached",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "PartialInvitePayload",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "PartialInvitePayload"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "voiceStateRemoveUncached",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "",
                    "kind": "typeLiteral",
                    "typeLiteral": {
                      "methods": [],
                      "properties": [
                        {
                          "name": "guild",
                          "params": [],
                          "computed": false,
                          "optional": false,
                          "tsType": {
                            "repr": "Guild",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "Guild"
                            }
                          },
                          "typeParams": []
                        },
                        {
                          "name": "member",
                          "params": [],
                          "computed": false,
                          "optional": false,
                          "tsType": {
                            "repr": "Member",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "Member"
                            }
                          },
                          "typeParams": []
                        }
                      ],
                      "callSignatures": [],
                      "indexSignatures": []
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "userUpdateUncached",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "User",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "User"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "webhooksUpdateUncached",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "Guild",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Guild"
                    }
                  },
                  {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "guildRoleUpdateUncached",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "Role",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Role"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "guildMemberUpdateUncached",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "Member",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Member"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "guildMemberRemoveUncached",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "Member",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Member"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "channelUpdateUncached",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "GuildChannels",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "GuildChannels"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "slashCommandCreate",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "SlashCommand",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "SlashCommand"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "slashCommandUpdate",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "SlashCommand",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "SlashCommand"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "slashCommandDelete",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "SlashCommand",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "SlashCommand"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "commandOwnerOnly",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "CommandContext",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "CommandContext"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "commandGuildOnly",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "CommandContext",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "CommandContext"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "commandDmOnly",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "CommandContext",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "CommandContext"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "commandNSFW",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "CommandContext",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "CommandContext"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "commandBotMissingPermissions",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "CommandContext",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "CommandContext"
                    }
                  },
                  {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "commandUserMissingPermissions",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "CommandContext",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "CommandContext"
                    }
                  },
                  {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "commandMissingArgs",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "CommandContext",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "CommandContext"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "commandUsed",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "CommandContext",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "CommandContext"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "commandError",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "CommandContext",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "CommandContext"
                    }
                  },
                  {
                    "repr": "Error",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Error"
                    }
                  }
                ]
              },
              "typeParams": []
            }
          ],
          "callSignatures": [],
          "indexSignatures": []
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "ICacheAdapter",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/cacheAdapter.ts",
      "line": 9,
      "col": 0
    },
    "jsDoc": "ICacheAdapter is the interface to be implemented by Cache Adapters for them to be usable with Harmony.\n\nMethods can return Promises too.",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "get",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/cacheAdapter.ts",
            "line": 11,
            "col": 2
          },
          "jsDoc": "Gets a key from a Cache",
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "fnOrConstructor",
            "fnOrConstructor": {
              "constructor": false,
              "tsType": {
                "repr": "",
                "kind": "union",
                "union": [
                  {
                    "repr": "Promise",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "any",
                          "kind": "keyword",
                          "keyword": "any"
                        }
                      ],
                      "typeName": "Promise"
                    }
                  },
                  {
                    "repr": "any",
                    "kind": "keyword",
                    "keyword": "any"
                  }
                ]
              },
              "params": [
                {
                  "kind": "identifier",
                  "name": "cacheName",
                  "optional": false,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                },
                {
                  "kind": "identifier",
                  "name": "key",
                  "optional": false,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                }
              ],
              "typeParams": []
            }
          },
          "typeParams": []
        },
        {
          "name": "set",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/cacheAdapter.ts",
            "line": 13,
            "col": 2
          },
          "jsDoc": "Sets a key to value in a Cache Name with optional expire value in MS",
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "fnOrConstructor",
            "fnOrConstructor": {
              "constructor": false,
              "tsType": {
                "repr": "",
                "kind": "union",
                "union": [
                  {
                    "repr": "Promise",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "any",
                          "kind": "keyword",
                          "keyword": "any"
                        }
                      ],
                      "typeName": "Promise"
                    }
                  },
                  {
                    "repr": "any",
                    "kind": "keyword",
                    "keyword": "any"
                  }
                ]
              },
              "params": [
                {
                  "kind": "identifier",
                  "name": "cacheName",
                  "optional": false,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                },
                {
                  "kind": "identifier",
                  "name": "key",
                  "optional": false,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                },
                {
                  "kind": "identifier",
                  "name": "value",
                  "optional": false,
                  "tsType": {
                    "repr": "any",
                    "kind": "keyword",
                    "keyword": "any"
                  }
                },
                {
                  "kind": "identifier",
                  "name": "expire",
                  "optional": true,
                  "tsType": {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  }
                }
              ],
              "typeParams": []
            }
          },
          "typeParams": []
        },
        {
          "name": "delete",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/cacheAdapter.ts",
            "line": 20,
            "col": 2
          },
          "jsDoc": "Deletes a key from a Cache",
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "fnOrConstructor",
            "fnOrConstructor": {
              "constructor": false,
              "tsType": {
                "repr": "",
                "kind": "union",
                "union": [
                  {
                    "repr": "Promise",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "boolean",
                          "kind": "keyword",
                          "keyword": "boolean"
                        }
                      ],
                      "typeName": "Promise"
                    }
                  },
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ]
              },
              "params": [
                {
                  "kind": "identifier",
                  "name": "cacheName",
                  "optional": false,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                },
                {
                  "kind": "identifier",
                  "name": "key",
                  "optional": false,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                }
              ],
              "typeParams": []
            }
          },
          "typeParams": []
        },
        {
          "name": "array",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/cacheAdapter.ts",
            "line": 22,
            "col": 2
          },
          "jsDoc": "Gets array of all values in a Cache",
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "fnOrConstructor",
            "fnOrConstructor": {
              "constructor": false,
              "tsType": {
                "repr": "",
                "kind": "union",
                "union": [
                  {
                    "repr": "undefined",
                    "kind": "keyword",
                    "keyword": "undefined"
                  },
                  {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    }
                  },
                  {
                    "repr": "Promise",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "",
                          "kind": "union",
                          "union": [
                            {
                              "repr": "",
                              "kind": "array",
                              "array": {
                                "repr": "any",
                                "kind": "keyword",
                                "keyword": "any"
                              }
                            },
                            {
                              "repr": "undefined",
                              "kind": "keyword",
                              "keyword": "undefined"
                            }
                          ]
                        }
                      ],
                      "typeName": "Promise"
                    }
                  }
                ]
              },
              "params": [
                {
                  "kind": "identifier",
                  "name": "cacheName",
                  "optional": false,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                }
              ],
              "typeParams": []
            }
          },
          "typeParams": []
        },
        {
          "name": "deleteCache",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/cacheAdapter.ts",
            "line": 24,
            "col": 2
          },
          "jsDoc": "Entirely deletes a Cache",
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "fnOrConstructor",
            "fnOrConstructor": {
              "constructor": false,
              "tsType": {
                "repr": "any",
                "kind": "keyword",
                "keyword": "any"
              },
              "params": [
                {
                  "kind": "identifier",
                  "name": "cacheName",
                  "optional": false,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                }
              ],
              "typeParams": []
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "DefaultCacheAdapter",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/cacheAdapter.ts",
      "line": 28,
      "col": 0
    },
    "jsDoc": "Default Cache Adapter for in-memory caching.",
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [],
              "callSignatures": [],
              "indexSignatures": [
                {
                  "readonly": false,
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "name",
                      "optional": false,
                      "tsType": {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    }
                  ],
                  "tsType": {
                    "repr": "Collection",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        {
                          "repr": "any",
                          "kind": "keyword",
                          "keyword": "any"
                        }
                      ],
                      "typeName": "Collection"
                    }
                  }
                }
              ]
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "data",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/cacheAdapter.ts",
            "line": 29,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "get",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cacheName",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "key",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "undefined",
                        "kind": "keyword",
                        "keyword": "undefined"
                      },
                      {
                        "repr": "any",
                        "kind": "keyword",
                        "keyword": "any"
                      }
                    ]
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/cacheAdapter.ts",
            "line": 33,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "set",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cacheName",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "key",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "value",
                "optional": false,
                "tsType": {
                  "repr": "any",
                  "kind": "keyword",
                  "keyword": "any"
                }
              },
              {
                "kind": "identifier",
                "name": "expire",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "any",
                    "kind": "keyword",
                    "keyword": "any"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/cacheAdapter.ts",
            "line": 39,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "delete",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cacheName",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "key",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/cacheAdapter.ts",
            "line": 57,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "array",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cacheName",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "",
                        "kind": "array",
                        "array": {
                          "repr": "any",
                          "kind": "keyword",
                          "keyword": "any"
                        }
                      },
                      {
                        "repr": "undefined",
                        "kind": "keyword",
                        "keyword": "undefined"
                      }
                    ]
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/cacheAdapter.ts",
            "line": 63,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "deleteCache",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cacheName",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/cacheAdapter.ts",
            "line": 69,
            "col": 2
          }
        }
      ],
      "extends": null,
      "implements": [
        {
          "repr": "ICacheAdapter",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "ICacheAdapter"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "RedisCacheAdapter",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/cacheAdapter.ts",
      "line": 76,
      "col": 0
    },
    "jsDoc": "Redis Cache Adapter for using Redis as a cache-provider.",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "options",
              "optional": false,
              "tsType": {
                "repr": "RedisConnectOptions",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "RedisConnectOptions"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/cacheAdapter.ts",
            "line": 83,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Promise",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "Redis",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Redis"
                  }
                }
              ],
              "typeName": "Promise"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "_redis",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/cacheAdapter.ts",
            "line": 77,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Redis",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Redis"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "redis",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/cacheAdapter.ts",
            "line": 78,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "ready",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/cacheAdapter.ts",
            "line": 79,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "_expireIntervalTimer",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/cacheAdapter.ts",
            "line": 80,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": "private",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "_expireInterval",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/cacheAdapter.ts",
            "line": 81,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": "private",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "_startExpireInterval",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/cacheAdapter.ts",
            "line": 97,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "_checkReady",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/cacheAdapter.ts",
            "line": 117,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "get",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cacheName",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "key",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      },
                      {
                        "repr": "undefined",
                        "kind": "keyword",
                        "keyword": "undefined"
                      }
                    ]
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/cacheAdapter.ts",
            "line": 121,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "set",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cacheName",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "key",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "value",
                "optional": false,
                "tsType": {
                  "repr": "any",
                  "kind": "keyword",
                  "keyword": "any"
                }
              },
              {
                "kind": "identifier",
                "name": "expire",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "number",
                        "kind": "keyword",
                        "keyword": "number"
                      },
                      {
                        "repr": "undefined",
                        "kind": "keyword",
                        "keyword": "undefined"
                      }
                    ]
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/cacheAdapter.ts",
            "line": 132,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "delete",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cacheName",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "key",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/cacheAdapter.ts",
            "line": 158,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "array",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cacheName",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "",
                        "kind": "array",
                        "array": {
                          "repr": "any",
                          "kind": "keyword",
                          "keyword": "any"
                        }
                      },
                      {
                        "repr": "undefined",
                        "kind": "keyword",
                        "keyword": "undefined"
                      }
                    ]
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/cacheAdapter.ts",
            "line": 166,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "deleteCache",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cacheName",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/cacheAdapter.ts",
            "line": 172,
            "col": 2
          }
        }
      ],
      "extends": null,
      "implements": [
        {
          "repr": "ICacheAdapter",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "ICacheAdapter"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "import",
    "name": "Collection",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/cacheAdapter.ts",
      "line": 1,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/src/utils/collection.ts",
      "imported": "Collection"
    }
  },
  {
    "kind": "import",
    "name": "connect",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/cacheAdapter.ts",
      "line": 2,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/deps.ts",
      "imported": "connect"
    }
  },
  {
    "kind": "import",
    "name": "Redis",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/cacheAdapter.ts",
      "line": 2,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/deps.ts",
      "imported": "Redis"
    }
  },
  {
    "kind": "import",
    "name": "RedisConnectOptions",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/cacheAdapter.ts",
      "line": 2,
      "col": 0
    },
    "jsDoc": null,
    "importDef": {
      "src": "file:///Users/helloyunho/Proejcts/harmony/deps.ts",
      "imported": "RedisConnectOptions"
    }
  },
  {
    "kind": "interface",
    "name": "TemplatePayload",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/template.ts",
      "line": 4,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "code",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/template.ts",
            "line": 5,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "name",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/template.ts",
            "line": 6,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "description",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/template.ts",
            "line": 7,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "usage_count",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/template.ts",
            "line": 8,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "creator_id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/template.ts",
            "line": 9,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "creator",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/template.ts",
            "line": 10,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "UserPayload",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "UserPayload"
            }
          },
          "typeParams": []
        },
        {
          "name": "created_at",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/template.ts",
            "line": 11,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "updated_at",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/template.ts",
            "line": 12,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "source_guild_id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/template.ts",
            "line": 13,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "serialized_source_guild",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/template.ts",
            "line": 14,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "GuildPayload",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GuildPayload"
            }
          },
          "typeParams": []
        },
        {
          "name": "is_dirty",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/template.ts",
            "line": 15,
            "col": 2
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "boolean",
                "kind": "keyword",
                "keyword": "boolean"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "Command",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
      "line": 74,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "name",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 75,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "description",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 76,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "category",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 77,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "aliases",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 78,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Extension",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Extension"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "extension",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 79,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "usage",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 80,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "examples",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 81,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "number",
                "kind": "keyword",
                "keyword": "number"
              },
              {
                "repr": "boolean",
                "kind": "keyword",
                "keyword": "boolean"
              },
              {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "args",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 82,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "permissions",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 83,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "userPermissions",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 84,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "botPermissions",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 85,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "roles",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 86,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "whitelistedGuilds",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 87,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "whitelistedChannels",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 88,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "whitelistedUsers",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 89,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "nsfw",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 90,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "guildOnly",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 91,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "dmOnly",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 92,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "ownerOnly",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 93,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": "Method executed before executing actual command. Returns bool value - whether to continue or not (optional)",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "beforeExecute",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "ctx",
                "optional": false,
                "tsType": {
                  "repr": "CommandContext",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "CommandContext"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                {
                  "repr": "Promise",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": [
                      {
                        "repr": "boolean",
                        "kind": "keyword",
                        "keyword": "boolean"
                      }
                    ],
                    "typeName": "Promise"
                  }
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 96,
            "col": 2
          }
        },
        {
          "jsDoc": "Actual command code, which is executed when all checks have passed.",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "execute",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "ctx",
                "optional": false,
                "tsType": {
                  "repr": "CommandContext",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "CommandContext"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 101,
            "col": 2
          }
        },
        {
          "jsDoc": "Method executed after executing command, passes on CommandContext and the value returned by execute too. (optional)",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "afterExecute",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "ctx",
                "optional": false,
                "tsType": {
                  "repr": "CommandContext",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "CommandContext"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "executeResult",
                "optional": false,
                "tsType": {
                  "repr": "any",
                  "kind": "keyword",
                  "keyword": "any"
                }
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 103,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "toString",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 105,
            "col": 2
          }
        }
      ],
      "extends": null,
      "implements": [
        {
          "repr": "CommandOptions",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "CommandOptions"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "CommandBuilder",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
      "line": 141,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setName",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "CommandBuilder",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "CommandBuilder"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 142,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setDescription",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "description",
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "CommandBuilder",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "CommandBuilder"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 147,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setCategory",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "category",
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "CommandBuilder",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "CommandBuilder"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 152,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setAlias",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "alias",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "",
                      "kind": "array",
                      "array": {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "CommandBuilder",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "CommandBuilder"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 157,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addAlias",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "alias",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "",
                      "kind": "array",
                      "array": {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "CommandBuilder",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "CommandBuilder"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 162,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setExtension",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "extension",
                "optional": true,
                "tsType": {
                  "repr": "Extension",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Extension"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "CommandBuilder",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "CommandBuilder"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 176,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setUsage",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "usage",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "",
                      "kind": "array",
                      "array": {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "CommandBuilder",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "CommandBuilder"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 181,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addUsage",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "usage",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "",
                      "kind": "array",
                      "array": {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "CommandBuilder",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "CommandBuilder"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 186,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setExample",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "examples",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "",
                      "kind": "array",
                      "array": {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "CommandBuilder",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "CommandBuilder"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 200,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addExample",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "examples",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "",
                      "kind": "array",
                      "array": {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "CommandBuilder",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "CommandBuilder"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 205,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setPermissions",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "perms",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "",
                      "kind": "array",
                      "array": {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "CommandBuilder",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "CommandBuilder"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 219,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setUserPermissions",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "perms",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "",
                      "kind": "array",
                      "array": {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "CommandBuilder",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "CommandBuilder"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 224,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setBotPermissions",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "perms",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "",
                      "kind": "array",
                      "array": {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "CommandBuilder",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "CommandBuilder"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 229,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setRoles",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "roles",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "",
                      "kind": "array",
                      "array": {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "CommandBuilder",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "CommandBuilder"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 234,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setWhitelistedGuilds",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "list",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "",
                      "kind": "array",
                      "array": {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "CommandBuilder",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "CommandBuilder"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 239,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setWhitelistedUsers",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "list",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "",
                      "kind": "array",
                      "array": {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "CommandBuilder",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "CommandBuilder"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 244,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setWhitelistedChannels",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "list",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "",
                      "kind": "array",
                      "array": {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "CommandBuilder",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "CommandBuilder"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 249,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setGuildOnly",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "value",
                  "optional": false,
                  "tsType": {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                },
                "right": "<UNIMPLEMENTED>",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "CommandBuilder",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "CommandBuilder"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 254,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setNSFW",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "value",
                  "optional": false,
                  "tsType": {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                },
                "right": "<UNIMPLEMENTED>",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "CommandBuilder",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "CommandBuilder"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 259,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setOwnerOnly",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "value",
                  "optional": false,
                  "tsType": {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                },
                "right": "<UNIMPLEMENTED>",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "CommandBuilder",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "CommandBuilder"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 264,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "onBeforeExecute",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "",
                      "kind": "union",
                      "union": [
                        {
                          "repr": "boolean",
                          "kind": "keyword",
                          "keyword": "boolean"
                        },
                        {
                          "repr": "any",
                          "kind": "keyword",
                          "keyword": "any"
                        }
                      ]
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "ctx",
                        "optional": false,
                        "tsType": {
                          "repr": "CommandContext",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "CommandContext"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "CommandBuilder",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "CommandBuilder"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 269,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "onExecute",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "ctx",
                        "optional": false,
                        "tsType": {
                          "repr": "CommandContext",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "CommandContext"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "CommandBuilder",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "CommandBuilder"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 274,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "onAfterExecute",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "ctx",
                        "optional": false,
                        "tsType": {
                          "repr": "CommandContext",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "CommandContext"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "executeResult",
                        "optional": true,
                        "tsType": {
                          "repr": "any",
                          "kind": "keyword",
                          "keyword": "any"
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "CommandBuilder",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "CommandBuilder"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 279,
            "col": 2
          }
        }
      ],
      "extends": "Command",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "CommandCategory",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
      "line": 116,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "jsDoc": "Name of the Category.",
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "name",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 118,
            "col": 2
          }
        },
        {
          "jsDoc": "Permissions(s) required by both User and Bot in order to use Category Commands",
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "permissions",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 120,
            "col": 2
          }
        },
        {
          "jsDoc": "Permission(s) required for using Category Commands",
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "userPermissions",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 122,
            "col": 2
          }
        },
        {
          "jsDoc": "Permission(s) bot will need in order to execute Category Commands",
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "botPermissions",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 124,
            "col": 2
          }
        },
        {
          "jsDoc": "Role(s) user will require in order to use Category Commands. List or one of ID or name",
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "roles",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 126,
            "col": 2
          }
        },
        {
          "jsDoc": "Whitelisted Guilds. Only these Guild(s) can execute Category Commands. (List or one of IDs)",
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "whitelistedGuilds",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 128,
            "col": 2
          }
        },
        {
          "jsDoc": "Whitelisted Channels. Category Commands can be executed only in these channels. (List or one of IDs)",
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "whitelistedChannels",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 130,
            "col": 2
          }
        },
        {
          "jsDoc": "Whitelisted Users. Category Commands can be executed only by these Users (List or one of IDs)",
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "whitelistedUsers",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 132,
            "col": 2
          }
        },
        {
          "jsDoc": "Whether the Category Commands can only be used in Guild (if allowed in DMs)",
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "guildOnly",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 134,
            "col": 2
          }
        },
        {
          "jsDoc": "Whether the Category Commands can only be used in Bot's DMs (if allowed)",
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "dmOnly",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 136,
            "col": 2
          }
        },
        {
          "jsDoc": "Whether the Category Commands can only be used by Bot Owners",
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "ownerOnly",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 138,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "CommandsManager",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
      "line": 287,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "CommandClient",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "CommandClient"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 292,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "CommandClient",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "CommandClient"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "client",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 288,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Collection",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                {
                  "repr": "Command",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Command"
                  }
                }
              ],
              "typeName": "Collection"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "list",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 289,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Set",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              ],
              "typeName": "Set"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "disabled",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 290,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": "Number of loaded Commands",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "count",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "number",
              "kind": "keyword",
              "keyword": "number"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 297,
            "col": 2
          }
        },
        {
          "jsDoc": "Filter out Commands by name/alias",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "filter",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "search",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "subPrefix",
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Collection",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  {
                    "repr": "Command",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Command"
                    }
                  }
                ],
                "typeName": "Collection"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 302,
            "col": 2
          }
        },
        {
          "jsDoc": "Find a Command by name/alias",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "find",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "search",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "subPrefix",
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "Command",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Command"
                  }
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 340,
            "col": 2
          }
        },
        {
          "jsDoc": "Fetch a Command including disable checks and subPrefix implementation",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fetch",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "parsed",
                "optional": false,
                "tsType": {
                  "repr": "ParsedCommand",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ParsedCommand"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "bypassDisable",
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "Command",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Command"
                  }
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 346,
            "col": 2
          }
        },
        {
          "jsDoc": "Check whether a Command exists or not",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "exists",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "search",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "Command",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Command"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "subPrefix",
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 369,
            "col": 2
          }
        },
        {
          "jsDoc": "Add a Command",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "add",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cmd",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "Command",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Command"
                      }
                    },
                    {
                      "repr": "Command",
                      "kind": "typeQuery",
                      "typeQuery": "Command"
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 395,
            "col": 2
          }
        },
        {
          "jsDoc": "Delete a Command",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "delete",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cmd",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "Command",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Command"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 416,
            "col": 2
          }
        },
        {
          "jsDoc": "Check whether a Command is disabled or not",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isDisabled",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "Command",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Command"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 423,
            "col": 2
          }
        },
        {
          "jsDoc": "Disable a Command",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "disable",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "Command",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Command"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 432,
            "col": 2
          }
        },
        {
          "jsDoc": "Get all commands of a Category",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "category",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "category",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Collection",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  {
                    "repr": "Command",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Command"
                    }
                  }
                ],
                "typeName": "Collection"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 441,
            "col": 2
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "CategoriesManager",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
      "line": 448,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "CommandClient",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "CommandClient"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 452,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "CommandClient",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "CommandClient"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "client",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 449,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Collection",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                {
                  "repr": "CommandCategory",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "CommandCategory"
                  }
                }
              ],
              "typeName": "Collection"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "list",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 450,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": "Get a Collection of Categories",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "all",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Collection",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  {
                    "repr": "CommandCategory",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "CommandCategory"
                    }
                  }
                ],
                "typeName": "Collection"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 457,
            "col": 2
          }
        },
        {
          "jsDoc": "Get a list of names of Categories added",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "names",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "",
              "kind": "array",
              "array": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 462,
            "col": 2
          }
        },
        {
          "jsDoc": "Check if a Category exists or not",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "has",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "category",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "CommandCategory",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "CommandCategory"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 467,
            "col": 2
          }
        },
        {
          "jsDoc": "Get a Category by name",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "get",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "CommandCategory",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "CommandCategory"
                  }
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 474,
            "col": 2
          }
        },
        {
          "jsDoc": "Add a Category to the Manager",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "add",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "category",
                "optional": false,
                "tsType": {
                  "repr": "CommandCategory",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "CommandCategory"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "CategoriesManager",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "CategoriesManager"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 479,
            "col": 2
          }
        },
        {
          "jsDoc": "Remove a Category from the Manager",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "remove",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "category",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "CommandCategory",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "CommandCategory"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 487,
            "col": 2
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "CommandContext",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
      "line": 10,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "client",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 12,
            "col": 2
          },
          "jsDoc": "The Client object",
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "CommandClient",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "CommandClient"
            }
          },
          "typeParams": []
        },
        {
          "name": "message",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 14,
            "col": 2
          },
          "jsDoc": "Message which was parsed for Command",
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "Message",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Message"
            }
          },
          "typeParams": []
        },
        {
          "name": "author",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 16,
            "col": 2
          },
          "jsDoc": "The Author of the Message",
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "User",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "User"
            }
          },
          "typeParams": []
        },
        {
          "name": "channel",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 18,
            "col": 2
          },
          "jsDoc": "The Channel in which Command was used",
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "TextChannel",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "TextChannel"
            }
          },
          "typeParams": []
        },
        {
          "name": "prefix",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 20,
            "col": 2
          },
          "jsDoc": "Prefix which was used",
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "command",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 22,
            "col": 2
          },
          "jsDoc": "Object of Command which was used",
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "Command",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Command"
            }
          },
          "typeParams": []
        },
        {
          "name": "name",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 24,
            "col": 2
          },
          "jsDoc": "Name of Command which was used",
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "args",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 26,
            "col": 2
          },
          "jsDoc": "Array of Arguments used with Command",
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            }
          },
          "typeParams": []
        },
        {
          "name": "argString",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 28,
            "col": 2
          },
          "jsDoc": "Complete Raw String of Arguments",
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "guild",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 30,
            "col": 2
          },
          "jsDoc": "Guild which the command has called",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Guild",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Guild"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "CommandOptions",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
      "line": 33,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "name",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 35,
            "col": 2
          },
          "jsDoc": "Name of the Command",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "description",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 37,
            "col": 2
          },
          "jsDoc": "Description of the Command",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "category",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 39,
            "col": 2
          },
          "jsDoc": "Category of the Command",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "aliases",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 41,
            "col": 2
          },
          "jsDoc": "Array of Aliases of Command, or only string",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "extension",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 43,
            "col": 2
          },
          "jsDoc": "Extension (Parent) of the Command",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Extension",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Extension"
            }
          },
          "typeParams": []
        },
        {
          "name": "usage",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 45,
            "col": 2
          },
          "jsDoc": "Usage of Command, only Argument Names",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "examples",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 47,
            "col": 2
          },
          "jsDoc": "Usage Example of Command, only Arguments (without Prefix and Name)",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "args",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 49,
            "col": 2
          },
          "jsDoc": "Does the Command take Arguments? Maybe number of required arguments? Or list of arguments?",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "number",
                "kind": "keyword",
                "keyword": "number"
              },
              {
                "repr": "boolean",
                "kind": "keyword",
                "keyword": "boolean"
              },
              {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "permissions",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 51,
            "col": 2
          },
          "jsDoc": "Permissions(s) required by both User and Bot in order to use Command",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "userPermissions",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 53,
            "col": 2
          },
          "jsDoc": "Permission(s) required for using Command",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "botPermissions",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 55,
            "col": 2
          },
          "jsDoc": "Permission(s) bot will need in order to execute Command",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "roles",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 57,
            "col": 2
          },
          "jsDoc": "Role(s) user will require in order to use Command. List or one of ID or name",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "whitelistedGuilds",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 59,
            "col": 2
          },
          "jsDoc": "Whitelisted Guilds. Only these Guild(s) can execute Command. (List or one of IDs)",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "whitelistedChannels",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 61,
            "col": 2
          },
          "jsDoc": "Whitelisted Channels. Command can be executed only in these channels. (List or one of IDs)",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "whitelistedUsers",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 63,
            "col": 2
          },
          "jsDoc": "Whitelisted Users. Command can be executed only by these Users (List or one of IDs)",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "nsfw",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 65,
            "col": 2
          },
          "jsDoc": "Whether the Command can only be used in NSFW channel or not",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "guildOnly",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 67,
            "col": 2
          },
          "jsDoc": "Whether the Command can only be used in Guild (if allowed in DMs)",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "dmOnly",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 69,
            "col": 2
          },
          "jsDoc": "Whether the Command can only be used in Bot's DMs (if allowed)",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "ownerOnly",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/command.ts",
            "line": 71,
            "col": 2
          },
          "jsDoc": "Whether the Command can only be used by Bot Owners",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "GuildManager",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/guilds.ts",
      "line": 23,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/guilds.ts",
            "line": 24,
            "col": 2
          }
        }
      ],
      "properties": [],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fetch",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Guild",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Guild"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/guilds.ts",
            "line": 28,
            "col": 2
          }
        },
        {
          "jsDoc": "Create a new guild based on a template.",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createFromTemplate",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "template",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "Template",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Template"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "icon",
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Guild",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Guild"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/guilds.ts",
            "line": 52,
            "col": 2
          }
        },
        {
          "jsDoc": "Creates a guild. Returns Guild. Fires guildCreate event.\n@param options Options for creating a guild",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "create",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "GuildCreateOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GuildCreateOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Guild",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Guild"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/guilds.ts",
            "line": 68,
            "col": 2
          }
        },
        {
          "jsDoc": "Gets a preview of a guild. Returns GuildPreview.\n@param guildID Guild id",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "preview",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "guildID",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "GuildPreview",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "GuildPreview"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/guilds.ts",
            "line": 127,
            "col": 2
          }
        },
        {
          "jsDoc": "Sets a value to Cache",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "set",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "key",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "value",
                "optional": false,
                "tsType": {
                  "repr": "GuildPayload",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GuildPayload"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "any",
                    "kind": "keyword",
                    "keyword": "any"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/guilds.ts",
            "line": 149,
            "col": 2
          }
        },
        {
          "jsDoc": "Edits a guild. Returns edited guild.\n@param guild Guild or guild id\n@param options Guild edit options\n@param asRaw true for get raw data, false for get guild(defaults to false)",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "edit",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "guild",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "Guild",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Guild"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "GuildModifyOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GuildModifyOptions"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "asRaw",
                "optional": false,
                "tsType": {
                  "repr": "false",
                  "kind": "literal",
                  "literal": {
                    "kind": "boolean",
                    "boolean": false
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Guild",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Guild"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/guilds.ts",
            "line": 164,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "edit",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "guild",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "Guild",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Guild"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "GuildModifyOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GuildModifyOptions"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "asRaw",
                "optional": false,
                "tsType": {
                  "repr": "true",
                  "kind": "literal",
                  "literal": {
                    "kind": "boolean",
                    "boolean": true
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "GuildPayload",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "GuildPayload"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/guilds.ts",
            "line": 169,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "edit",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "guild",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "Guild",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Guild"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "GuildModifyOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GuildModifyOptions"
                  }
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "asRaw",
                  "optional": false,
                  "tsType": {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                },
                "right": "<UNIMPLEMENTED>",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "Guild",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Guild"
                        }
                      },
                      {
                        "repr": "GuildPayload",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "GuildPayload"
                        }
                      }
                    ]
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/guilds.ts",
            "line": 174,
            "col": 2
          }
        },
        {
          "jsDoc": "Deletes a guild. Returns deleted guild.\n@param guild Guild or guild id",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "delete",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "guild",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "Guild",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Guild"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "Guild",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Guild"
                        }
                      },
                      {
                        "repr": "undefined",
                        "kind": "keyword",
                        "keyword": "undefined"
                      }
                    ]
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/guilds.ts",
            "line": 242,
            "col": 2
          }
        }
      ],
      "extends": "BaseManager",
      "implements": [],
      "typeParams": [],
      "superTypeParams": [
        {
          "repr": "GuildPayload",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GuildPayload"
          }
        },
        {
          "repr": "Guild",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Guild"
          }
        }
      ]
    }
  },
  {
    "kind": "class",
    "name": "Snowflake",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/snowflake.ts",
      "line": 2,
      "col": 0
    },
    "jsDoc": "Utility class to extract data from a Snowflake (Discord ID)",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "id",
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/snowflake.ts",
            "line": 5,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/snowflake.ts",
            "line": 3,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "snowflake",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "bigint",
              "kind": "keyword",
              "keyword": "bigint"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/snowflake.ts",
            "line": 9,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "timestamp",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "number",
              "kind": "keyword",
              "keyword": "number"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/snowflake.ts",
            "line": 13,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "workerID",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "number",
              "kind": "keyword",
              "keyword": "number"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/snowflake.ts",
            "line": 17,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "processID",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "number",
              "kind": "keyword",
              "keyword": "number"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/snowflake.ts",
            "line": 21,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "increment",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "number",
              "kind": "keyword",
              "keyword": "number"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/snowflake.ts",
            "line": 25,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "toString",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/utils/snowflake.ts",
            "line": 29,
            "col": 2
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "MembersManager",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/members.ts",
      "line": 10,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "guild",
              "optional": false,
              "tsType": {
                "repr": "Guild",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Guild"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/members.ts",
            "line": 13,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Guild",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Guild"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "guild",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/members.ts",
            "line": 11,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "get",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "key",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "Member",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Member"
                        }
                      },
                      {
                        "repr": "undefined",
                        "kind": "keyword",
                        "keyword": "undefined"
                      }
                    ]
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/members.ts",
            "line": 18,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "array",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "Member",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Member"
                      }
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/members.ts",
            "line": 40,
            "col": 2
          }
        },
        {
          "jsDoc": "Fetch a Guild Member",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fetch",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Member",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Member"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/members.ts",
            "line": 62,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fromPayload",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "members",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "MemberPayload",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "MemberPayload"
                    }
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/managers/members.ts",
            "line": 91,
            "col": 2
          }
        }
      ],
      "extends": "BaseManager",
      "implements": [],
      "typeParams": [],
      "superTypeParams": [
        {
          "repr": "MemberPayload",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "MemberPayload"
          }
        },
        {
          "repr": "Member",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Member"
          }
        }
      ]
    }
  },
  {
    "kind": "class",
    "name": "Invite",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/invite.ts",
      "line": 9,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "InvitePayload",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "InvitePayload"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/invite.ts",
            "line": 45,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "code",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/invite.ts",
            "line": 10,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "GuildPayload",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GuildPayload"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "guild",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/invite.ts",
            "line": 11,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "ChannelPayload",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ChannelPayload"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "channel",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/invite.ts",
            "line": 12,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "UserPayload",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "UserPayload"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "inviter",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/invite.ts",
            "line": 13,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "UserPayload",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "UserPayload"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "targetUser",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/invite.ts",
            "line": 14,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "targetUserType",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/invite.ts",
            "line": 15,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "approximatePresenceCount",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/invite.ts",
            "line": 16,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "approximateMemberCount",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/invite.ts",
            "line": 17,
            "col": 2
          }
        },
        {
          "jsDoc": "Number of times Invite was used. This is an Invite Metadata property (not always available)",
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "uses",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/invite.ts",
            "line": 20,
            "col": 2
          }
        },
        {
          "jsDoc": "Max number of times this Invite can be used. This is an Invite Metadata property (not always available)",
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "maxUses",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/invite.ts",
            "line": 22,
            "col": 2
          }
        },
        {
          "jsDoc": "Max age of the Invite in seconds. This is an Invite Metadata property (not always available)",
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "maxAge",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/invite.ts",
            "line": 24,
            "col": 2
          }
        },
        {
          "jsDoc": "Whether Invite is temporary or not. This is an Invite Metadata property (not always available)",
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "temporary",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/invite.ts",
            "line": 26,
            "col": 2
          }
        },
        {
          "jsDoc": "Timestamp (string) when Invite was created. This is an Invite Metadata property (not always available)",
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "createdAtTimestamp",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/invite.ts",
            "line": 28,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": "Timestamp (Date) when Invite was created. This is an Invite Metadata property (not always available)",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createdAt",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "Date",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Date"
                  }
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/invite.ts",
            "line": 31,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "link",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/invite.ts",
            "line": 37,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "toString",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/invite.ts",
            "line": 41,
            "col": 2
          }
        },
        {
          "jsDoc": "Delete an invite. Requires the MANAGE_CHANNELS permission on the channel this invite belongs to, or MANAGE_GUILD to remove any invite across the guild. Returns an invite object on success. Fires a Invite Delete Gateway event.",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "delete",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Invite",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Invite"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/invite.ts",
            "line": 64,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "readFromData",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "InvitePayload",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "InvitePayload"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/invite.ts",
            "line": 69,
            "col": 2
          }
        }
      ],
      "extends": "Base",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "variable",
    "name": "PermissionFlags",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/permissionFlags.ts",
      "line": 3,
      "col": 0
    },
    "jsDoc": null,
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "typeLiteral",
        "typeLiteral": {
          "methods": [],
          "properties": [],
          "callSignatures": [],
          "indexSignatures": [
            {
              "readonly": false,
              "params": [
                {
                  "kind": "identifier",
                  "name": "key",
                  "optional": false,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                }
              ],
              "tsType": {
                "repr": "number",
                "kind": "keyword",
                "keyword": "number"
              }
            }
          ]
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "class",
    "name": "Webhook",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/webhook.ts",
      "line": 35,
      "col": 0
    },
    "jsDoc": "Webhook follows different way of instantiation",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "WebhookPayload",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "WebhookPayload"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "client",
              "optional": true,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "rest",
              "optional": true,
              "tsType": {
                "repr": "RESTManager",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "RESTManager"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/webhook.ts",
            "line": 55,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Client",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Client"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "client",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/webhook.ts",
            "line": 36,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/webhook.ts",
            "line": 37,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "1",
                "kind": "literal",
                "literal": {
                  "kind": "number",
                  "number": 1.0
                }
              },
              {
                "repr": "2",
                "kind": "literal",
                "literal": {
                  "kind": "number",
                  "number": 2.0
                }
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/webhook.ts",
            "line": 38,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "guildID",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/webhook.ts",
            "line": 39,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "channelID",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/webhook.ts",
            "line": 40,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "User",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "User"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "user",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/webhook.ts",
            "line": 41,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "UserPayload",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "UserPayload"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "userRaw",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/webhook.ts",
            "line": 42,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "name",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/webhook.ts",
            "line": 43,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "avatar",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/webhook.ts",
            "line": 44,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "token",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/webhook.ts",
            "line": 45,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "applicationID",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/webhook.ts",
            "line": 46,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "RESTManager",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "RESTManager"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "rest",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/webhook.ts",
            "line": 47,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "url",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/webhook.ts",
            "line": 49,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": "private",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fromPayload",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "WebhookPayload",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "WebhookPayload"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Webhook",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Webhook"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/webhook.ts",
            "line": 76,
            "col": 2
          }
        },
        {
          "jsDoc": "Sends a Message through Webhook.",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "send",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "text",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "AllWebhookMessageOptions",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "AllWebhookMessageOptions"
                      }
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "option",
                "optional": true,
                "tsType": {
                  "repr": "AllWebhookMessageOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "AllWebhookMessageOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Message",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Message"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/webhook.ts",
            "line": 96,
            "col": 2
          }
        },
        {
          "jsDoc": "Creates a Webhook object from URL\n@param url URL of the Webhook\n@param client Client (bot) object, if any.",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "fromURL",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "url",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "URL",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "URL"
                      }
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "client",
                "optional": true,
                "tsType": {
                  "repr": "Client",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Client"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Webhook",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Webhook"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/webhook.ts",
            "line": 159,
            "col": 2
          }
        },
        {
          "jsDoc": "Edits the Webhook name, avatar, or channel (requires authentication).\n@param options Options to edit the Webhook.",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "edit",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "WebhookEditOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "WebhookEditOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Webhook",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Webhook"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/webhook.ts",
            "line": 174,
            "col": 2
          }
        },
        {
          "jsDoc": "Deletes the Webhook.",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "delete",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/webhook.ts",
            "line": 192,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "editMessage",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "message",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "Message",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Message"
                      }
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "content",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "embeds",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "",
                          "kind": "array",
                          "array": {
                            "repr": "Embed",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "Embed"
                            }
                          }
                        },
                        "typeParams": []
                      },
                      {
                        "name": "file",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "any",
                          "kind": "keyword",
                          "keyword": "any"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "allowed_mentions",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "",
                          "kind": "typeLiteral",
                          "typeLiteral": {
                            "methods": [],
                            "properties": [
                              {
                                "name": "parse",
                                "params": [],
                                "computed": false,
                                "optional": true,
                                "tsType": {
                                  "repr": "string",
                                  "kind": "keyword",
                                  "keyword": "string"
                                },
                                "typeParams": []
                              },
                              {
                                "name": "roles",
                                "params": [],
                                "computed": false,
                                "optional": true,
                                "tsType": {
                                  "repr": "",
                                  "kind": "array",
                                  "array": {
                                    "repr": "string",
                                    "kind": "keyword",
                                    "keyword": "string"
                                  }
                                },
                                "typeParams": []
                              },
                              {
                                "name": "users",
                                "params": [],
                                "computed": false,
                                "optional": true,
                                "tsType": {
                                  "repr": "",
                                  "kind": "array",
                                  "array": {
                                    "repr": "string",
                                    "kind": "keyword",
                                    "keyword": "string"
                                  }
                                },
                                "typeParams": []
                              },
                              {
                                "name": "everyone",
                                "params": [],
                                "computed": false,
                                "optional": true,
                                "tsType": {
                                  "repr": "boolean",
                                  "kind": "keyword",
                                  "keyword": "boolean"
                                },
                                "typeParams": []
                              }
                            ],
                            "callSignatures": [],
                            "indexSignatures": []
                          }
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Webhook",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Webhook"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/webhook.ts",
            "line": 198,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "deleteMessage",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "message",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "Message",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Message"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Webhook",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Webhook"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/webhook.ts",
            "line": 223,
            "col": 2
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "variable",
    "name": "UserFlags",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/types/userFlags.ts",
      "line": 1,
      "col": 0
    },
    "jsDoc": null,
    "variableDef": {
      "tsType": null,
      "kind": "const"
    }
  },
  {
    "kind": "class",
    "name": "RESTManager",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/rest.ts",
      "line": 150,
      "col": 0
    },
    "jsDoc": "An easier to use interface for interacting with Discord REST API.",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "options",
              "optional": true,
              "tsType": {
                "repr": "RESTOptions",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "RESTOptions"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/rest.ts",
            "line": 184,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [],
              "callSignatures": [],
              "indexSignatures": [
                {
                  "readonly": false,
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "key",
                      "optional": false,
                      "tsType": {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    }
                  ],
                  "tsType": {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "QueuedItem",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "QueuedItem"
                      }
                    }
                  }
                }
              ]
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "queues",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/rest.ts",
            "line": 151,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": null,
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "rateLimits",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/rest.ts",
            "line": 152,
            "col": 2
          }
        },
        {
          "jsDoc": "Whether we are globally ratelimited or not",
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "globalRateLimit",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/rest.ts",
            "line": 154,
            "col": 2
          }
        },
        {
          "jsDoc": "Whether requests are being processed or not",
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "processing",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/rest.ts",
            "line": 156,
            "col": 2
          }
        },
        {
          "jsDoc": "API Version being used by REST Manager",
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "version",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/rest.ts",
            "line": 158,
            "col": 2
          }
        },
        {
          "jsDoc": "API Map - easy to use way for interacting with Discord API.\n\nExamples:\n* ```ts\n  rest.api.users['123'].get().then(userPayload => doSomething)\n  ```\n* ```ts\n  rest.api.guilds['123'].channels.post({ name: 'my-channel', type: 0 }).then(channelPayload => {})\n  ```",
          "tsType": {
            "repr": "APIMap",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "APIMap"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "api",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/rest.ts",
            "line": 170,
            "col": 2
          }
        },
        {
          "jsDoc": "Token being used for Authorization",
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "",
                "kind": "parenthesized",
                "parenthesized": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "",
                      "kind": "union",
                      "union": [
                        {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        {
                          "repr": "undefined",
                          "kind": "keyword",
                          "keyword": "undefined"
                        }
                      ]
                    },
                    "params": [],
                    "typeParams": []
                  }
                }
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "token",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/rest.ts",
            "line": 172,
            "col": 2
          }
        },
        {
          "jsDoc": "Token Type of the Token if any",
          "tsType": {
            "repr": "TokenType",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "TokenType"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "tokenType",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/rest.ts",
            "line": 174,
            "col": 2
          }
        },
        {
          "jsDoc": "Headers object which patch the current ones",
          "tsType": {
            "repr": "any",
            "kind": "keyword",
            "keyword": "any"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "headers",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/rest.ts",
            "line": 176,
            "col": 2
          }
        },
        {
          "jsDoc": "Optional custom User Agent (header)",
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "userAgent",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/rest.ts",
            "line": 178,
            "col": 2
          }
        },
        {
          "jsDoc": "Whether REST Manager is using Canary API",
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "canary",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/rest.ts",
            "line": 180,
            "col": 2
          }
        },
        {
          "jsDoc": "Optional Harmony Client object",
          "tsType": {
            "repr": "Client",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Client"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "client",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/rest.ts",
            "line": 182,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": "Checks the queues of buckets, if empty, delete entry",
          "accessibility": "private",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "checkQueues",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/rest.ts",
            "line": 197,
            "col": 2
          }
        },
        {
          "jsDoc": "Adds a Request to Queue",
          "accessibility": "private",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "queue",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "request",
                "optional": false,
                "tsType": {
                  "repr": "QueuedItem",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "QueuedItem"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/rest.ts",
            "line": 207,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": "private",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "processQueue",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/rest.ts",
            "line": 222,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": "private",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "prepare",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "body",
                "optional": false,
                "tsType": {
                  "repr": "any",
                  "kind": "keyword",
                  "keyword": "any"
                }
              },
              {
                "kind": "identifier",
                "name": "method",
                "optional": false,
                "tsType": {
                  "repr": "RequestMethods",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "RequestMethods"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "typeLiteral",
              "typeLiteral": {
                "methods": [],
                "properties": [],
                "callSignatures": [],
                "indexSignatures": [
                  {
                    "readonly": false,
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "key",
                        "optional": false,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        }
                      }
                    ],
                    "tsType": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    }
                  }
                ]
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/rest.ts",
            "line": 268,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": "private",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isRateLimited",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "url",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                {
                  "repr": "false",
                  "kind": "literal",
                  "literal": {
                    "kind": "boolean",
                    "boolean": false
                  }
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/rest.ts",
            "line": 344,
            "col": 2
          }
        },
        {
          "jsDoc": "Processes headers of the Response",
          "accessibility": "private",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "processHeaders",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "url",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "headers",
                "optional": false,
                "tsType": {
                  "repr": "Headers",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Headers"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                {
                  "repr": "null",
                  "kind": "keyword",
                  "keyword": "null"
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/rest.ts",
            "line": 360,
            "col": 2
          }
        },
        {
          "jsDoc": "Handles status code of response and acts as required",
          "accessibility": "private",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "handleStatusCode",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "response",
                "optional": false,
                "tsType": {
                  "repr": "Response",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Response"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "body",
                "optional": false,
                "tsType": {
                  "repr": "any",
                  "kind": "keyword",
                  "keyword": "any"
                }
              },
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [],
                    "callSignatures": [],
                    "indexSignatures": [
                      {
                        "readonly": false,
                        "params": [
                          {
                            "kind": "identifier",
                            "name": "key",
                            "optional": false,
                            "tsType": {
                              "repr": "string",
                              "kind": "keyword",
                              "keyword": "string"
                            }
                          }
                        ],
                        "tsType": {
                          "repr": "any",
                          "kind": "keyword",
                          "keyword": "any"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "reject",
                "optional": false,
                "tsType": {
                  "repr": "CallableFunction",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "CallableFunction"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/rest.ts",
            "line": 414,
            "col": 2
          }
        },
        {
          "jsDoc": "Makes a Request to Discord API.\n@param method HTTP Method to use\n@param url URL of the Request\n@param body Body to send with Request\n@param maxRetries Number of Max Retries to perform\n@param bucket BucketID of the Request\n@param rawResponse Whether to get Raw Response or body itself",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "make",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "method",
                "optional": false,
                "tsType": {
                  "repr": "RequestMethods",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "RequestMethods"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "url",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "body",
                "optional": true,
                "tsType": {
                  "repr": "unknown",
                  "kind": "keyword",
                  "keyword": "unknown"
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "maxRetries",
                  "optional": false,
                  "tsType": null
                },
                "right": "<UNIMPLEMENTED>",
                "tsType": null
              },
              {
                "kind": "identifier",
                "name": "bucket",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "null",
                      "kind": "keyword",
                      "keyword": "null"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "rawResponse",
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "any",
                    "kind": "keyword",
                    "keyword": "any"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/rest.ts",
            "line": 511,
            "col": 2
          }
        },
        {
          "jsDoc": "Checks for RateLimits times and deletes if already over",
          "accessibility": "private",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "handleRateLimits",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/rest.ts",
            "line": 609,
            "col": 2
          }
        },
        {
          "jsDoc": "Makes a GET Request to API",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "get",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "url",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "body",
                "optional": true,
                "tsType": {
                  "repr": "unknown",
                  "kind": "keyword",
                  "keyword": "unknown"
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "maxRetries",
                  "optional": false,
                  "tsType": null
                },
                "right": "<UNIMPLEMENTED>",
                "tsType": null
              },
              {
                "kind": "identifier",
                "name": "bucket",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "null",
                      "kind": "keyword",
                      "keyword": "null"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "rawResponse",
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "any",
                    "kind": "keyword",
                    "keyword": "any"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/rest.ts",
            "line": 621,
            "col": 2
          }
        },
        {
          "jsDoc": "Makes a POST Request to API",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "post",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "url",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "body",
                "optional": true,
                "tsType": {
                  "repr": "unknown",
                  "kind": "keyword",
                  "keyword": "unknown"
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "maxRetries",
                  "optional": false,
                  "tsType": null
                },
                "right": "<UNIMPLEMENTED>",
                "tsType": null
              },
              {
                "kind": "identifier",
                "name": "bucket",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "null",
                      "kind": "keyword",
                      "keyword": "null"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "rawResponse",
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "any",
                    "kind": "keyword",
                    "keyword": "any"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/rest.ts",
            "line": 632,
            "col": 2
          }
        },
        {
          "jsDoc": "Makes a DELETE Request to API",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "delete",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "url",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "body",
                "optional": true,
                "tsType": {
                  "repr": "unknown",
                  "kind": "keyword",
                  "keyword": "unknown"
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "maxRetries",
                  "optional": false,
                  "tsType": null
                },
                "right": "<UNIMPLEMENTED>",
                "tsType": null
              },
              {
                "kind": "identifier",
                "name": "bucket",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "null",
                      "kind": "keyword",
                      "keyword": "null"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "rawResponse",
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "any",
                    "kind": "keyword",
                    "keyword": "any"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/rest.ts",
            "line": 643,
            "col": 2
          }
        },
        {
          "jsDoc": "Makes a PATCH Request to API",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "patch",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "url",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "body",
                "optional": true,
                "tsType": {
                  "repr": "unknown",
                  "kind": "keyword",
                  "keyword": "unknown"
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "maxRetries",
                  "optional": false,
                  "tsType": null
                },
                "right": "<UNIMPLEMENTED>",
                "tsType": null
              },
              {
                "kind": "identifier",
                "name": "bucket",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "null",
                      "kind": "keyword",
                      "keyword": "null"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "rawResponse",
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "any",
                    "kind": "keyword",
                    "keyword": "any"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/rest.ts",
            "line": 654,
            "col": 2
          }
        },
        {
          "jsDoc": "Makes a PUT Request to API",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "put",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "url",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "body",
                "optional": true,
                "tsType": {
                  "repr": "unknown",
                  "kind": "keyword",
                  "keyword": "unknown"
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "maxRetries",
                  "optional": false,
                  "tsType": null
                },
                "right": "<UNIMPLEMENTED>",
                "tsType": null
              },
              {
                "kind": "identifier",
                "name": "bucket",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "null",
                      "kind": "keyword",
                      "keyword": "null"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "rawResponse",
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "any",
                    "kind": "keyword",
                    "keyword": "any"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/rest.ts",
            "line": 665,
            "col": 2
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "enum",
    "name": "TokenType",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/rest.ts",
      "line": 140,
      "col": 0
    },
    "jsDoc": "Token Type for REST API.",
    "enumDef": {
      "members": [
        {
          "name": "Bot",
          "jsDoc": "Token type for Bot User"
        },
        {
          "name": "Bearer",
          "jsDoc": "Token Type for OAuth2"
        },
        {
          "name": "None",
          "jsDoc": "No Token Type. Can be used for User accounts."
        }
      ]
    }
  },
  {
    "kind": "enum",
    "name": "HttpResponseCode",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/rest.ts",
      "line": 15,
      "col": 0
    },
    "jsDoc": null,
    "enumDef": {
      "members": [
        {
          "name": "Ok",
          "jsDoc": null
        },
        {
          "name": "Created",
          "jsDoc": null
        },
        {
          "name": "NoContent",
          "jsDoc": null
        },
        {
          "name": "NotModified",
          "jsDoc": null
        },
        {
          "name": "BadRequest",
          "jsDoc": null
        },
        {
          "name": "Unauthorized",
          "jsDoc": null
        },
        {
          "name": "Forbidden",
          "jsDoc": null
        },
        {
          "name": "NotFound",
          "jsDoc": null
        },
        {
          "name": "MethodNotAllowed",
          "jsDoc": null
        },
        {
          "name": "TooManyRequests",
          "jsDoc": null
        },
        {
          "name": "GatewayUnavailable",
          "jsDoc": null
        }
      ]
    }
  },
  {
    "kind": "interface",
    "name": "RequestHeaders",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/rest.ts",
      "line": 29,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [],
      "callSignatures": [],
      "indexSignatures": [
        {
          "readonly": false,
          "params": [
            {
              "kind": "identifier",
              "name": "name",
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            }
          ],
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          }
        }
      ],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "RESTOptions",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/rest.ts",
      "line": 122,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "token",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/rest.ts",
            "line": 124,
            "col": 2
          },
          "jsDoc": "Token to use for authorization",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "",
                "kind": "parenthesized",
                "parenthesized": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "",
                      "kind": "union",
                      "union": [
                        {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        {
                          "repr": "undefined",
                          "kind": "keyword",
                          "keyword": "undefined"
                        }
                      ]
                    },
                    "params": [],
                    "typeParams": []
                  }
                }
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "headers",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/rest.ts",
            "line": 126,
            "col": 2
          },
          "jsDoc": "Headers to patch with if any",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [],
              "callSignatures": [],
              "indexSignatures": [
                {
                  "readonly": false,
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "name",
                      "optional": false,
                      "tsType": {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    }
                  ],
                  "tsType": {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      },
                      {
                        "repr": "undefined",
                        "kind": "keyword",
                        "keyword": "undefined"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "typeParams": []
        },
        {
          "name": "canary",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/rest.ts",
            "line": 128,
            "col": 2
          },
          "jsDoc": "Whether to use Canary instance of Discord API or not",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "version",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/rest.ts",
            "line": 130,
            "col": 2
          },
          "jsDoc": "Discord REST API version to use",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "6",
                "kind": "literal",
                "literal": {
                  "kind": "number",
                  "number": 6.0
                }
              },
              {
                "repr": "7",
                "kind": "literal",
                "literal": {
                  "kind": "number",
                  "number": 7.0
                }
              },
              {
                "repr": "8",
                "kind": "literal",
                "literal": {
                  "kind": "number",
                  "number": 8.0
                }
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "tokenType",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/rest.ts",
            "line": 132,
            "col": 2
          },
          "jsDoc": "Token Type to use for Authorization",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "TokenType",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "TokenType"
            }
          },
          "typeParams": []
        },
        {
          "name": "userAgent",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/rest.ts",
            "line": 134,
            "col": 2
          },
          "jsDoc": "User Agent to use (Header)",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "client",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/models/rest.ts",
            "line": 136,
            "col": 2
          },
          "jsDoc": "Optional Harmony client",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Client",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Client"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "Message",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/message.ts",
      "line": 24,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "MessagePayload",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "MessagePayload"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "channel",
              "optional": false,
              "tsType": {
                "repr": "TextChannel",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "TextChannel"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "author",
              "optional": false,
              "tsType": {
                "repr": "User",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "User"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/message.ts",
            "line": 53,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "id",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/message.ts",
            "line": 25,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "channelID",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/message.ts",
            "line": 26,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "TextChannel",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "TextChannel"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "channel",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/message.ts",
            "line": 27,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "guildID",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/message.ts",
            "line": 28,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Guild",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Guild"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "guild",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/message.ts",
            "line": 29,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "User",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "User"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "author",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/message.ts",
            "line": 30,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Member",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Member"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "member",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/message.ts",
            "line": 31,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "content",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/message.ts",
            "line": 32,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Date",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Date"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "editedTimestamp",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/message.ts",
            "line": 33,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "tts",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/message.ts",
            "line": 34,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "MessageMentions",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MessageMentions"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "mentions",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/message.ts",
            "line": 35,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "Attachment",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Attachment"
              }
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "attachments",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/message.ts",
            "line": 36,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "Embed",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Embed"
              }
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "embeds",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/message.ts",
            "line": 37,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "MessageReactionsManager",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MessageReactionsManager"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "reactions",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/message.ts",
            "line": 38,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "number",
                "kind": "keyword",
                "keyword": "number"
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "nonce",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/message.ts",
            "line": 39,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "pinned",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/message.ts",
            "line": 40,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "webhookID",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/message.ts",
            "line": 41,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/message.ts",
            "line": 42,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "MessageActivity",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MessageActivity"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "activity",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/message.ts",
            "line": 43,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "MessageApplication",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MessageApplication"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "application",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/message.ts",
            "line": 44,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "MessageReference",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MessageReference"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "messageReference",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/message.ts",
            "line": 45,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "flags",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/message.ts",
            "line": 46,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "MessageSticker",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "MessageSticker"
              }
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "stickers",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/message.ts",
            "line": 47,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createdAt",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Date",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Date"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/message.ts",
            "line": 49,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "readFromData",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "MessagePayload",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "MessagePayload"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/message.ts",
            "line": 91,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "updateRefs",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/message.ts",
            "line": 118,
            "col": 2
          }
        },
        {
          "jsDoc": "Edits this message.",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "edit",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "content",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "AllMessageOptions",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "AllMessageOptions"
                      }
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "option",
                "optional": true,
                "tsType": {
                  "repr": "AllMessageOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "AllMessageOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Message",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Message"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/message.ts",
            "line": 136,
            "col": 2
          }
        },
        {
          "jsDoc": "Creates a Reply to this Message.",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "reply",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "content",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "AllMessageOptions",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "AllMessageOptions"
                      }
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "option",
                "optional": true,
                "tsType": {
                  "repr": "AllMessageOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "AllMessageOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Message",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Message"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/message.ts",
            "line": 162,
            "col": 2
          }
        },
        {
          "jsDoc": "Deletes the Message.",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "delete",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/message.ts",
            "line": 170,
            "col": 2
          }
        },
        {
          "jsDoc": "Adds a reaction to the message.\n@param emoji Emoji in string or object",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addReaction",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "emoji",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "Emoji",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Emoji"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/message.ts",
            "line": 178,
            "col": 2
          }
        },
        {
          "jsDoc": "Removes a reaction to the message.\n@param emoji Emoji in string or object\n@param user User or Member or user id",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "removeReaction",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "emoji",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "Emoji",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Emoji"
                      }
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "user",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "User",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "User"
                      }
                    },
                    {
                      "repr": "Member",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Member"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/message.ts",
            "line": 187,
            "col": 2
          }
        }
      ],
      "extends": "SnowflakeBase",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "MessageAttachment",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/message.ts",
      "line": 198,
      "col": 0
    },
    "jsDoc": "Message Attachment that can be sent while Creating Message",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "name",
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            },
            {
              "kind": "identifier",
              "name": "blob",
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "union",
                "union": [
                  {
                    "repr": "Blob",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Blob"
                    }
                  },
                  {
                    "repr": "Uint8Array",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Uint8Array"
                    }
                  },
                  {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                ]
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/message.ts",
            "line": 202,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "name",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/message.ts",
            "line": 199,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Blob",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Blob"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "blob",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/message.ts",
            "line": 200,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": "Load an Message Attachment from local file or URL",
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "load",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "path",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "filename",
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "MessageAttachment",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "MessageAttachment"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/structures/message.ts",
            "line": 213,
            "col": 2
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "Gateway",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/gateway/index.ts",
      "line": 58,
      "col": 0
    },
    "jsDoc": "Handles Discord Gateway connection.\n\nYou should not use this and rather use Client class.",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "shards",
              "optional": true,
              "tsType": {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/gateway/index.ts",
            "line": 75,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "WebSocket",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "WebSocket"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "websocket",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/gateway/index.ts",
            "line": 59,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "token",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/gateway/index.ts",
            "line": 60,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "GatewayIntents",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "GatewayIntents"
              }
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "intents",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/gateway/index.ts",
            "line": 61,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": null,
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "connected",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/gateway/index.ts",
            "line": 62,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": null,
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "initialized",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/gateway/index.ts",
            "line": 63,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": null,
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "heartbeatInterval",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/gateway/index.ts",
            "line": 64,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "heartbeatIntervalID",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/gateway/index.ts",
            "line": 65,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "sequenceID",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/gateway/index.ts",
            "line": 66,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": null,
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "lastPingTimestamp",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/gateway/index.ts",
            "line": 67,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "sessionID",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/gateway/index.ts",
            "line": 68,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": null,
          "readonly": false,
          "accessibility": "private",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "heartbeatServerResponded",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/gateway/index.ts",
            "line": 69,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Client",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Client"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "client",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/gateway/index.ts",
            "line": 70,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "GatewayCache",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GatewayCache"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "cache",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/gateway/index.ts",
            "line": 71,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "number",
                "kind": "keyword",
                "keyword": "number"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "readonly": false,
          "accessibility": "private",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "timedIdentify",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/gateway/index.ts",
            "line": 72,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "number",
              "kind": "keyword",
              "keyword": "number"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "shards",
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/gateway/index.ts",
            "line": 73,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": "private",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "onopen",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/gateway/index.ts",
            "line": 82,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": "private",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "onmessage",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "MessageEvent",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "MessageEvent"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/gateway/index.ts",
            "line": 88,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": "private",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "onclose",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "object",
                "props": [
                  {
                    "kind": "assign",
                    "key": "reason",
                    "value": null
                  },
                  {
                    "kind": "assign",
                    "key": "code",
                    "value": null
                  }
                ],
                "optional": false,
                "tsType": {
                  "repr": "CloseEvent",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "CloseEvent"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/gateway/index.ts",
            "line": 189,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": "private",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "onerror",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "ErrorEvent",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ErrorEvent"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/gateway/index.ts",
            "line": 251,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": "private",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "enqueueIdentify",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "forceNew",
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/gateway/index.ts",
            "line": 265,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": "private",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "sendIdentify",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "forceNewSession",
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/gateway/index.ts",
            "line": 271,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": "private",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "sendResume",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/gateway/index.ts",
            "line": 329,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "requestMembers",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "guild",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "options",
                  "optional": false,
                  "tsType": {
                    "repr": "RequestMembersOptions",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "RequestMembersOptions"
                    }
                  }
                },
                "right": "<UNIMPLEMENTED>",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/gateway/index.ts",
            "line": 361,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "updateVoiceState",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "guild",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "Guild",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Guild"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "channel",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "VoiceChannel",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "VoiceChannel"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "voiceOptions",
                  "optional": false,
                  "tsType": {
                    "repr": "VoiceStateOptions",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "VoiceStateOptions"
                    }
                  }
                },
                "right": "<UNIMPLEMENTED>",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/gateway/index.ts",
            "line": 381,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "debug",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "msg",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/gateway/index.ts",
            "line": 402,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "reconnect",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "forceNew",
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/gateway/index.ts",
            "line": 406,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "initWebsocket",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/gateway/index.ts",
            "line": 419,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "close",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "code",
                  "optional": false,
                  "tsType": {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  }
                },
                "right": "<UNIMPLEMENTED>",
                "tsType": null
              },
              {
                "kind": "identifier",
                "name": "reason",
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/gateway/index.ts",
            "line": 434,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "send",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "GatewayResponse",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GatewayResponse"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/gateway/index.ts",
            "line": 438,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "sendPresence",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "StatusUpdatePayload",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "StatusUpdatePayload"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/gateway/index.ts",
            "line": 450,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "sendHeartbeat",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/gateway/index.ts",
            "line": 457,
            "col": 2
          }
        },
        {
          "jsDoc": null,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "heartbeat",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///Users/helloyunho/Proejcts/harmony/src/gateway/index.ts",
            "line": 467,
            "col": 2
          }
        }
      ],
      "extends": "HarmonyEventEmitter",
      "implements": [],
      "typeParams": [],
      "superTypeParams": [
        {
          "repr": "GatewayTypedEvents",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GatewayTypedEvents"
          }
        }
      ]
    }
  },
  {
    "kind": "typeAlias",
    "name": "GatewayTypedEvents",
    "location": {
      "filename": "file:///Users/helloyunho/Proejcts/harmony/src/gateway/index.ts",
      "line": 38,
      "col": 0
    },
    "jsDoc": null,
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "intersection",
        "intersection": [
          {
            "repr": "<UNIMPLEMENTED>",
            "kind": null
          },
          {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [
                {
                  "name": "connect",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "",
                    "kind": "tuple",
                    "tuple": []
                  },
                  "typeParams": []
                },
                {
                  "name": "ping",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "",
                    "kind": "tuple",
                    "tuple": [
                      {
                        "repr": "number",
                        "kind": "keyword",
                        "keyword": "number"
                      }
                    ]
                  },
                  "typeParams": []
                },
                {
                  "name": "resume",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "",
                    "kind": "tuple",
                    "tuple": []
                  },
                  "typeParams": []
                },
                {
                  "name": "reconnectRequired",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "",
                    "kind": "tuple",
                    "tuple": []
                  },
                  "typeParams": []
                },
                {
                  "name": "close",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "",
                    "kind": "tuple",
                    "tuple": [
                      {
                        "repr": "number",
                        "kind": "keyword",
                        "keyword": "number"
                      },
                      {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    ]
                  },
                  "typeParams": []
                },
                {
                  "name": "error",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "",
                    "kind": "tuple",
                    "tuple": [
                      {
                        "repr": "Error",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Error"
                        }
                      },
                      {
                        "repr": "ErrorEvent",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "ErrorEvent"
                        }
                      }
                    ]
                  },
                  "typeParams": []
                },
                {
                  "name": "sentIdentify",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "",
                    "kind": "tuple",
                    "tuple": []
                  },
                  "typeParams": []
                },
                {
                  "name": "sentResume",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "",
                    "kind": "tuple",
                    "tuple": []
                  },
                  "typeParams": []
                },
                {
                  "name": "reconnecting",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "",
                    "kind": "tuple",
                    "tuple": []
                  },
                  "typeParams": []
                },
                {
                  "name": "init",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "",
                    "kind": "tuple",
                    "tuple": []
                  },
                  "typeParams": []
                }
              ],
              "callSignatures": [],
              "indexSignatures": []
            }
          }
        ]
      },
      "typeParams": []
    }
  }
]